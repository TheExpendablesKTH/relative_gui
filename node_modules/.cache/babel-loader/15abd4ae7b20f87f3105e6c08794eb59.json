{"ast":null,"code":"/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\"); // Common aliases\n\n\nvar $Reader = $protobuf.Reader,\n    $Writer = $protobuf.Writer,\n    $util = $protobuf.util; // Exported root namespace\n\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.SdkSignalFrame = function () {\n  /**\n   * Properties of a SdkSignalFrame.\n   * @exports ISdkSignalFrame\n   * @interface ISdkSignalFrame\n   * @property {number|Long} timestampMs SdkSignalFrame timestampMs\n   * @property {SdkSignalFrame.Type} type SdkSignalFrame type\n   * @property {ISdkErrorFrame|null} [error] SdkSignalFrame error\n   * @property {ISdkJoinFrame|null} [join] SdkSignalFrame join\n   * @property {ISdkJoinAckFrame|null} [joinack] SdkSignalFrame joinack\n   * @property {ISdkSubscribeFrame|null} [sub] SdkSignalFrame sub\n   * @property {ISdkSubscribeAckFrame|null} [suback] SdkSignalFrame suback\n   * @property {ISdkIndexFrame|null} [index] SdkSignalFrame index\n   * @property {ISdkPauseResumeFrame|null} [pause] SdkSignalFrame pause\n   * @property {ISdkLeaveFrame|null} [leave] SdkSignalFrame leave\n   * @property {ISdkLeaveAckFrame|null} [leaveAck] SdkSignalFrame leaveAck\n   * @property {ISdkBitrateFrame|null} [bitrates] SdkSignalFrame bitrates\n   * @property {ISdkAudioControlFrame|null} [audioControl] SdkSignalFrame audioControl\n   * @property {ISdkAudioMetadataFrame|null} [audioMetadata] SdkSignalFrame audioMetadata\n   * @property {ISdkAudioStreamIdInfoFrame|null} [audioStreamIdInfo] SdkSignalFrame audioStreamIdInfo\n   * @property {ISdkPingPongFrame|null} [pingPong] SdkSignalFrame pingPong\n   * @property {ISdkAudioStatusFrame|null} [audioStatus] SdkSignalFrame audioStatus\n   * @property {ISdkClientMetricFrame|null} [clientMetric] SdkSignalFrame clientMetric\n   * @property {ISdkDataMessageFrame|null} [dataMessage] SdkSignalFrame dataMessage\n   */\n\n  /**\n   * Constructs a new SdkSignalFrame.\n   * @exports SdkSignalFrame\n   * @classdesc Represents a SdkSignalFrame.\n   * @implements ISdkSignalFrame\n   * @constructor\n   * @param {ISdkSignalFrame=} [properties] Properties to set\n   */\n  function SdkSignalFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkSignalFrame timestampMs.\n   * @member {number|Long} timestampMs\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n\n  SdkSignalFrame.prototype.timestampMs = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * SdkSignalFrame type.\n   * @member {SdkSignalFrame.Type} type\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.type = 1;\n  /**\n   * SdkSignalFrame error.\n   * @member {ISdkErrorFrame|null|undefined} error\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.error = null;\n  /**\n   * SdkSignalFrame join.\n   * @member {ISdkJoinFrame|null|undefined} join\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.join = null;\n  /**\n   * SdkSignalFrame joinack.\n   * @member {ISdkJoinAckFrame|null|undefined} joinack\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.joinack = null;\n  /**\n   * SdkSignalFrame sub.\n   * @member {ISdkSubscribeFrame|null|undefined} sub\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.sub = null;\n  /**\n   * SdkSignalFrame suback.\n   * @member {ISdkSubscribeAckFrame|null|undefined} suback\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.suback = null;\n  /**\n   * SdkSignalFrame index.\n   * @member {ISdkIndexFrame|null|undefined} index\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.index = null;\n  /**\n   * SdkSignalFrame pause.\n   * @member {ISdkPauseResumeFrame|null|undefined} pause\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.pause = null;\n  /**\n   * SdkSignalFrame leave.\n   * @member {ISdkLeaveFrame|null|undefined} leave\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.leave = null;\n  /**\n   * SdkSignalFrame leaveAck.\n   * @member {ISdkLeaveAckFrame|null|undefined} leaveAck\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.leaveAck = null;\n  /**\n   * SdkSignalFrame bitrates.\n   * @member {ISdkBitrateFrame|null|undefined} bitrates\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.bitrates = null;\n  /**\n   * SdkSignalFrame audioControl.\n   * @member {ISdkAudioControlFrame|null|undefined} audioControl\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.audioControl = null;\n  /**\n   * SdkSignalFrame audioMetadata.\n   * @member {ISdkAudioMetadataFrame|null|undefined} audioMetadata\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.audioMetadata = null;\n  /**\n   * SdkSignalFrame audioStreamIdInfo.\n   * @member {ISdkAudioStreamIdInfoFrame|null|undefined} audioStreamIdInfo\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.audioStreamIdInfo = null;\n  /**\n   * SdkSignalFrame pingPong.\n   * @member {ISdkPingPongFrame|null|undefined} pingPong\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.pingPong = null;\n  /**\n   * SdkSignalFrame audioStatus.\n   * @member {ISdkAudioStatusFrame|null|undefined} audioStatus\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.audioStatus = null;\n  /**\n   * SdkSignalFrame clientMetric.\n   * @member {ISdkClientMetricFrame|null|undefined} clientMetric\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.clientMetric = null;\n  /**\n   * SdkSignalFrame dataMessage.\n   * @member {ISdkDataMessageFrame|null|undefined} dataMessage\n   * @memberof SdkSignalFrame\n   * @instance\n   */\n\n  SdkSignalFrame.prototype.dataMessage = null;\n  /**\n   * Creates a new SdkSignalFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {ISdkSignalFrame=} [properties] Properties to set\n   * @returns {SdkSignalFrame} SdkSignalFrame instance\n   */\n\n  SdkSignalFrame.create = function create(properties) {\n    return new SdkSignalFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkSignalFrame message. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSignalFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.timestampMs);\n    writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).int32(message.type);\n    if (message.error != null && message.hasOwnProperty(\"error\")) $root.SdkErrorFrame.encode(message.error, writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).fork()).ldelim();\n    if (message.join != null && message.hasOwnProperty(\"join\")) $root.SdkJoinFrame.encode(message.join, writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).fork()).ldelim();\n    if (message.joinack != null && message.hasOwnProperty(\"joinack\")) $root.SdkJoinAckFrame.encode(message.joinack, writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).fork()).ldelim();\n    if (message.sub != null && message.hasOwnProperty(\"sub\")) $root.SdkSubscribeFrame.encode(message.sub, writer.uint32(\n    /* id 6, wireType 2 =*/\n    50).fork()).ldelim();\n    if (message.suback != null && message.hasOwnProperty(\"suback\")) $root.SdkSubscribeAckFrame.encode(message.suback, writer.uint32(\n    /* id 7, wireType 2 =*/\n    58).fork()).ldelim();\n    if (message.index != null && message.hasOwnProperty(\"index\")) $root.SdkIndexFrame.encode(message.index, writer.uint32(\n    /* id 8, wireType 2 =*/\n    66).fork()).ldelim();\n    if (message.pause != null && message.hasOwnProperty(\"pause\")) $root.SdkPauseResumeFrame.encode(message.pause, writer.uint32(\n    /* id 10, wireType 2 =*/\n    82).fork()).ldelim();\n    if (message.leave != null && message.hasOwnProperty(\"leave\")) $root.SdkLeaveFrame.encode(message.leave, writer.uint32(\n    /* id 11, wireType 2 =*/\n    90).fork()).ldelim();\n    if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) $root.SdkLeaveAckFrame.encode(message.leaveAck, writer.uint32(\n    /* id 12, wireType 2 =*/\n    98).fork()).ldelim();\n    if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) $root.SdkBitrateFrame.encode(message.bitrates, writer.uint32(\n    /* id 14, wireType 2 =*/\n    114).fork()).ldelim();\n    if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) $root.SdkAudioControlFrame.encode(message.audioControl, writer.uint32(\n    /* id 17, wireType 2 =*/\n    138).fork()).ldelim();\n    if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) $root.SdkAudioMetadataFrame.encode(message.audioMetadata, writer.uint32(\n    /* id 18, wireType 2 =*/\n    146).fork()).ldelim();\n    if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) $root.SdkAudioStreamIdInfoFrame.encode(message.audioStreamIdInfo, writer.uint32(\n    /* id 19, wireType 2 =*/\n    154).fork()).ldelim();\n    if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) $root.SdkPingPongFrame.encode(message.pingPong, writer.uint32(\n    /* id 20, wireType 2 =*/\n    162).fork()).ldelim();\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) $root.SdkAudioStatusFrame.encode(message.audioStatus, writer.uint32(\n    /* id 21, wireType 2 =*/\n    170).fork()).ldelim();\n    if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) $root.SdkClientMetricFrame.encode(message.clientMetric, writer.uint32(\n    /* id 22, wireType 2 =*/\n    178).fork()).ldelim();\n    if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) $root.SdkDataMessageFrame.encode(message.dataMessage, writer.uint32(\n    /* id 23, wireType 2 =*/\n    186).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkSignalFrame message, length delimited. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSignalFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkSignalFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkSignalFrame} SdkSignalFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSignalFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkSignalFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.timestampMs = reader.uint64();\n          break;\n\n        case 2:\n          message.type = reader.int32();\n          break;\n\n        case 3:\n          message.error = $root.SdkErrorFrame.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.join = $root.SdkJoinFrame.decode(reader, reader.uint32());\n          break;\n\n        case 5:\n          message.joinack = $root.SdkJoinAckFrame.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.sub = $root.SdkSubscribeFrame.decode(reader, reader.uint32());\n          break;\n\n        case 7:\n          message.suback = $root.SdkSubscribeAckFrame.decode(reader, reader.uint32());\n          break;\n\n        case 8:\n          message.index = $root.SdkIndexFrame.decode(reader, reader.uint32());\n          break;\n\n        case 10:\n          message.pause = $root.SdkPauseResumeFrame.decode(reader, reader.uint32());\n          break;\n\n        case 11:\n          message.leave = $root.SdkLeaveFrame.decode(reader, reader.uint32());\n          break;\n\n        case 12:\n          message.leaveAck = $root.SdkLeaveAckFrame.decode(reader, reader.uint32());\n          break;\n\n        case 14:\n          message.bitrates = $root.SdkBitrateFrame.decode(reader, reader.uint32());\n          break;\n\n        case 17:\n          message.audioControl = $root.SdkAudioControlFrame.decode(reader, reader.uint32());\n          break;\n\n        case 18:\n          message.audioMetadata = $root.SdkAudioMetadataFrame.decode(reader, reader.uint32());\n          break;\n\n        case 19:\n          message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.decode(reader, reader.uint32());\n          break;\n\n        case 20:\n          message.pingPong = $root.SdkPingPongFrame.decode(reader, reader.uint32());\n          break;\n\n        case 21:\n          message.audioStatus = $root.SdkAudioStatusFrame.decode(reader, reader.uint32());\n          break;\n\n        case 22:\n          message.clientMetric = $root.SdkClientMetricFrame.decode(reader, reader.uint32());\n          break;\n\n        case 23:\n          message.dataMessage = $root.SdkDataMessageFrame.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    if (!message.hasOwnProperty(\"timestampMs\")) throw $util.ProtocolError(\"missing required 'timestampMs'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"type\")) throw $util.ProtocolError(\"missing required 'type'\", {\n      instance: message\n    });\n    return message;\n  };\n  /**\n   * Decodes a SdkSignalFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkSignalFrame} SdkSignalFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSignalFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkSignalFrame message.\n   * @function verify\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkSignalFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (!$util.isInteger(message.timestampMs) && !(message.timestampMs && $util.isInteger(message.timestampMs.low) && $util.isInteger(message.timestampMs.high))) return \"timestampMs: integer|Long expected\";\n\n    switch (message.type) {\n      default:\n        return \"type: enum value expected\";\n\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 13:\n      case 16:\n      case 17:\n      case 18:\n      case 19:\n      case 20:\n      case 21:\n      case 22:\n        break;\n    }\n\n    if (message.error != null && message.hasOwnProperty(\"error\")) {\n      var error = $root.SdkErrorFrame.verify(message.error);\n      if (error) return \"error.\" + error;\n    }\n\n    if (message.join != null && message.hasOwnProperty(\"join\")) {\n      var error = $root.SdkJoinFrame.verify(message.join);\n      if (error) return \"join.\" + error;\n    }\n\n    if (message.joinack != null && message.hasOwnProperty(\"joinack\")) {\n      var error = $root.SdkJoinAckFrame.verify(message.joinack);\n      if (error) return \"joinack.\" + error;\n    }\n\n    if (message.sub != null && message.hasOwnProperty(\"sub\")) {\n      var error = $root.SdkSubscribeFrame.verify(message.sub);\n      if (error) return \"sub.\" + error;\n    }\n\n    if (message.suback != null && message.hasOwnProperty(\"suback\")) {\n      var error = $root.SdkSubscribeAckFrame.verify(message.suback);\n      if (error) return \"suback.\" + error;\n    }\n\n    if (message.index != null && message.hasOwnProperty(\"index\")) {\n      var error = $root.SdkIndexFrame.verify(message.index);\n      if (error) return \"index.\" + error;\n    }\n\n    if (message.pause != null && message.hasOwnProperty(\"pause\")) {\n      var error = $root.SdkPauseResumeFrame.verify(message.pause);\n      if (error) return \"pause.\" + error;\n    }\n\n    if (message.leave != null && message.hasOwnProperty(\"leave\")) {\n      var error = $root.SdkLeaveFrame.verify(message.leave);\n      if (error) return \"leave.\" + error;\n    }\n\n    if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) {\n      var error = $root.SdkLeaveAckFrame.verify(message.leaveAck);\n      if (error) return \"leaveAck.\" + error;\n    }\n\n    if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n      var error = $root.SdkBitrateFrame.verify(message.bitrates);\n      if (error) return \"bitrates.\" + error;\n    }\n\n    if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) {\n      var error = $root.SdkAudioControlFrame.verify(message.audioControl);\n      if (error) return \"audioControl.\" + error;\n    }\n\n    if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) {\n      var error = $root.SdkAudioMetadataFrame.verify(message.audioMetadata);\n      if (error) return \"audioMetadata.\" + error;\n    }\n\n    if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) {\n      var error = $root.SdkAudioStreamIdInfoFrame.verify(message.audioStreamIdInfo);\n      if (error) return \"audioStreamIdInfo.\" + error;\n    }\n\n    if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) {\n      var error = $root.SdkPingPongFrame.verify(message.pingPong);\n      if (error) return \"pingPong.\" + error;\n    }\n\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) {\n      var error = $root.SdkAudioStatusFrame.verify(message.audioStatus);\n      if (error) return \"audioStatus.\" + error;\n    }\n\n    if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) {\n      var error = $root.SdkClientMetricFrame.verify(message.clientMetric);\n      if (error) return \"clientMetric.\" + error;\n    }\n\n    if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) {\n      var error = $root.SdkDataMessageFrame.verify(message.dataMessage);\n      if (error) return \"dataMessage.\" + error;\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkSignalFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkSignalFrame} SdkSignalFrame\n   */\n\n\n  SdkSignalFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkSignalFrame) return object;\n    var message = new $root.SdkSignalFrame();\n    if (object.timestampMs != null) if ($util.Long) (message.timestampMs = $util.Long.fromValue(object.timestampMs)).unsigned = true;else if (typeof object.timestampMs === \"string\") message.timestampMs = parseInt(object.timestampMs, 10);else if (typeof object.timestampMs === \"number\") message.timestampMs = object.timestampMs;else if (typeof object.timestampMs === \"object\") message.timestampMs = new $util.LongBits(object.timestampMs.low >>> 0, object.timestampMs.high >>> 0).toNumber(true);\n\n    switch (object.type) {\n      case \"JOIN\":\n      case 1:\n        message.type = 1;\n        break;\n\n      case \"JOIN_ACK\":\n      case 2:\n        message.type = 2;\n        break;\n\n      case \"SUBSCRIBE\":\n      case 3:\n        message.type = 3;\n        break;\n\n      case \"SUBSCRIBE_ACK\":\n      case 4:\n        message.type = 4;\n        break;\n\n      case \"INDEX\":\n      case 5:\n        message.type = 5;\n        break;\n\n      case \"PAUSE\":\n      case 7:\n        message.type = 7;\n        break;\n\n      case \"RESUME\":\n      case 8:\n        message.type = 8;\n        break;\n\n      case \"LEAVE\":\n      case 9:\n        message.type = 9;\n        break;\n\n      case \"LEAVE_ACK\":\n      case 10:\n        message.type = 10;\n        break;\n\n      case \"BITRATES\":\n      case 13:\n        message.type = 13;\n        break;\n\n      case \"AUDIO_CONTROL\":\n      case 16:\n        message.type = 16;\n        break;\n\n      case \"AUDIO_METADATA\":\n      case 17:\n        message.type = 17;\n        break;\n\n      case \"AUDIO_STREAM_ID_INFO\":\n      case 18:\n        message.type = 18;\n        break;\n\n      case \"PING_PONG\":\n      case 19:\n        message.type = 19;\n        break;\n\n      case \"AUDIO_STATUS\":\n      case 20:\n        message.type = 20;\n        break;\n\n      case \"CLIENT_METRIC\":\n      case 21:\n        message.type = 21;\n        break;\n\n      case \"DATA_MESSAGE\":\n      case 22:\n        message.type = 22;\n        break;\n    }\n\n    if (object.error != null) {\n      if (typeof object.error !== \"object\") throw TypeError(\".SdkSignalFrame.error: object expected\");\n      message.error = $root.SdkErrorFrame.fromObject(object.error);\n    }\n\n    if (object.join != null) {\n      if (typeof object.join !== \"object\") throw TypeError(\".SdkSignalFrame.join: object expected\");\n      message.join = $root.SdkJoinFrame.fromObject(object.join);\n    }\n\n    if (object.joinack != null) {\n      if (typeof object.joinack !== \"object\") throw TypeError(\".SdkSignalFrame.joinack: object expected\");\n      message.joinack = $root.SdkJoinAckFrame.fromObject(object.joinack);\n    }\n\n    if (object.sub != null) {\n      if (typeof object.sub !== \"object\") throw TypeError(\".SdkSignalFrame.sub: object expected\");\n      message.sub = $root.SdkSubscribeFrame.fromObject(object.sub);\n    }\n\n    if (object.suback != null) {\n      if (typeof object.suback !== \"object\") throw TypeError(\".SdkSignalFrame.suback: object expected\");\n      message.suback = $root.SdkSubscribeAckFrame.fromObject(object.suback);\n    }\n\n    if (object.index != null) {\n      if (typeof object.index !== \"object\") throw TypeError(\".SdkSignalFrame.index: object expected\");\n      message.index = $root.SdkIndexFrame.fromObject(object.index);\n    }\n\n    if (object.pause != null) {\n      if (typeof object.pause !== \"object\") throw TypeError(\".SdkSignalFrame.pause: object expected\");\n      message.pause = $root.SdkPauseResumeFrame.fromObject(object.pause);\n    }\n\n    if (object.leave != null) {\n      if (typeof object.leave !== \"object\") throw TypeError(\".SdkSignalFrame.leave: object expected\");\n      message.leave = $root.SdkLeaveFrame.fromObject(object.leave);\n    }\n\n    if (object.leaveAck != null) {\n      if (typeof object.leaveAck !== \"object\") throw TypeError(\".SdkSignalFrame.leaveAck: object expected\");\n      message.leaveAck = $root.SdkLeaveAckFrame.fromObject(object.leaveAck);\n    }\n\n    if (object.bitrates != null) {\n      if (typeof object.bitrates !== \"object\") throw TypeError(\".SdkSignalFrame.bitrates: object expected\");\n      message.bitrates = $root.SdkBitrateFrame.fromObject(object.bitrates);\n    }\n\n    if (object.audioControl != null) {\n      if (typeof object.audioControl !== \"object\") throw TypeError(\".SdkSignalFrame.audioControl: object expected\");\n      message.audioControl = $root.SdkAudioControlFrame.fromObject(object.audioControl);\n    }\n\n    if (object.audioMetadata != null) {\n      if (typeof object.audioMetadata !== \"object\") throw TypeError(\".SdkSignalFrame.audioMetadata: object expected\");\n      message.audioMetadata = $root.SdkAudioMetadataFrame.fromObject(object.audioMetadata);\n    }\n\n    if (object.audioStreamIdInfo != null) {\n      if (typeof object.audioStreamIdInfo !== \"object\") throw TypeError(\".SdkSignalFrame.audioStreamIdInfo: object expected\");\n      message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.fromObject(object.audioStreamIdInfo);\n    }\n\n    if (object.pingPong != null) {\n      if (typeof object.pingPong !== \"object\") throw TypeError(\".SdkSignalFrame.pingPong: object expected\");\n      message.pingPong = $root.SdkPingPongFrame.fromObject(object.pingPong);\n    }\n\n    if (object.audioStatus != null) {\n      if (typeof object.audioStatus !== \"object\") throw TypeError(\".SdkSignalFrame.audioStatus: object expected\");\n      message.audioStatus = $root.SdkAudioStatusFrame.fromObject(object.audioStatus);\n    }\n\n    if (object.clientMetric != null) {\n      if (typeof object.clientMetric !== \"object\") throw TypeError(\".SdkSignalFrame.clientMetric: object expected\");\n      message.clientMetric = $root.SdkClientMetricFrame.fromObject(object.clientMetric);\n    }\n\n    if (object.dataMessage != null) {\n      if (typeof object.dataMessage !== \"object\") throw TypeError(\".SdkSignalFrame.dataMessage: object expected\");\n      message.dataMessage = $root.SdkDataMessageFrame.fromObject(object.dataMessage);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkSignalFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkSignalFrame\n   * @static\n   * @param {SdkSignalFrame} message SdkSignalFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkSignalFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.timestampMs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.timestampMs = options.longs === String ? \"0\" : 0;\n\n      object.type = options.enums === String ? \"JOIN\" : 1;\n      object.error = null;\n      object.join = null;\n      object.joinack = null;\n      object.sub = null;\n      object.suback = null;\n      object.index = null;\n      object.pause = null;\n      object.leave = null;\n      object.leaveAck = null;\n      object.bitrates = null;\n      object.audioControl = null;\n      object.audioMetadata = null;\n      object.audioStreamIdInfo = null;\n      object.pingPong = null;\n      object.audioStatus = null;\n      object.clientMetric = null;\n      object.dataMessage = null;\n    }\n\n    if (message.timestampMs != null && message.hasOwnProperty(\"timestampMs\")) if (typeof message.timestampMs === \"number\") object.timestampMs = options.longs === String ? String(message.timestampMs) : message.timestampMs;else object.timestampMs = options.longs === String ? $util.Long.prototype.toString.call(message.timestampMs) : options.longs === Number ? new $util.LongBits(message.timestampMs.low >>> 0, message.timestampMs.high >>> 0).toNumber(true) : message.timestampMs;\n    if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.SdkSignalFrame.Type[message.type] : message.type;\n    if (message.error != null && message.hasOwnProperty(\"error\")) object.error = $root.SdkErrorFrame.toObject(message.error, options);\n    if (message.join != null && message.hasOwnProperty(\"join\")) object.join = $root.SdkJoinFrame.toObject(message.join, options);\n    if (message.joinack != null && message.hasOwnProperty(\"joinack\")) object.joinack = $root.SdkJoinAckFrame.toObject(message.joinack, options);\n    if (message.sub != null && message.hasOwnProperty(\"sub\")) object.sub = $root.SdkSubscribeFrame.toObject(message.sub, options);\n    if (message.suback != null && message.hasOwnProperty(\"suback\")) object.suback = $root.SdkSubscribeAckFrame.toObject(message.suback, options);\n    if (message.index != null && message.hasOwnProperty(\"index\")) object.index = $root.SdkIndexFrame.toObject(message.index, options);\n    if (message.pause != null && message.hasOwnProperty(\"pause\")) object.pause = $root.SdkPauseResumeFrame.toObject(message.pause, options);\n    if (message.leave != null && message.hasOwnProperty(\"leave\")) object.leave = $root.SdkLeaveFrame.toObject(message.leave, options);\n    if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) object.leaveAck = $root.SdkLeaveAckFrame.toObject(message.leaveAck, options);\n    if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) object.bitrates = $root.SdkBitrateFrame.toObject(message.bitrates, options);\n    if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) object.audioControl = $root.SdkAudioControlFrame.toObject(message.audioControl, options);\n    if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) object.audioMetadata = $root.SdkAudioMetadataFrame.toObject(message.audioMetadata, options);\n    if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) object.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.toObject(message.audioStreamIdInfo, options);\n    if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) object.pingPong = $root.SdkPingPongFrame.toObject(message.pingPong, options);\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) object.audioStatus = $root.SdkAudioStatusFrame.toObject(message.audioStatus, options);\n    if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) object.clientMetric = $root.SdkClientMetricFrame.toObject(message.clientMetric, options);\n    if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) object.dataMessage = $root.SdkDataMessageFrame.toObject(message.dataMessage, options);\n    return object;\n  };\n  /**\n   * Converts this SdkSignalFrame to JSON.\n   * @function toJSON\n   * @memberof SdkSignalFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkSignalFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  /**\n   * Type enum.\n   * @name SdkSignalFrame.Type\n   * @enum {string}\n   * @property {number} JOIN=1 JOIN value\n   * @property {number} JOIN_ACK=2 JOIN_ACK value\n   * @property {number} SUBSCRIBE=3 SUBSCRIBE value\n   * @property {number} SUBSCRIBE_ACK=4 SUBSCRIBE_ACK value\n   * @property {number} INDEX=5 INDEX value\n   * @property {number} PAUSE=7 PAUSE value\n   * @property {number} RESUME=8 RESUME value\n   * @property {number} LEAVE=9 LEAVE value\n   * @property {number} LEAVE_ACK=10 LEAVE_ACK value\n   * @property {number} BITRATES=13 BITRATES value\n   * @property {number} AUDIO_CONTROL=16 AUDIO_CONTROL value\n   * @property {number} AUDIO_METADATA=17 AUDIO_METADATA value\n   * @property {number} AUDIO_STREAM_ID_INFO=18 AUDIO_STREAM_ID_INFO value\n   * @property {number} PING_PONG=19 PING_PONG value\n   * @property {number} AUDIO_STATUS=20 AUDIO_STATUS value\n   * @property {number} CLIENT_METRIC=21 CLIENT_METRIC value\n   * @property {number} DATA_MESSAGE=22 DATA_MESSAGE value\n   */\n\n\n  SdkSignalFrame.Type = function () {\n    var valuesById = {},\n        values = Object.create(valuesById);\n    values[valuesById[1] = \"JOIN\"] = 1;\n    values[valuesById[2] = \"JOIN_ACK\"] = 2;\n    values[valuesById[3] = \"SUBSCRIBE\"] = 3;\n    values[valuesById[4] = \"SUBSCRIBE_ACK\"] = 4;\n    values[valuesById[5] = \"INDEX\"] = 5;\n    values[valuesById[7] = \"PAUSE\"] = 7;\n    values[valuesById[8] = \"RESUME\"] = 8;\n    values[valuesById[9] = \"LEAVE\"] = 9;\n    values[valuesById[10] = \"LEAVE_ACK\"] = 10;\n    values[valuesById[13] = \"BITRATES\"] = 13;\n    values[valuesById[16] = \"AUDIO_CONTROL\"] = 16;\n    values[valuesById[17] = \"AUDIO_METADATA\"] = 17;\n    values[valuesById[18] = \"AUDIO_STREAM_ID_INFO\"] = 18;\n    values[valuesById[19] = \"PING_PONG\"] = 19;\n    values[valuesById[20] = \"AUDIO_STATUS\"] = 20;\n    values[valuesById[21] = \"CLIENT_METRIC\"] = 21;\n    values[valuesById[22] = \"DATA_MESSAGE\"] = 22;\n    return values;\n  }();\n\n  return SdkSignalFrame;\n}();\n\n$root.SdkErrorFrame = function () {\n  /**\n   * Properties of a SdkErrorFrame.\n   * @exports ISdkErrorFrame\n   * @interface ISdkErrorFrame\n   * @property {number|null} [status] SdkErrorFrame status\n   * @property {string|null} [description] SdkErrorFrame description\n   */\n\n  /**\n   * Constructs a new SdkErrorFrame.\n   * @exports SdkErrorFrame\n   * @classdesc Represents a SdkErrorFrame.\n   * @implements ISdkErrorFrame\n   * @constructor\n   * @param {ISdkErrorFrame=} [properties] Properties to set\n   */\n  function SdkErrorFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkErrorFrame status.\n   * @member {number} status\n   * @memberof SdkErrorFrame\n   * @instance\n   */\n\n\n  SdkErrorFrame.prototype.status = 0;\n  /**\n   * SdkErrorFrame description.\n   * @member {string} description\n   * @memberof SdkErrorFrame\n   * @instance\n   */\n\n  SdkErrorFrame.prototype.description = \"\";\n  /**\n   * Creates a new SdkErrorFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {ISdkErrorFrame=} [properties] Properties to set\n   * @returns {SdkErrorFrame} SdkErrorFrame instance\n   */\n\n  SdkErrorFrame.create = function create(properties) {\n    return new SdkErrorFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkErrorFrame message. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkErrorFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.status != null && message.hasOwnProperty(\"status\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.status);\n    if (message.description != null && message.hasOwnProperty(\"description\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.description);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkErrorFrame message, length delimited. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkErrorFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkErrorFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkErrorFrame} SdkErrorFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkErrorFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkErrorFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.status = reader.uint32();\n          break;\n\n        case 2:\n          message.description = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkErrorFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkErrorFrame} SdkErrorFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkErrorFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkErrorFrame message.\n   * @function verify\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkErrorFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.status != null && message.hasOwnProperty(\"status\")) if (!$util.isInteger(message.status)) return \"status: integer expected\";\n    if (message.description != null && message.hasOwnProperty(\"description\")) if (!$util.isString(message.description)) return \"description: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkErrorFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkErrorFrame} SdkErrorFrame\n   */\n\n\n  SdkErrorFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkErrorFrame) return object;\n    var message = new $root.SdkErrorFrame();\n    if (object.status != null) message.status = object.status >>> 0;\n    if (object.description != null) message.description = String(object.description);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkErrorFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkErrorFrame\n   * @static\n   * @param {SdkErrorFrame} message SdkErrorFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkErrorFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.status = 0;\n      object.description = \"\";\n    }\n\n    if (message.status != null && message.hasOwnProperty(\"status\")) object.status = message.status;\n    if (message.description != null && message.hasOwnProperty(\"description\")) object.description = message.description;\n    return object;\n  };\n  /**\n   * Converts this SdkErrorFrame to JSON.\n   * @function toJSON\n   * @memberof SdkErrorFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkErrorFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkErrorFrame;\n}();\n/**\n * SdkJoinFlags enum.\n * @exports SdkJoinFlags\n * @enum {string}\n * @property {number} SEND_BITRATES=1 SEND_BITRATES value\n * @property {number} HAS_STREAM_UPDATE=2 HAS_STREAM_UPDATE value\n * @property {number} USE_SEND_SIDE_BWE=8 USE_SEND_SIDE_BWE value\n * @property {number} COMPLETE_VIDEO_SOURCES_LIST=16 COMPLETE_VIDEO_SOURCES_LIST value\n * @property {number} EXCLUDE_SELF_CONTENT_IN_INDEX=32 EXCLUDE_SELF_CONTENT_IN_INDEX value\n */\n\n\n$root.SdkJoinFlags = function () {\n  var valuesById = {},\n      values = Object.create(valuesById);\n  values[valuesById[1] = \"SEND_BITRATES\"] = 1;\n  values[valuesById[2] = \"HAS_STREAM_UPDATE\"] = 2;\n  values[valuesById[8] = \"USE_SEND_SIDE_BWE\"] = 8;\n  values[valuesById[16] = \"COMPLETE_VIDEO_SOURCES_LIST\"] = 16;\n  values[valuesById[32] = \"EXCLUDE_SELF_CONTENT_IN_INDEX\"] = 32;\n  return values;\n}();\n\n$root.SdkClientDetails = function () {\n  /**\n   * Properties of a SdkClientDetails.\n   * @exports ISdkClientDetails\n   * @interface ISdkClientDetails\n   * @property {string|null} [appVersionName] SdkClientDetails appVersionName\n   * @property {string|null} [appVersionCode] SdkClientDetails appVersionCode\n   * @property {string|null} [deviceModel] SdkClientDetails deviceModel\n   * @property {string|null} [deviceMake] SdkClientDetails deviceMake\n   * @property {string|null} [platformName] SdkClientDetails platformName\n   * @property {string|null} [platformVersion] SdkClientDetails platformVersion\n   * @property {string|null} [clientSource] SdkClientDetails clientSource\n   * @property {string|null} [chimeSdkVersion] SdkClientDetails chimeSdkVersion\n   */\n\n  /**\n   * Constructs a new SdkClientDetails.\n   * @exports SdkClientDetails\n   * @classdesc Represents a SdkClientDetails.\n   * @implements ISdkClientDetails\n   * @constructor\n   * @param {ISdkClientDetails=} [properties] Properties to set\n   */\n  function SdkClientDetails(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkClientDetails appVersionName.\n   * @member {string} appVersionName\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n\n  SdkClientDetails.prototype.appVersionName = \"\";\n  /**\n   * SdkClientDetails appVersionCode.\n   * @member {string} appVersionCode\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.appVersionCode = \"\";\n  /**\n   * SdkClientDetails deviceModel.\n   * @member {string} deviceModel\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.deviceModel = \"\";\n  /**\n   * SdkClientDetails deviceMake.\n   * @member {string} deviceMake\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.deviceMake = \"\";\n  /**\n   * SdkClientDetails platformName.\n   * @member {string} platformName\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.platformName = \"\";\n  /**\n   * SdkClientDetails platformVersion.\n   * @member {string} platformVersion\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.platformVersion = \"\";\n  /**\n   * SdkClientDetails clientSource.\n   * @member {string} clientSource\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.clientSource = \"\";\n  /**\n   * SdkClientDetails chimeSdkVersion.\n   * @member {string} chimeSdkVersion\n   * @memberof SdkClientDetails\n   * @instance\n   */\n\n  SdkClientDetails.prototype.chimeSdkVersion = \"\";\n  /**\n   * Creates a new SdkClientDetails instance using the specified properties.\n   * @function create\n   * @memberof SdkClientDetails\n   * @static\n   * @param {ISdkClientDetails=} [properties] Properties to set\n   * @returns {SdkClientDetails} SdkClientDetails instance\n   */\n\n  SdkClientDetails.create = function create(properties) {\n    return new SdkClientDetails(properties);\n  };\n  /**\n   * Encodes the specified SdkClientDetails message. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n   * @function encode\n   * @memberof SdkClientDetails\n   * @static\n   * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkClientDetails.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.appVersionName != null && message.hasOwnProperty(\"appVersionName\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.appVersionName);\n    if (message.appVersionCode != null && message.hasOwnProperty(\"appVersionCode\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.appVersionCode);\n    if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.deviceModel);\n    if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.deviceMake);\n    if (message.platformName != null && message.hasOwnProperty(\"platformName\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).string(message.platformName);\n    if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\")) writer.uint32(\n    /* id 6, wireType 2 =*/\n    50).string(message.platformVersion);\n    if (message.clientSource != null && message.hasOwnProperty(\"clientSource\")) writer.uint32(\n    /* id 7, wireType 2 =*/\n    58).string(message.clientSource);\n    if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\")) writer.uint32(\n    /* id 8, wireType 2 =*/\n    66).string(message.chimeSdkVersion);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkClientDetails message, length delimited. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkClientDetails\n   * @static\n   * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkClientDetails.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkClientDetails message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkClientDetails\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkClientDetails} SdkClientDetails\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkClientDetails.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkClientDetails();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.appVersionName = reader.string();\n          break;\n\n        case 2:\n          message.appVersionCode = reader.string();\n          break;\n\n        case 3:\n          message.deviceModel = reader.string();\n          break;\n\n        case 4:\n          message.deviceMake = reader.string();\n          break;\n\n        case 5:\n          message.platformName = reader.string();\n          break;\n\n        case 6:\n          message.platformVersion = reader.string();\n          break;\n\n        case 7:\n          message.clientSource = reader.string();\n          break;\n\n        case 8:\n          message.chimeSdkVersion = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkClientDetails message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkClientDetails\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkClientDetails} SdkClientDetails\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkClientDetails.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkClientDetails message.\n   * @function verify\n   * @memberof SdkClientDetails\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkClientDetails.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.appVersionName != null && message.hasOwnProperty(\"appVersionName\")) if (!$util.isString(message.appVersionName)) return \"appVersionName: string expected\";\n    if (message.appVersionCode != null && message.hasOwnProperty(\"appVersionCode\")) if (!$util.isString(message.appVersionCode)) return \"appVersionCode: string expected\";\n    if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\")) if (!$util.isString(message.deviceModel)) return \"deviceModel: string expected\";\n    if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\")) if (!$util.isString(message.deviceMake)) return \"deviceMake: string expected\";\n    if (message.platformName != null && message.hasOwnProperty(\"platformName\")) if (!$util.isString(message.platformName)) return \"platformName: string expected\";\n    if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\")) if (!$util.isString(message.platformVersion)) return \"platformVersion: string expected\";\n    if (message.clientSource != null && message.hasOwnProperty(\"clientSource\")) if (!$util.isString(message.clientSource)) return \"clientSource: string expected\";\n    if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\")) if (!$util.isString(message.chimeSdkVersion)) return \"chimeSdkVersion: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkClientDetails message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkClientDetails\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkClientDetails} SdkClientDetails\n   */\n\n\n  SdkClientDetails.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkClientDetails) return object;\n    var message = new $root.SdkClientDetails();\n    if (object.appVersionName != null) message.appVersionName = String(object.appVersionName);\n    if (object.appVersionCode != null) message.appVersionCode = String(object.appVersionCode);\n    if (object.deviceModel != null) message.deviceModel = String(object.deviceModel);\n    if (object.deviceMake != null) message.deviceMake = String(object.deviceMake);\n    if (object.platformName != null) message.platformName = String(object.platformName);\n    if (object.platformVersion != null) message.platformVersion = String(object.platformVersion);\n    if (object.clientSource != null) message.clientSource = String(object.clientSource);\n    if (object.chimeSdkVersion != null) message.chimeSdkVersion = String(object.chimeSdkVersion);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkClientDetails message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkClientDetails\n   * @static\n   * @param {SdkClientDetails} message SdkClientDetails\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkClientDetails.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.appVersionName = \"\";\n      object.appVersionCode = \"\";\n      object.deviceModel = \"\";\n      object.deviceMake = \"\";\n      object.platformName = \"\";\n      object.platformVersion = \"\";\n      object.clientSource = \"\";\n      object.chimeSdkVersion = \"\";\n    }\n\n    if (message.appVersionName != null && message.hasOwnProperty(\"appVersionName\")) object.appVersionName = message.appVersionName;\n    if (message.appVersionCode != null && message.hasOwnProperty(\"appVersionCode\")) object.appVersionCode = message.appVersionCode;\n    if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\")) object.deviceModel = message.deviceModel;\n    if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\")) object.deviceMake = message.deviceMake;\n    if (message.platformName != null && message.hasOwnProperty(\"platformName\")) object.platformName = message.platformName;\n    if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\")) object.platformVersion = message.platformVersion;\n    if (message.clientSource != null && message.hasOwnProperty(\"clientSource\")) object.clientSource = message.clientSource;\n    if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\")) object.chimeSdkVersion = message.chimeSdkVersion;\n    return object;\n  };\n  /**\n   * Converts this SdkClientDetails to JSON.\n   * @function toJSON\n   * @memberof SdkClientDetails\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkClientDetails.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkClientDetails;\n}();\n\n$root.SdkJoinFrame = function () {\n  /**\n   * Properties of a SdkJoinFrame.\n   * @exports ISdkJoinFrame\n   * @interface ISdkJoinFrame\n   * @property {number|null} [protocolVersion] SdkJoinFrame protocolVersion\n   * @property {number|null} [maxNumOfVideos] SdkJoinFrame maxNumOfVideos\n   * @property {number|null} [flags] SdkJoinFrame flags\n   * @property {ISdkClientDetails|null} [clientDetails] SdkJoinFrame clientDetails\n   * @property {number|Long|null} [audioSessionId] SdkJoinFrame audioSessionId\n   */\n\n  /**\n   * Constructs a new SdkJoinFrame.\n   * @exports SdkJoinFrame\n   * @classdesc Represents a SdkJoinFrame.\n   * @implements ISdkJoinFrame\n   * @constructor\n   * @param {ISdkJoinFrame=} [properties] Properties to set\n   */\n  function SdkJoinFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkJoinFrame protocolVersion.\n   * @member {number} protocolVersion\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n\n  SdkJoinFrame.prototype.protocolVersion = 2;\n  /**\n   * SdkJoinFrame maxNumOfVideos.\n   * @member {number} maxNumOfVideos\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n  SdkJoinFrame.prototype.maxNumOfVideos = 8;\n  /**\n   * SdkJoinFrame flags.\n   * @member {number} flags\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n  SdkJoinFrame.prototype.flags = 0;\n  /**\n   * SdkJoinFrame clientDetails.\n   * @member {ISdkClientDetails|null|undefined} clientDetails\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n  SdkJoinFrame.prototype.clientDetails = null;\n  /**\n   * SdkJoinFrame audioSessionId.\n   * @member {number|Long} audioSessionId\n   * @memberof SdkJoinFrame\n   * @instance\n   */\n\n  SdkJoinFrame.prototype.audioSessionId = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * Creates a new SdkJoinFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {ISdkJoinFrame=} [properties] Properties to set\n   * @returns {SdkJoinFrame} SdkJoinFrame instance\n   */\n\n  SdkJoinFrame.create = function create(properties) {\n    return new SdkJoinFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkJoinFrame message. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkJoinFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.protocolVersion);\n    if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.maxNumOfVideos);\n    if (message.flags != null && message.hasOwnProperty(\"flags\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.flags);\n    if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) $root.SdkClientDetails.encode(message.clientDetails, writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).fork()).ldelim();\n    if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\")) writer.uint32(\n    /* id 6, wireType 0 =*/\n    48).uint64(message.audioSessionId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkJoinFrame message, length delimited. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkJoinFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkJoinFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkJoinFrame} SdkJoinFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkJoinFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkJoinFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.protocolVersion = reader.uint32();\n          break;\n\n        case 2:\n          message.maxNumOfVideos = reader.uint32();\n          break;\n\n        case 3:\n          message.flags = reader.uint32();\n          break;\n\n        case 4:\n          message.clientDetails = $root.SdkClientDetails.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.audioSessionId = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkJoinFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkJoinFrame} SdkJoinFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkJoinFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkJoinFrame message.\n   * @function verify\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkJoinFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\")) if (!$util.isInteger(message.protocolVersion)) return \"protocolVersion: integer expected\";\n    if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\")) if (!$util.isInteger(message.maxNumOfVideos)) return \"maxNumOfVideos: integer expected\";\n    if (message.flags != null && message.hasOwnProperty(\"flags\")) if (!$util.isInteger(message.flags)) return \"flags: integer expected\";\n\n    if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) {\n      var error = $root.SdkClientDetails.verify(message.clientDetails);\n      if (error) return \"clientDetails.\" + error;\n    }\n\n    if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\")) if (!$util.isInteger(message.audioSessionId) && !(message.audioSessionId && $util.isInteger(message.audioSessionId.low) && $util.isInteger(message.audioSessionId.high))) return \"audioSessionId: integer|Long expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkJoinFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkJoinFrame} SdkJoinFrame\n   */\n\n\n  SdkJoinFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkJoinFrame) return object;\n    var message = new $root.SdkJoinFrame();\n    if (object.protocolVersion != null) message.protocolVersion = object.protocolVersion >>> 0;\n    if (object.maxNumOfVideos != null) message.maxNumOfVideos = object.maxNumOfVideos >>> 0;\n    if (object.flags != null) message.flags = object.flags >>> 0;\n\n    if (object.clientDetails != null) {\n      if (typeof object.clientDetails !== \"object\") throw TypeError(\".SdkJoinFrame.clientDetails: object expected\");\n      message.clientDetails = $root.SdkClientDetails.fromObject(object.clientDetails);\n    }\n\n    if (object.audioSessionId != null) if ($util.Long) (message.audioSessionId = $util.Long.fromValue(object.audioSessionId)).unsigned = true;else if (typeof object.audioSessionId === \"string\") message.audioSessionId = parseInt(object.audioSessionId, 10);else if (typeof object.audioSessionId === \"number\") message.audioSessionId = object.audioSessionId;else if (typeof object.audioSessionId === \"object\") message.audioSessionId = new $util.LongBits(object.audioSessionId.low >>> 0, object.audioSessionId.high >>> 0).toNumber(true);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkJoinFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkJoinFrame\n   * @static\n   * @param {SdkJoinFrame} message SdkJoinFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkJoinFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.protocolVersion = 2;\n      object.maxNumOfVideos = 8;\n      object.flags = 0;\n      object.clientDetails = null;\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.audioSessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.audioSessionId = options.longs === String ? \"0\" : 0;\n    }\n\n    if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\")) object.protocolVersion = message.protocolVersion;\n    if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\")) object.maxNumOfVideos = message.maxNumOfVideos;\n    if (message.flags != null && message.hasOwnProperty(\"flags\")) object.flags = message.flags;\n    if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) object.clientDetails = $root.SdkClientDetails.toObject(message.clientDetails, options);\n    if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\")) if (typeof message.audioSessionId === \"number\") object.audioSessionId = options.longs === String ? String(message.audioSessionId) : message.audioSessionId;else object.audioSessionId = options.longs === String ? $util.Long.prototype.toString.call(message.audioSessionId) : options.longs === Number ? new $util.LongBits(message.audioSessionId.low >>> 0, message.audioSessionId.high >>> 0).toNumber(true) : message.audioSessionId;\n    return object;\n  };\n  /**\n   * Converts this SdkJoinFrame to JSON.\n   * @function toJSON\n   * @memberof SdkJoinFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkJoinFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkJoinFrame;\n}();\n\n$root.SdkJoinAckFrame = function () {\n  /**\n   * Properties of a SdkJoinAckFrame.\n   * @exports ISdkJoinAckFrame\n   * @interface ISdkJoinAckFrame\n   * @property {ISdkTurnCredentials|null} [turnCredentials] SdkJoinAckFrame turnCredentials\n   */\n\n  /**\n   * Constructs a new SdkJoinAckFrame.\n   * @exports SdkJoinAckFrame\n   * @classdesc Represents a SdkJoinAckFrame.\n   * @implements ISdkJoinAckFrame\n   * @constructor\n   * @param {ISdkJoinAckFrame=} [properties] Properties to set\n   */\n  function SdkJoinAckFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkJoinAckFrame turnCredentials.\n   * @member {ISdkTurnCredentials|null|undefined} turnCredentials\n   * @memberof SdkJoinAckFrame\n   * @instance\n   */\n\n\n  SdkJoinAckFrame.prototype.turnCredentials = null;\n  /**\n   * Creates a new SdkJoinAckFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {ISdkJoinAckFrame=} [properties] Properties to set\n   * @returns {SdkJoinAckFrame} SdkJoinAckFrame instance\n   */\n\n  SdkJoinAckFrame.create = function create(properties) {\n    return new SdkJoinAckFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkJoinAckFrame message. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkJoinAckFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) $root.SdkTurnCredentials.encode(message.turnCredentials, writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkJoinAckFrame message, length delimited. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkJoinAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkJoinAckFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkJoinAckFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkJoinAckFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.turnCredentials = $root.SdkTurnCredentials.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkJoinAckFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkJoinAckFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkJoinAckFrame message.\n   * @function verify\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkJoinAckFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) {\n      var error = $root.SdkTurnCredentials.verify(message.turnCredentials);\n      if (error) return \"turnCredentials.\" + error;\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkJoinAckFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n   */\n\n\n  SdkJoinAckFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkJoinAckFrame) return object;\n    var message = new $root.SdkJoinAckFrame();\n\n    if (object.turnCredentials != null) {\n      if (typeof object.turnCredentials !== \"object\") throw TypeError(\".SdkJoinAckFrame.turnCredentials: object expected\");\n      message.turnCredentials = $root.SdkTurnCredentials.fromObject(object.turnCredentials);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkJoinAckFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkJoinAckFrame\n   * @static\n   * @param {SdkJoinAckFrame} message SdkJoinAckFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkJoinAckFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) object.turnCredentials = null;\n    if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) object.turnCredentials = $root.SdkTurnCredentials.toObject(message.turnCredentials, options);\n    return object;\n  };\n  /**\n   * Converts this SdkJoinAckFrame to JSON.\n   * @function toJSON\n   * @memberof SdkJoinAckFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkJoinAckFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkJoinAckFrame;\n}();\n\n$root.SdkLeaveFrame = function () {\n  /**\n   * Properties of a SdkLeaveFrame.\n   * @exports ISdkLeaveFrame\n   * @interface ISdkLeaveFrame\n   */\n\n  /**\n   * Constructs a new SdkLeaveFrame.\n   * @exports SdkLeaveFrame\n   * @classdesc Represents a SdkLeaveFrame.\n   * @implements ISdkLeaveFrame\n   * @constructor\n   * @param {ISdkLeaveFrame=} [properties] Properties to set\n   */\n  function SdkLeaveFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * Creates a new SdkLeaveFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {ISdkLeaveFrame=} [properties] Properties to set\n   * @returns {SdkLeaveFrame} SdkLeaveFrame instance\n   */\n\n\n  SdkLeaveFrame.create = function create(properties) {\n    return new SdkLeaveFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkLeaveFrame message. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkLeaveFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkLeaveFrame message, length delimited. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkLeaveFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkLeaveFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkLeaveFrame} SdkLeaveFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkLeaveFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkLeaveFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkLeaveFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkLeaveFrame} SdkLeaveFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkLeaveFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkLeaveFrame message.\n   * @function verify\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkLeaveFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkLeaveFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkLeaveFrame} SdkLeaveFrame\n   */\n\n\n  SdkLeaveFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkLeaveFrame) return object;\n    return new $root.SdkLeaveFrame();\n  };\n  /**\n   * Creates a plain object from a SdkLeaveFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkLeaveFrame\n   * @static\n   * @param {SdkLeaveFrame} message SdkLeaveFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkLeaveFrame.toObject = function toObject() {\n    return {};\n  };\n  /**\n   * Converts this SdkLeaveFrame to JSON.\n   * @function toJSON\n   * @memberof SdkLeaveFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkLeaveFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkLeaveFrame;\n}();\n\n$root.SdkLeaveAckFrame = function () {\n  /**\n   * Properties of a SdkLeaveAckFrame.\n   * @exports ISdkLeaveAckFrame\n   * @interface ISdkLeaveAckFrame\n   */\n\n  /**\n   * Constructs a new SdkLeaveAckFrame.\n   * @exports SdkLeaveAckFrame\n   * @classdesc Represents a SdkLeaveAckFrame.\n   * @implements ISdkLeaveAckFrame\n   * @constructor\n   * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n   */\n  function SdkLeaveAckFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * Creates a new SdkLeaveAckFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n   * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame instance\n   */\n\n\n  SdkLeaveAckFrame.create = function create(properties) {\n    return new SdkLeaveAckFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkLeaveAckFrame message. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkLeaveAckFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkLeaveAckFrame message, length delimited. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkLeaveAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkLeaveAckFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkLeaveAckFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkLeaveAckFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkLeaveAckFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkLeaveAckFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkLeaveAckFrame message.\n   * @function verify\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkLeaveAckFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkLeaveAckFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n   */\n\n\n  SdkLeaveAckFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkLeaveAckFrame) return object;\n    return new $root.SdkLeaveAckFrame();\n  };\n  /**\n   * Creates a plain object from a SdkLeaveAckFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkLeaveAckFrame\n   * @static\n   * @param {SdkLeaveAckFrame} message SdkLeaveAckFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkLeaveAckFrame.toObject = function toObject() {\n    return {};\n  };\n  /**\n   * Converts this SdkLeaveAckFrame to JSON.\n   * @function toJSON\n   * @memberof SdkLeaveAckFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkLeaveAckFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkLeaveAckFrame;\n}();\n/**\n * SdkStreamServiceType enum.\n * @exports SdkStreamServiceType\n * @enum {string}\n * @property {number} RX=1 RX value\n * @property {number} TX=2 TX value\n * @property {number} DUPLEX=3 DUPLEX value\n */\n\n\n$root.SdkStreamServiceType = function () {\n  var valuesById = {},\n      values = Object.create(valuesById);\n  values[valuesById[1] = \"RX\"] = 1;\n  values[valuesById[2] = \"TX\"] = 2;\n  values[valuesById[3] = \"DUPLEX\"] = 3;\n  return values;\n}();\n/**\n * SdkStreamMediaType enum.\n * @exports SdkStreamMediaType\n * @enum {string}\n * @property {number} AUDIO=1 AUDIO value\n * @property {number} VIDEO=2 VIDEO value\n */\n\n\n$root.SdkStreamMediaType = function () {\n  var valuesById = {},\n      values = Object.create(valuesById);\n  values[valuesById[1] = \"AUDIO\"] = 1;\n  values[valuesById[2] = \"VIDEO\"] = 2;\n  return values;\n}();\n\n$root.SdkSubscribeFrame = function () {\n  /**\n   * Properties of a SdkSubscribeFrame.\n   * @exports ISdkSubscribeFrame\n   * @interface ISdkSubscribeFrame\n   * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeFrame duplex\n   * @property {Array.<ISdkStreamDescriptor>|null} [sendStreams] SdkSubscribeFrame sendStreams\n   * @property {Array.<number>|null} [receiveStreamIds] SdkSubscribeFrame receiveStreamIds\n   * @property {string|null} [sdpOffer] SdkSubscribeFrame sdpOffer\n   * @property {string|null} [audioHost] SdkSubscribeFrame audioHost\n   * @property {boolean|null} [audioCheckin] SdkSubscribeFrame audioCheckin\n   * @property {boolean|null} [audioMuted] SdkSubscribeFrame audioMuted\n   */\n\n  /**\n   * Constructs a new SdkSubscribeFrame.\n   * @exports SdkSubscribeFrame\n   * @classdesc Represents a SdkSubscribeFrame.\n   * @implements ISdkSubscribeFrame\n   * @constructor\n   * @param {ISdkSubscribeFrame=} [properties] Properties to set\n   */\n  function SdkSubscribeFrame(properties) {\n    this.sendStreams = [];\n    this.receiveStreamIds = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkSubscribeFrame duplex.\n   * @member {SdkStreamServiceType} duplex\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n\n  SdkSubscribeFrame.prototype.duplex = 1;\n  /**\n   * SdkSubscribeFrame sendStreams.\n   * @member {Array.<ISdkStreamDescriptor>} sendStreams\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.sendStreams = $util.emptyArray;\n  /**\n   * SdkSubscribeFrame receiveStreamIds.\n   * @member {Array.<number>} receiveStreamIds\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.receiveStreamIds = $util.emptyArray;\n  /**\n   * SdkSubscribeFrame sdpOffer.\n   * @member {string} sdpOffer\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.sdpOffer = \"\";\n  /**\n   * SdkSubscribeFrame audioHost.\n   * @member {string} audioHost\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.audioHost = \"\";\n  /**\n   * SdkSubscribeFrame audioCheckin.\n   * @member {boolean} audioCheckin\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.audioCheckin = false;\n  /**\n   * SdkSubscribeFrame audioMuted.\n   * @member {boolean} audioMuted\n   * @memberof SdkSubscribeFrame\n   * @instance\n   */\n\n  SdkSubscribeFrame.prototype.audioMuted = false;\n  /**\n   * Creates a new SdkSubscribeFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {ISdkSubscribeFrame=} [properties] Properties to set\n   * @returns {SdkSubscribeFrame} SdkSubscribeFrame instance\n   */\n\n  SdkSubscribeFrame.create = function create(properties) {\n    return new SdkSubscribeFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkSubscribeFrame message. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSubscribeFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).int32(message.duplex);\n    if (message.sendStreams != null && message.sendStreams.length) for (var i = 0; i < message.sendStreams.length; ++i) $root.SdkStreamDescriptor.encode(message.sendStreams[i], writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    if (message.receiveStreamIds != null && message.receiveStreamIds.length) for (var i = 0; i < message.receiveStreamIds.length; ++i) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.receiveStreamIds[i]);\n    if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.sdpOffer);\n    if (message.audioHost != null && message.hasOwnProperty(\"audioHost\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).string(message.audioHost);\n    if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\")) writer.uint32(\n    /* id 6, wireType 0 =*/\n    48).bool(message.audioCheckin);\n    if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\")) writer.uint32(\n    /* id 7, wireType 0 =*/\n    56).bool(message.audioMuted);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkSubscribeFrame message, length delimited. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSubscribeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkSubscribeFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSubscribeFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkSubscribeFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.duplex = reader.int32();\n          break;\n\n        case 2:\n          if (!(message.sendStreams && message.sendStreams.length)) message.sendStreams = [];\n          message.sendStreams.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          if (!(message.receiveStreamIds && message.receiveStreamIds.length)) message.receiveStreamIds = [];\n\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) message.receiveStreamIds.push(reader.uint32());\n          } else message.receiveStreamIds.push(reader.uint32());\n\n          break;\n\n        case 4:\n          message.sdpOffer = reader.string();\n          break;\n\n        case 5:\n          message.audioHost = reader.string();\n          break;\n\n        case 6:\n          message.audioCheckin = reader.bool();\n          break;\n\n        case 7:\n          message.audioMuted = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkSubscribeFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSubscribeFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkSubscribeFrame message.\n   * @function verify\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkSubscribeFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) switch (message.duplex) {\n      default:\n        return \"duplex: enum value expected\";\n\n      case 1:\n      case 2:\n      case 3:\n        break;\n    }\n\n    if (message.sendStreams != null && message.hasOwnProperty(\"sendStreams\")) {\n      if (!Array.isArray(message.sendStreams)) return \"sendStreams: array expected\";\n\n      for (var i = 0; i < message.sendStreams.length; ++i) {\n        var error = $root.SdkStreamDescriptor.verify(message.sendStreams[i]);\n        if (error) return \"sendStreams.\" + error;\n      }\n    }\n\n    if (message.receiveStreamIds != null && message.hasOwnProperty(\"receiveStreamIds\")) {\n      if (!Array.isArray(message.receiveStreamIds)) return \"receiveStreamIds: array expected\";\n\n      for (var i = 0; i < message.receiveStreamIds.length; ++i) if (!$util.isInteger(message.receiveStreamIds[i])) return \"receiveStreamIds: integer[] expected\";\n    }\n\n    if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\")) if (!$util.isString(message.sdpOffer)) return \"sdpOffer: string expected\";\n    if (message.audioHost != null && message.hasOwnProperty(\"audioHost\")) if (!$util.isString(message.audioHost)) return \"audioHost: string expected\";\n    if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\")) if (typeof message.audioCheckin !== \"boolean\") return \"audioCheckin: boolean expected\";\n    if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\")) if (typeof message.audioMuted !== \"boolean\") return \"audioMuted: boolean expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkSubscribeFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n   */\n\n\n  SdkSubscribeFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkSubscribeFrame) return object;\n    var message = new $root.SdkSubscribeFrame();\n\n    switch (object.duplex) {\n      case \"RX\":\n      case 1:\n        message.duplex = 1;\n        break;\n\n      case \"TX\":\n      case 2:\n        message.duplex = 2;\n        break;\n\n      case \"DUPLEX\":\n      case 3:\n        message.duplex = 3;\n        break;\n    }\n\n    if (object.sendStreams) {\n      if (!Array.isArray(object.sendStreams)) throw TypeError(\".SdkSubscribeFrame.sendStreams: array expected\");\n      message.sendStreams = [];\n\n      for (var i = 0; i < object.sendStreams.length; ++i) {\n        if (typeof object.sendStreams[i] !== \"object\") throw TypeError(\".SdkSubscribeFrame.sendStreams: object expected\");\n        message.sendStreams[i] = $root.SdkStreamDescriptor.fromObject(object.sendStreams[i]);\n      }\n    }\n\n    if (object.receiveStreamIds) {\n      if (!Array.isArray(object.receiveStreamIds)) throw TypeError(\".SdkSubscribeFrame.receiveStreamIds: array expected\");\n      message.receiveStreamIds = [];\n\n      for (var i = 0; i < object.receiveStreamIds.length; ++i) message.receiveStreamIds[i] = object.receiveStreamIds[i] >>> 0;\n    }\n\n    if (object.sdpOffer != null) message.sdpOffer = String(object.sdpOffer);\n    if (object.audioHost != null) message.audioHost = String(object.audioHost);\n    if (object.audioCheckin != null) message.audioCheckin = Boolean(object.audioCheckin);\n    if (object.audioMuted != null) message.audioMuted = Boolean(object.audioMuted);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkSubscribeFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkSubscribeFrame\n   * @static\n   * @param {SdkSubscribeFrame} message SdkSubscribeFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkSubscribeFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.sendStreams = [];\n      object.receiveStreamIds = [];\n    }\n\n    if (options.defaults) {\n      object.duplex = options.enums === String ? \"RX\" : 1;\n      object.sdpOffer = \"\";\n      object.audioHost = \"\";\n      object.audioCheckin = false;\n      object.audioMuted = false;\n    }\n\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n\n    if (message.sendStreams && message.sendStreams.length) {\n      object.sendStreams = [];\n\n      for (var j = 0; j < message.sendStreams.length; ++j) object.sendStreams[j] = $root.SdkStreamDescriptor.toObject(message.sendStreams[j], options);\n    }\n\n    if (message.receiveStreamIds && message.receiveStreamIds.length) {\n      object.receiveStreamIds = [];\n\n      for (var j = 0; j < message.receiveStreamIds.length; ++j) object.receiveStreamIds[j] = message.receiveStreamIds[j];\n    }\n\n    if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\")) object.sdpOffer = message.sdpOffer;\n    if (message.audioHost != null && message.hasOwnProperty(\"audioHost\")) object.audioHost = message.audioHost;\n    if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\")) object.audioCheckin = message.audioCheckin;\n    if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\")) object.audioMuted = message.audioMuted;\n    return object;\n  };\n  /**\n   * Converts this SdkSubscribeFrame to JSON.\n   * @function toJSON\n   * @memberof SdkSubscribeFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkSubscribeFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkSubscribeFrame;\n}();\n\n$root.SdkSubscribeAckFrame = function () {\n  /**\n   * Properties of a SdkSubscribeAckFrame.\n   * @exports ISdkSubscribeAckFrame\n   * @interface ISdkSubscribeAckFrame\n   * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeAckFrame duplex\n   * @property {Array.<ISdkStreamAllocation>|null} [allocations] SdkSubscribeAckFrame allocations\n   * @property {string|null} [sdpAnswer] SdkSubscribeAckFrame sdpAnswer\n   * @property {Array.<ISdkTrackMapping>|null} [tracks] SdkSubscribeAckFrame tracks\n   */\n\n  /**\n   * Constructs a new SdkSubscribeAckFrame.\n   * @exports SdkSubscribeAckFrame\n   * @classdesc Represents a SdkSubscribeAckFrame.\n   * @implements ISdkSubscribeAckFrame\n   * @constructor\n   * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n   */\n  function SdkSubscribeAckFrame(properties) {\n    this.allocations = [];\n    this.tracks = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkSubscribeAckFrame duplex.\n   * @member {SdkStreamServiceType} duplex\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   */\n\n\n  SdkSubscribeAckFrame.prototype.duplex = 1;\n  /**\n   * SdkSubscribeAckFrame allocations.\n   * @member {Array.<ISdkStreamAllocation>} allocations\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   */\n\n  SdkSubscribeAckFrame.prototype.allocations = $util.emptyArray;\n  /**\n   * SdkSubscribeAckFrame sdpAnswer.\n   * @member {string} sdpAnswer\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   */\n\n  SdkSubscribeAckFrame.prototype.sdpAnswer = \"\";\n  /**\n   * SdkSubscribeAckFrame tracks.\n   * @member {Array.<ISdkTrackMapping>} tracks\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   */\n\n  SdkSubscribeAckFrame.prototype.tracks = $util.emptyArray;\n  /**\n   * Creates a new SdkSubscribeAckFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n   * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame instance\n   */\n\n  SdkSubscribeAckFrame.create = function create(properties) {\n    return new SdkSubscribeAckFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkSubscribeAckFrame message. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSubscribeAckFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).int32(message.duplex);\n    if (message.allocations != null && message.allocations.length) for (var i = 0; i < message.allocations.length; ++i) $root.SdkStreamAllocation.encode(message.allocations[i], writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.sdpAnswer);\n    if (message.tracks != null && message.tracks.length) for (var i = 0; i < message.tracks.length; ++i) $root.SdkTrackMapping.encode(message.tracks[i], writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkSubscribeAckFrame message, length delimited. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkSubscribeAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSubscribeAckFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkSubscribeAckFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.duplex = reader.int32();\n          break;\n\n        case 2:\n          if (!(message.allocations && message.allocations.length)) message.allocations = [];\n          message.allocations.push($root.SdkStreamAllocation.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          message.sdpAnswer = reader.string();\n          break;\n\n        case 4:\n          if (!(message.tracks && message.tracks.length)) message.tracks = [];\n          message.tracks.push($root.SdkTrackMapping.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkSubscribeAckFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkSubscribeAckFrame message.\n   * @function verify\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkSubscribeAckFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) switch (message.duplex) {\n      default:\n        return \"duplex: enum value expected\";\n\n      case 1:\n      case 2:\n      case 3:\n        break;\n    }\n\n    if (message.allocations != null && message.hasOwnProperty(\"allocations\")) {\n      if (!Array.isArray(message.allocations)) return \"allocations: array expected\";\n\n      for (var i = 0; i < message.allocations.length; ++i) {\n        var error = $root.SdkStreamAllocation.verify(message.allocations[i]);\n        if (error) return \"allocations.\" + error;\n      }\n    }\n\n    if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\")) if (!$util.isString(message.sdpAnswer)) return \"sdpAnswer: string expected\";\n\n    if (message.tracks != null && message.hasOwnProperty(\"tracks\")) {\n      if (!Array.isArray(message.tracks)) return \"tracks: array expected\";\n\n      for (var i = 0; i < message.tracks.length; ++i) {\n        var error = $root.SdkTrackMapping.verify(message.tracks[i]);\n        if (error) return \"tracks.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkSubscribeAckFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n   */\n\n\n  SdkSubscribeAckFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkSubscribeAckFrame) return object;\n    var message = new $root.SdkSubscribeAckFrame();\n\n    switch (object.duplex) {\n      case \"RX\":\n      case 1:\n        message.duplex = 1;\n        break;\n\n      case \"TX\":\n      case 2:\n        message.duplex = 2;\n        break;\n\n      case \"DUPLEX\":\n      case 3:\n        message.duplex = 3;\n        break;\n    }\n\n    if (object.allocations) {\n      if (!Array.isArray(object.allocations)) throw TypeError(\".SdkSubscribeAckFrame.allocations: array expected\");\n      message.allocations = [];\n\n      for (var i = 0; i < object.allocations.length; ++i) {\n        if (typeof object.allocations[i] !== \"object\") throw TypeError(\".SdkSubscribeAckFrame.allocations: object expected\");\n        message.allocations[i] = $root.SdkStreamAllocation.fromObject(object.allocations[i]);\n      }\n    }\n\n    if (object.sdpAnswer != null) message.sdpAnswer = String(object.sdpAnswer);\n\n    if (object.tracks) {\n      if (!Array.isArray(object.tracks)) throw TypeError(\".SdkSubscribeAckFrame.tracks: array expected\");\n      message.tracks = [];\n\n      for (var i = 0; i < object.tracks.length; ++i) {\n        if (typeof object.tracks[i] !== \"object\") throw TypeError(\".SdkSubscribeAckFrame.tracks: object expected\");\n        message.tracks[i] = $root.SdkTrackMapping.fromObject(object.tracks[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkSubscribeAckFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkSubscribeAckFrame\n   * @static\n   * @param {SdkSubscribeAckFrame} message SdkSubscribeAckFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkSubscribeAckFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.allocations = [];\n      object.tracks = [];\n    }\n\n    if (options.defaults) {\n      object.duplex = options.enums === String ? \"RX\" : 1;\n      object.sdpAnswer = \"\";\n    }\n\n    if (message.duplex != null && message.hasOwnProperty(\"duplex\")) object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n\n    if (message.allocations && message.allocations.length) {\n      object.allocations = [];\n\n      for (var j = 0; j < message.allocations.length; ++j) object.allocations[j] = $root.SdkStreamAllocation.toObject(message.allocations[j], options);\n    }\n\n    if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\")) object.sdpAnswer = message.sdpAnswer;\n\n    if (message.tracks && message.tracks.length) {\n      object.tracks = [];\n\n      for (var j = 0; j < message.tracks.length; ++j) object.tracks[j] = $root.SdkTrackMapping.toObject(message.tracks[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkSubscribeAckFrame to JSON.\n   * @function toJSON\n   * @memberof SdkSubscribeAckFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkSubscribeAckFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkSubscribeAckFrame;\n}();\n\n$root.SdkIndexFrame = function () {\n  /**\n   * Properties of a SdkIndexFrame.\n   * @exports ISdkIndexFrame\n   * @interface ISdkIndexFrame\n   * @property {boolean|null} [atCapacity] SdkIndexFrame atCapacity\n   * @property {Array.<ISdkStreamDescriptor>|null} [sources] SdkIndexFrame sources\n   * @property {Array.<number>|null} [pausedAtSourceIds] SdkIndexFrame pausedAtSourceIds\n   * @property {number|null} [numParticipants] SdkIndexFrame numParticipants\n   */\n\n  /**\n   * Constructs a new SdkIndexFrame.\n   * @exports SdkIndexFrame\n   * @classdesc Represents a SdkIndexFrame.\n   * @implements ISdkIndexFrame\n   * @constructor\n   * @param {ISdkIndexFrame=} [properties] Properties to set\n   */\n  function SdkIndexFrame(properties) {\n    this.sources = [];\n    this.pausedAtSourceIds = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkIndexFrame atCapacity.\n   * @member {boolean} atCapacity\n   * @memberof SdkIndexFrame\n   * @instance\n   */\n\n\n  SdkIndexFrame.prototype.atCapacity = false;\n  /**\n   * SdkIndexFrame sources.\n   * @member {Array.<ISdkStreamDescriptor>} sources\n   * @memberof SdkIndexFrame\n   * @instance\n   */\n\n  SdkIndexFrame.prototype.sources = $util.emptyArray;\n  /**\n   * SdkIndexFrame pausedAtSourceIds.\n   * @member {Array.<number>} pausedAtSourceIds\n   * @memberof SdkIndexFrame\n   * @instance\n   */\n\n  SdkIndexFrame.prototype.pausedAtSourceIds = $util.emptyArray;\n  /**\n   * SdkIndexFrame numParticipants.\n   * @member {number} numParticipants\n   * @memberof SdkIndexFrame\n   * @instance\n   */\n\n  SdkIndexFrame.prototype.numParticipants = 0;\n  /**\n   * Creates a new SdkIndexFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {ISdkIndexFrame=} [properties] Properties to set\n   * @returns {SdkIndexFrame} SdkIndexFrame instance\n   */\n\n  SdkIndexFrame.create = function create(properties) {\n    return new SdkIndexFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkIndexFrame message. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkIndexFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).bool(message.atCapacity);\n    if (message.sources != null && message.sources.length) for (var i = 0; i < message.sources.length; ++i) $root.SdkStreamDescriptor.encode(message.sources[i], writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    if (message.pausedAtSourceIds != null && message.pausedAtSourceIds.length) for (var i = 0; i < message.pausedAtSourceIds.length; ++i) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.pausedAtSourceIds[i]);\n    if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).uint32(message.numParticipants);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkIndexFrame message, length delimited. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkIndexFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkIndexFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkIndexFrame} SdkIndexFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkIndexFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkIndexFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.atCapacity = reader.bool();\n          break;\n\n        case 2:\n          if (!(message.sources && message.sources.length)) message.sources = [];\n          message.sources.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          if (!(message.pausedAtSourceIds && message.pausedAtSourceIds.length)) message.pausedAtSourceIds = [];\n\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) message.pausedAtSourceIds.push(reader.uint32());\n          } else message.pausedAtSourceIds.push(reader.uint32());\n\n          break;\n\n        case 4:\n          message.numParticipants = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkIndexFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkIndexFrame} SdkIndexFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkIndexFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkIndexFrame message.\n   * @function verify\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkIndexFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\")) if (typeof message.atCapacity !== \"boolean\") return \"atCapacity: boolean expected\";\n\n    if (message.sources != null && message.hasOwnProperty(\"sources\")) {\n      if (!Array.isArray(message.sources)) return \"sources: array expected\";\n\n      for (var i = 0; i < message.sources.length; ++i) {\n        var error = $root.SdkStreamDescriptor.verify(message.sources[i]);\n        if (error) return \"sources.\" + error;\n      }\n    }\n\n    if (message.pausedAtSourceIds != null && message.hasOwnProperty(\"pausedAtSourceIds\")) {\n      if (!Array.isArray(message.pausedAtSourceIds)) return \"pausedAtSourceIds: array expected\";\n\n      for (var i = 0; i < message.pausedAtSourceIds.length; ++i) if (!$util.isInteger(message.pausedAtSourceIds[i])) return \"pausedAtSourceIds: integer[] expected\";\n    }\n\n    if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\")) if (!$util.isInteger(message.numParticipants)) return \"numParticipants: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkIndexFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkIndexFrame} SdkIndexFrame\n   */\n\n\n  SdkIndexFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkIndexFrame) return object;\n    var message = new $root.SdkIndexFrame();\n    if (object.atCapacity != null) message.atCapacity = Boolean(object.atCapacity);\n\n    if (object.sources) {\n      if (!Array.isArray(object.sources)) throw TypeError(\".SdkIndexFrame.sources: array expected\");\n      message.sources = [];\n\n      for (var i = 0; i < object.sources.length; ++i) {\n        if (typeof object.sources[i] !== \"object\") throw TypeError(\".SdkIndexFrame.sources: object expected\");\n        message.sources[i] = $root.SdkStreamDescriptor.fromObject(object.sources[i]);\n      }\n    }\n\n    if (object.pausedAtSourceIds) {\n      if (!Array.isArray(object.pausedAtSourceIds)) throw TypeError(\".SdkIndexFrame.pausedAtSourceIds: array expected\");\n      message.pausedAtSourceIds = [];\n\n      for (var i = 0; i < object.pausedAtSourceIds.length; ++i) message.pausedAtSourceIds[i] = object.pausedAtSourceIds[i] >>> 0;\n    }\n\n    if (object.numParticipants != null) message.numParticipants = object.numParticipants >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkIndexFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkIndexFrame\n   * @static\n   * @param {SdkIndexFrame} message SdkIndexFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkIndexFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.sources = [];\n      object.pausedAtSourceIds = [];\n    }\n\n    if (options.defaults) {\n      object.atCapacity = false;\n      object.numParticipants = 0;\n    }\n\n    if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\")) object.atCapacity = message.atCapacity;\n\n    if (message.sources && message.sources.length) {\n      object.sources = [];\n\n      for (var j = 0; j < message.sources.length; ++j) object.sources[j] = $root.SdkStreamDescriptor.toObject(message.sources[j], options);\n    }\n\n    if (message.pausedAtSourceIds && message.pausedAtSourceIds.length) {\n      object.pausedAtSourceIds = [];\n\n      for (var j = 0; j < message.pausedAtSourceIds.length; ++j) object.pausedAtSourceIds[j] = message.pausedAtSourceIds[j];\n    }\n\n    if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\")) object.numParticipants = message.numParticipants;\n    return object;\n  };\n  /**\n   * Converts this SdkIndexFrame to JSON.\n   * @function toJSON\n   * @memberof SdkIndexFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkIndexFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkIndexFrame;\n}();\n\n$root.SdkPauseResumeFrame = function () {\n  /**\n   * Properties of a SdkPauseResumeFrame.\n   * @exports ISdkPauseResumeFrame\n   * @interface ISdkPauseResumeFrame\n   * @property {Array.<number>|null} [streamIds] SdkPauseResumeFrame streamIds\n   */\n\n  /**\n   * Constructs a new SdkPauseResumeFrame.\n   * @exports SdkPauseResumeFrame\n   * @classdesc Represents a SdkPauseResumeFrame.\n   * @implements ISdkPauseResumeFrame\n   * @constructor\n   * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n   */\n  function SdkPauseResumeFrame(properties) {\n    this.streamIds = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkPauseResumeFrame streamIds.\n   * @member {Array.<number>} streamIds\n   * @memberof SdkPauseResumeFrame\n   * @instance\n   */\n\n\n  SdkPauseResumeFrame.prototype.streamIds = $util.emptyArray;\n  /**\n   * Creates a new SdkPauseResumeFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n   * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame instance\n   */\n\n  SdkPauseResumeFrame.create = function create(properties) {\n    return new SdkPauseResumeFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkPauseResumeFrame message. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPauseResumeFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streamIds != null && message.streamIds.length) for (var i = 0; i < message.streamIds.length; ++i) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.streamIds[i]);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkPauseResumeFrame message, length delimited. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPauseResumeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkPauseResumeFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPauseResumeFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkPauseResumeFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.streamIds && message.streamIds.length)) message.streamIds = [];\n\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) message.streamIds.push(reader.uint32());\n          } else message.streamIds.push(reader.uint32());\n\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkPauseResumeFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPauseResumeFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkPauseResumeFrame message.\n   * @function verify\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkPauseResumeFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.streamIds != null && message.hasOwnProperty(\"streamIds\")) {\n      if (!Array.isArray(message.streamIds)) return \"streamIds: array expected\";\n\n      for (var i = 0; i < message.streamIds.length; ++i) if (!$util.isInteger(message.streamIds[i])) return \"streamIds: integer[] expected\";\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkPauseResumeFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n   */\n\n\n  SdkPauseResumeFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkPauseResumeFrame) return object;\n    var message = new $root.SdkPauseResumeFrame();\n\n    if (object.streamIds) {\n      if (!Array.isArray(object.streamIds)) throw TypeError(\".SdkPauseResumeFrame.streamIds: array expected\");\n      message.streamIds = [];\n\n      for (var i = 0; i < object.streamIds.length; ++i) message.streamIds[i] = object.streamIds[i] >>> 0;\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkPauseResumeFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkPauseResumeFrame\n   * @static\n   * @param {SdkPauseResumeFrame} message SdkPauseResumeFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkPauseResumeFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.streamIds = [];\n\n    if (message.streamIds && message.streamIds.length) {\n      object.streamIds = [];\n\n      for (var j = 0; j < message.streamIds.length; ++j) object.streamIds[j] = message.streamIds[j];\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkPauseResumeFrame to JSON.\n   * @function toJSON\n   * @memberof SdkPauseResumeFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkPauseResumeFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkPauseResumeFrame;\n}();\n\n$root.SdkBitrateFrame = function () {\n  /**\n   * Properties of a SdkBitrateFrame.\n   * @exports ISdkBitrateFrame\n   * @interface ISdkBitrateFrame\n   * @property {Array.<ISdkBitrate>|null} [bitrates] SdkBitrateFrame bitrates\n   */\n\n  /**\n   * Constructs a new SdkBitrateFrame.\n   * @exports SdkBitrateFrame\n   * @classdesc Represents a SdkBitrateFrame.\n   * @implements ISdkBitrateFrame\n   * @constructor\n   * @param {ISdkBitrateFrame=} [properties] Properties to set\n   */\n  function SdkBitrateFrame(properties) {\n    this.bitrates = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkBitrateFrame bitrates.\n   * @member {Array.<ISdkBitrate>} bitrates\n   * @memberof SdkBitrateFrame\n   * @instance\n   */\n\n\n  SdkBitrateFrame.prototype.bitrates = $util.emptyArray;\n  /**\n   * Creates a new SdkBitrateFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {ISdkBitrateFrame=} [properties] Properties to set\n   * @returns {SdkBitrateFrame} SdkBitrateFrame instance\n   */\n\n  SdkBitrateFrame.create = function create(properties) {\n    return new SdkBitrateFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkBitrateFrame message. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkBitrateFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.bitrates != null && message.bitrates.length) for (var i = 0; i < message.bitrates.length; ++i) $root.SdkBitrate.encode(message.bitrates[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkBitrateFrame message, length delimited. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkBitrateFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkBitrateFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkBitrateFrame} SdkBitrateFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkBitrateFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkBitrateFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.bitrates && message.bitrates.length)) message.bitrates = [];\n          message.bitrates.push($root.SdkBitrate.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkBitrateFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkBitrateFrame} SdkBitrateFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkBitrateFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkBitrateFrame message.\n   * @function verify\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkBitrateFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n      if (!Array.isArray(message.bitrates)) return \"bitrates: array expected\";\n\n      for (var i = 0; i < message.bitrates.length; ++i) {\n        var error = $root.SdkBitrate.verify(message.bitrates[i]);\n        if (error) return \"bitrates.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkBitrateFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkBitrateFrame} SdkBitrateFrame\n   */\n\n\n  SdkBitrateFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkBitrateFrame) return object;\n    var message = new $root.SdkBitrateFrame();\n\n    if (object.bitrates) {\n      if (!Array.isArray(object.bitrates)) throw TypeError(\".SdkBitrateFrame.bitrates: array expected\");\n      message.bitrates = [];\n\n      for (var i = 0; i < object.bitrates.length; ++i) {\n        if (typeof object.bitrates[i] !== \"object\") throw TypeError(\".SdkBitrateFrame.bitrates: object expected\");\n        message.bitrates[i] = $root.SdkBitrate.fromObject(object.bitrates[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkBitrateFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkBitrateFrame\n   * @static\n   * @param {SdkBitrateFrame} message SdkBitrateFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkBitrateFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.bitrates = [];\n\n    if (message.bitrates && message.bitrates.length) {\n      object.bitrates = [];\n\n      for (var j = 0; j < message.bitrates.length; ++j) object.bitrates[j] = $root.SdkBitrate.toObject(message.bitrates[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkBitrateFrame to JSON.\n   * @function toJSON\n   * @memberof SdkBitrateFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkBitrateFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkBitrateFrame;\n}();\n\n$root.SdkStreamDescriptor = function () {\n  /**\n   * Properties of a SdkStreamDescriptor.\n   * @exports ISdkStreamDescriptor\n   * @interface ISdkStreamDescriptor\n   * @property {number|null} [streamId] SdkStreamDescriptor streamId\n   * @property {number|null} [framerate] SdkStreamDescriptor framerate\n   * @property {number|null} [maxBitrateKbps] SdkStreamDescriptor maxBitrateKbps\n   * @property {string|null} [trackLabel] SdkStreamDescriptor trackLabel\n   * @property {number|null} [groupId] SdkStreamDescriptor groupId\n   * @property {number|null} [avgBitrateBps] SdkStreamDescriptor avgBitrateBps\n   * @property {string|null} [attendeeId] SdkStreamDescriptor attendeeId\n   * @property {SdkStreamMediaType|null} [mediaType] SdkStreamDescriptor mediaType\n   * @property {string|null} [externalUserId] SdkStreamDescriptor externalUserId\n   */\n\n  /**\n   * Constructs a new SdkStreamDescriptor.\n   * @exports SdkStreamDescriptor\n   * @classdesc Represents a SdkStreamDescriptor.\n   * @implements ISdkStreamDescriptor\n   * @constructor\n   * @param {ISdkStreamDescriptor=} [properties] Properties to set\n   */\n  function SdkStreamDescriptor(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkStreamDescriptor streamId.\n   * @member {number} streamId\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n\n  SdkStreamDescriptor.prototype.streamId = 0;\n  /**\n   * SdkStreamDescriptor framerate.\n   * @member {number} framerate\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.framerate = 0;\n  /**\n   * SdkStreamDescriptor maxBitrateKbps.\n   * @member {number} maxBitrateKbps\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.maxBitrateKbps = 0;\n  /**\n   * SdkStreamDescriptor trackLabel.\n   * @member {string} trackLabel\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.trackLabel = \"\";\n  /**\n   * SdkStreamDescriptor groupId.\n   * @member {number} groupId\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.groupId = 0;\n  /**\n   * SdkStreamDescriptor avgBitrateBps.\n   * @member {number} avgBitrateBps\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.avgBitrateBps = 0;\n  /**\n   * SdkStreamDescriptor attendeeId.\n   * @member {string} attendeeId\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.attendeeId = \"\";\n  /**\n   * SdkStreamDescriptor mediaType.\n   * @member {SdkStreamMediaType} mediaType\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.mediaType = 1;\n  /**\n   * SdkStreamDescriptor externalUserId.\n   * @member {string} externalUserId\n   * @memberof SdkStreamDescriptor\n   * @instance\n   */\n\n  SdkStreamDescriptor.prototype.externalUserId = \"\";\n  /**\n   * Creates a new SdkStreamDescriptor instance using the specified properties.\n   * @function create\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {ISdkStreamDescriptor=} [properties] Properties to set\n   * @returns {SdkStreamDescriptor} SdkStreamDescriptor instance\n   */\n\n  SdkStreamDescriptor.create = function create(properties) {\n    return new SdkStreamDescriptor(properties);\n  };\n  /**\n   * Encodes the specified SdkStreamDescriptor message. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n   * @function encode\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamDescriptor.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.streamId);\n    if (message.framerate != null && message.hasOwnProperty(\"framerate\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.framerate);\n    if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.maxBitrateKbps);\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.trackLabel);\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) writer.uint32(\n    /* id 6, wireType 0 =*/\n    48).uint32(message.groupId);\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) writer.uint32(\n    /* id 7, wireType 0 =*/\n    56).uint32(message.avgBitrateBps);\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) writer.uint32(\n    /* id 8, wireType 2 =*/\n    66).string(message.attendeeId);\n    if (message.mediaType != null && message.hasOwnProperty(\"mediaType\")) writer.uint32(\n    /* id 9, wireType 0 =*/\n    72).int32(message.mediaType);\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) writer.uint32(\n    /* id 10, wireType 2 =*/\n    82).string(message.externalUserId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkStreamDescriptor message, length delimited. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamDescriptor.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkStreamDescriptor message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamDescriptor.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkStreamDescriptor();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.streamId = reader.uint32();\n          break;\n\n        case 2:\n          message.framerate = reader.uint32();\n          break;\n\n        case 3:\n          message.maxBitrateKbps = reader.uint32();\n          break;\n\n        case 4:\n          message.trackLabel = reader.string();\n          break;\n\n        case 6:\n          message.groupId = reader.uint32();\n          break;\n\n        case 7:\n          message.avgBitrateBps = reader.uint32();\n          break;\n\n        case 8:\n          message.attendeeId = reader.string();\n          break;\n\n        case 9:\n          message.mediaType = reader.int32();\n          break;\n\n        case 10:\n          message.externalUserId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkStreamDescriptor message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamDescriptor.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkStreamDescriptor message.\n   * @function verify\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkStreamDescriptor.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) if (!$util.isInteger(message.streamId)) return \"streamId: integer expected\";\n    if (message.framerate != null && message.hasOwnProperty(\"framerate\")) if (!$util.isInteger(message.framerate)) return \"framerate: integer expected\";\n    if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\")) if (!$util.isInteger(message.maxBitrateKbps)) return \"maxBitrateKbps: integer expected\";\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) if (!$util.isString(message.trackLabel)) return \"trackLabel: string expected\";\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) if (!$util.isInteger(message.groupId)) return \"groupId: integer expected\";\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) if (!$util.isInteger(message.avgBitrateBps)) return \"avgBitrateBps: integer expected\";\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) if (!$util.isString(message.attendeeId)) return \"attendeeId: string expected\";\n    if (message.mediaType != null && message.hasOwnProperty(\"mediaType\")) switch (message.mediaType) {\n      default:\n        return \"mediaType: enum value expected\";\n\n      case 1:\n      case 2:\n        break;\n    }\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) if (!$util.isString(message.externalUserId)) return \"externalUserId: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkStreamDescriptor message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n   */\n\n\n  SdkStreamDescriptor.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkStreamDescriptor) return object;\n    var message = new $root.SdkStreamDescriptor();\n    if (object.streamId != null) message.streamId = object.streamId >>> 0;\n    if (object.framerate != null) message.framerate = object.framerate >>> 0;\n    if (object.maxBitrateKbps != null) message.maxBitrateKbps = object.maxBitrateKbps >>> 0;\n    if (object.trackLabel != null) message.trackLabel = String(object.trackLabel);\n    if (object.groupId != null) message.groupId = object.groupId >>> 0;\n    if (object.avgBitrateBps != null) message.avgBitrateBps = object.avgBitrateBps >>> 0;\n    if (object.attendeeId != null) message.attendeeId = String(object.attendeeId);\n\n    switch (object.mediaType) {\n      case \"AUDIO\":\n      case 1:\n        message.mediaType = 1;\n        break;\n\n      case \"VIDEO\":\n      case 2:\n        message.mediaType = 2;\n        break;\n    }\n\n    if (object.externalUserId != null) message.externalUserId = String(object.externalUserId);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkStreamDescriptor message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkStreamDescriptor\n   * @static\n   * @param {SdkStreamDescriptor} message SdkStreamDescriptor\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkStreamDescriptor.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.streamId = 0;\n      object.framerate = 0;\n      object.maxBitrateKbps = 0;\n      object.trackLabel = \"\";\n      object.groupId = 0;\n      object.avgBitrateBps = 0;\n      object.attendeeId = \"\";\n      object.mediaType = options.enums === String ? \"AUDIO\" : 1;\n      object.externalUserId = \"\";\n    }\n\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n    if (message.framerate != null && message.hasOwnProperty(\"framerate\")) object.framerate = message.framerate;\n    if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\")) object.maxBitrateKbps = message.maxBitrateKbps;\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) object.trackLabel = message.trackLabel;\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) object.groupId = message.groupId;\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) object.avgBitrateBps = message.avgBitrateBps;\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) object.attendeeId = message.attendeeId;\n    if (message.mediaType != null && message.hasOwnProperty(\"mediaType\")) object.mediaType = options.enums === String ? $root.SdkStreamMediaType[message.mediaType] : message.mediaType;\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) object.externalUserId = message.externalUserId;\n    return object;\n  };\n  /**\n   * Converts this SdkStreamDescriptor to JSON.\n   * @function toJSON\n   * @memberof SdkStreamDescriptor\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkStreamDescriptor.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkStreamDescriptor;\n}();\n\n$root.SdkStreamAllocation = function () {\n  /**\n   * Properties of a SdkStreamAllocation.\n   * @exports ISdkStreamAllocation\n   * @interface ISdkStreamAllocation\n   * @property {string|null} [trackLabel] SdkStreamAllocation trackLabel\n   * @property {number|null} [streamId] SdkStreamAllocation streamId\n   * @property {number|null} [groupId] SdkStreamAllocation groupId\n   */\n\n  /**\n   * Constructs a new SdkStreamAllocation.\n   * @exports SdkStreamAllocation\n   * @classdesc Represents a SdkStreamAllocation.\n   * @implements ISdkStreamAllocation\n   * @constructor\n   * @param {ISdkStreamAllocation=} [properties] Properties to set\n   */\n  function SdkStreamAllocation(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkStreamAllocation trackLabel.\n   * @member {string} trackLabel\n   * @memberof SdkStreamAllocation\n   * @instance\n   */\n\n\n  SdkStreamAllocation.prototype.trackLabel = \"\";\n  /**\n   * SdkStreamAllocation streamId.\n   * @member {number} streamId\n   * @memberof SdkStreamAllocation\n   * @instance\n   */\n\n  SdkStreamAllocation.prototype.streamId = 0;\n  /**\n   * SdkStreamAllocation groupId.\n   * @member {number} groupId\n   * @memberof SdkStreamAllocation\n   * @instance\n   */\n\n  SdkStreamAllocation.prototype.groupId = 0;\n  /**\n   * Creates a new SdkStreamAllocation instance using the specified properties.\n   * @function create\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {ISdkStreamAllocation=} [properties] Properties to set\n   * @returns {SdkStreamAllocation} SdkStreamAllocation instance\n   */\n\n  SdkStreamAllocation.create = function create(properties) {\n    return new SdkStreamAllocation(properties);\n  };\n  /**\n   * Encodes the specified SdkStreamAllocation message. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n   * @function encode\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamAllocation.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.trackLabel);\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.streamId);\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.groupId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkStreamAllocation message, length delimited. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamAllocation.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkStreamAllocation message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkStreamAllocation} SdkStreamAllocation\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamAllocation.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkStreamAllocation();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.trackLabel = reader.string();\n          break;\n\n        case 2:\n          message.streamId = reader.uint32();\n          break;\n\n        case 3:\n          message.groupId = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkStreamAllocation message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkStreamAllocation} SdkStreamAllocation\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamAllocation.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkStreamAllocation message.\n   * @function verify\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkStreamAllocation.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) if (!$util.isString(message.trackLabel)) return \"trackLabel: string expected\";\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) if (!$util.isInteger(message.streamId)) return \"streamId: integer expected\";\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) if (!$util.isInteger(message.groupId)) return \"groupId: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkStreamAllocation message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkStreamAllocation} SdkStreamAllocation\n   */\n\n\n  SdkStreamAllocation.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkStreamAllocation) return object;\n    var message = new $root.SdkStreamAllocation();\n    if (object.trackLabel != null) message.trackLabel = String(object.trackLabel);\n    if (object.streamId != null) message.streamId = object.streamId >>> 0;\n    if (object.groupId != null) message.groupId = object.groupId >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkStreamAllocation message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkStreamAllocation\n   * @static\n   * @param {SdkStreamAllocation} message SdkStreamAllocation\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkStreamAllocation.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.trackLabel = \"\";\n      object.streamId = 0;\n      object.groupId = 0;\n    }\n\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) object.trackLabel = message.trackLabel;\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) object.groupId = message.groupId;\n    return object;\n  };\n  /**\n   * Converts this SdkStreamAllocation to JSON.\n   * @function toJSON\n   * @memberof SdkStreamAllocation\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkStreamAllocation.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkStreamAllocation;\n}();\n\n$root.SdkTrackMapping = function () {\n  /**\n   * Properties of a SdkTrackMapping.\n   * @exports ISdkTrackMapping\n   * @interface ISdkTrackMapping\n   * @property {number|null} [streamId] SdkTrackMapping streamId\n   * @property {number|null} [ssrc] SdkTrackMapping ssrc\n   * @property {string|null} [trackLabel] SdkTrackMapping trackLabel\n   */\n\n  /**\n   * Constructs a new SdkTrackMapping.\n   * @exports SdkTrackMapping\n   * @classdesc Represents a SdkTrackMapping.\n   * @implements ISdkTrackMapping\n   * @constructor\n   * @param {ISdkTrackMapping=} [properties] Properties to set\n   */\n  function SdkTrackMapping(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTrackMapping streamId.\n   * @member {number} streamId\n   * @memberof SdkTrackMapping\n   * @instance\n   */\n\n\n  SdkTrackMapping.prototype.streamId = 0;\n  /**\n   * SdkTrackMapping ssrc.\n   * @member {number} ssrc\n   * @memberof SdkTrackMapping\n   * @instance\n   */\n\n  SdkTrackMapping.prototype.ssrc = 0;\n  /**\n   * SdkTrackMapping trackLabel.\n   * @member {string} trackLabel\n   * @memberof SdkTrackMapping\n   * @instance\n   */\n\n  SdkTrackMapping.prototype.trackLabel = \"\";\n  /**\n   * Creates a new SdkTrackMapping instance using the specified properties.\n   * @function create\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {ISdkTrackMapping=} [properties] Properties to set\n   * @returns {SdkTrackMapping} SdkTrackMapping instance\n   */\n\n  SdkTrackMapping.create = function create(properties) {\n    return new SdkTrackMapping(properties);\n  };\n  /**\n   * Encodes the specified SdkTrackMapping message. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTrackMapping.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.streamId);\n    if (message.ssrc != null && message.hasOwnProperty(\"ssrc\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.ssrc);\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.trackLabel);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTrackMapping message, length delimited. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTrackMapping.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTrackMapping message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTrackMapping} SdkTrackMapping\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTrackMapping.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTrackMapping();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.streamId = reader.uint32();\n          break;\n\n        case 2:\n          message.ssrc = reader.uint32();\n          break;\n\n        case 3:\n          message.trackLabel = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTrackMapping message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTrackMapping} SdkTrackMapping\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTrackMapping.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTrackMapping message.\n   * @function verify\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTrackMapping.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) if (!$util.isInteger(message.streamId)) return \"streamId: integer expected\";\n    if (message.ssrc != null && message.hasOwnProperty(\"ssrc\")) if (!$util.isInteger(message.ssrc)) return \"ssrc: integer expected\";\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) if (!$util.isString(message.trackLabel)) return \"trackLabel: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkTrackMapping message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTrackMapping} SdkTrackMapping\n   */\n\n\n  SdkTrackMapping.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTrackMapping) return object;\n    var message = new $root.SdkTrackMapping();\n    if (object.streamId != null) message.streamId = object.streamId >>> 0;\n    if (object.ssrc != null) message.ssrc = object.ssrc >>> 0;\n    if (object.trackLabel != null) message.trackLabel = String(object.trackLabel);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTrackMapping message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTrackMapping\n   * @static\n   * @param {SdkTrackMapping} message SdkTrackMapping\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTrackMapping.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.streamId = 0;\n      object.ssrc = 0;\n      object.trackLabel = \"\";\n    }\n\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n    if (message.ssrc != null && message.hasOwnProperty(\"ssrc\")) object.ssrc = message.ssrc;\n    if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\")) object.trackLabel = message.trackLabel;\n    return object;\n  };\n  /**\n   * Converts this SdkTrackMapping to JSON.\n   * @function toJSON\n   * @memberof SdkTrackMapping\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTrackMapping.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTrackMapping;\n}();\n\n$root.SdkBitrate = function () {\n  /**\n   * Properties of a SdkBitrate.\n   * @exports ISdkBitrate\n   * @interface ISdkBitrate\n   * @property {number|null} [sourceStreamId] SdkBitrate sourceStreamId\n   * @property {number|null} [avgBitrateBps] SdkBitrate avgBitrateBps\n   */\n\n  /**\n   * Constructs a new SdkBitrate.\n   * @exports SdkBitrate\n   * @classdesc Represents a SdkBitrate.\n   * @implements ISdkBitrate\n   * @constructor\n   * @param {ISdkBitrate=} [properties] Properties to set\n   */\n  function SdkBitrate(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkBitrate sourceStreamId.\n   * @member {number} sourceStreamId\n   * @memberof SdkBitrate\n   * @instance\n   */\n\n\n  SdkBitrate.prototype.sourceStreamId = 0;\n  /**\n   * SdkBitrate avgBitrateBps.\n   * @member {number} avgBitrateBps\n   * @memberof SdkBitrate\n   * @instance\n   */\n\n  SdkBitrate.prototype.avgBitrateBps = 0;\n  /**\n   * Creates a new SdkBitrate instance using the specified properties.\n   * @function create\n   * @memberof SdkBitrate\n   * @static\n   * @param {ISdkBitrate=} [properties] Properties to set\n   * @returns {SdkBitrate} SdkBitrate instance\n   */\n\n  SdkBitrate.create = function create(properties) {\n    return new SdkBitrate(properties);\n  };\n  /**\n   * Encodes the specified SdkBitrate message. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n   * @function encode\n   * @memberof SdkBitrate\n   * @static\n   * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkBitrate.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.sourceStreamId);\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.avgBitrateBps);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkBitrate message, length delimited. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkBitrate\n   * @static\n   * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkBitrate.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkBitrate message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkBitrate\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkBitrate} SdkBitrate\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkBitrate.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkBitrate();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sourceStreamId = reader.uint32();\n          break;\n\n        case 2:\n          message.avgBitrateBps = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkBitrate message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkBitrate\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkBitrate} SdkBitrate\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkBitrate.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkBitrate message.\n   * @function verify\n   * @memberof SdkBitrate\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkBitrate.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\")) if (!$util.isInteger(message.sourceStreamId)) return \"sourceStreamId: integer expected\";\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) if (!$util.isInteger(message.avgBitrateBps)) return \"avgBitrateBps: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkBitrate message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkBitrate\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkBitrate} SdkBitrate\n   */\n\n\n  SdkBitrate.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkBitrate) return object;\n    var message = new $root.SdkBitrate();\n    if (object.sourceStreamId != null) message.sourceStreamId = object.sourceStreamId >>> 0;\n    if (object.avgBitrateBps != null) message.avgBitrateBps = object.avgBitrateBps >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkBitrate message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkBitrate\n   * @static\n   * @param {SdkBitrate} message SdkBitrate\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkBitrate.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.sourceStreamId = 0;\n      object.avgBitrateBps = 0;\n    }\n\n    if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\")) object.sourceStreamId = message.sourceStreamId;\n    if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\")) object.avgBitrateBps = message.avgBitrateBps;\n    return object;\n  };\n  /**\n   * Converts this SdkBitrate to JSON.\n   * @function toJSON\n   * @memberof SdkBitrate\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkBitrate.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkBitrate;\n}();\n\n$root.SdkAudioControlFrame = function () {\n  /**\n   * Properties of a SdkAudioControlFrame.\n   * @exports ISdkAudioControlFrame\n   * @interface ISdkAudioControlFrame\n   * @property {boolean|null} [muted] SdkAudioControlFrame muted\n   */\n\n  /**\n   * Constructs a new SdkAudioControlFrame.\n   * @exports SdkAudioControlFrame\n   * @classdesc Represents a SdkAudioControlFrame.\n   * @implements ISdkAudioControlFrame\n   * @constructor\n   * @param {ISdkAudioControlFrame=} [properties] Properties to set\n   */\n  function SdkAudioControlFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioControlFrame muted.\n   * @member {boolean} muted\n   * @memberof SdkAudioControlFrame\n   * @instance\n   */\n\n\n  SdkAudioControlFrame.prototype.muted = false;\n  /**\n   * Creates a new SdkAudioControlFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {ISdkAudioControlFrame=} [properties] Properties to set\n   * @returns {SdkAudioControlFrame} SdkAudioControlFrame instance\n   */\n\n  SdkAudioControlFrame.create = function create(properties) {\n    return new SdkAudioControlFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioControlFrame message. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioControlFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).bool(message.muted);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioControlFrame message, length delimited. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioControlFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioControlFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioControlFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioControlFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.muted = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioControlFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioControlFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioControlFrame message.\n   * @function verify\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioControlFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) if (typeof message.muted !== \"boolean\") return \"muted: boolean expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkAudioControlFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n   */\n\n\n  SdkAudioControlFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioControlFrame) return object;\n    var message = new $root.SdkAudioControlFrame();\n    if (object.muted != null) message.muted = Boolean(object.muted);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioControlFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioControlFrame\n   * @static\n   * @param {SdkAudioControlFrame} message SdkAudioControlFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioControlFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) object.muted = false;\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) object.muted = message.muted;\n    return object;\n  };\n  /**\n   * Converts this SdkAudioControlFrame to JSON.\n   * @function toJSON\n   * @memberof SdkAudioControlFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioControlFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioControlFrame;\n}();\n\n$root.SdkAudioMetadataFrame = function () {\n  /**\n   * Properties of a SdkAudioMetadataFrame.\n   * @exports ISdkAudioMetadataFrame\n   * @interface ISdkAudioMetadataFrame\n   * @property {Array.<ISdkAudioAttendeeState>|null} [attendeeStates] SdkAudioMetadataFrame attendeeStates\n   */\n\n  /**\n   * Constructs a new SdkAudioMetadataFrame.\n   * @exports SdkAudioMetadataFrame\n   * @classdesc Represents a SdkAudioMetadataFrame.\n   * @implements ISdkAudioMetadataFrame\n   * @constructor\n   * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n   */\n  function SdkAudioMetadataFrame(properties) {\n    this.attendeeStates = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioMetadataFrame attendeeStates.\n   * @member {Array.<ISdkAudioAttendeeState>} attendeeStates\n   * @memberof SdkAudioMetadataFrame\n   * @instance\n   */\n\n\n  SdkAudioMetadataFrame.prototype.attendeeStates = $util.emptyArray;\n  /**\n   * Creates a new SdkAudioMetadataFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n   * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame instance\n   */\n\n  SdkAudioMetadataFrame.create = function create(properties) {\n    return new SdkAudioMetadataFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioMetadataFrame message. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioMetadataFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.attendeeStates != null && message.attendeeStates.length) for (var i = 0; i < message.attendeeStates.length; ++i) $root.SdkAudioAttendeeState.encode(message.attendeeStates[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioMetadataFrame message, length delimited. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioMetadataFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioMetadataFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioMetadataFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.attendeeStates && message.attendeeStates.length)) message.attendeeStates = [];\n          message.attendeeStates.push($root.SdkAudioAttendeeState.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioMetadataFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioMetadataFrame message.\n   * @function verify\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioMetadataFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.attendeeStates != null && message.hasOwnProperty(\"attendeeStates\")) {\n      if (!Array.isArray(message.attendeeStates)) return \"attendeeStates: array expected\";\n\n      for (var i = 0; i < message.attendeeStates.length; ++i) {\n        var error = $root.SdkAudioAttendeeState.verify(message.attendeeStates[i]);\n        if (error) return \"attendeeStates.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkAudioMetadataFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n   */\n\n\n  SdkAudioMetadataFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioMetadataFrame) return object;\n    var message = new $root.SdkAudioMetadataFrame();\n\n    if (object.attendeeStates) {\n      if (!Array.isArray(object.attendeeStates)) throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: array expected\");\n      message.attendeeStates = [];\n\n      for (var i = 0; i < object.attendeeStates.length; ++i) {\n        if (typeof object.attendeeStates[i] !== \"object\") throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: object expected\");\n        message.attendeeStates[i] = $root.SdkAudioAttendeeState.fromObject(object.attendeeStates[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioMetadataFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioMetadataFrame\n   * @static\n   * @param {SdkAudioMetadataFrame} message SdkAudioMetadataFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioMetadataFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.attendeeStates = [];\n\n    if (message.attendeeStates && message.attendeeStates.length) {\n      object.attendeeStates = [];\n\n      for (var j = 0; j < message.attendeeStates.length; ++j) object.attendeeStates[j] = $root.SdkAudioAttendeeState.toObject(message.attendeeStates[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkAudioMetadataFrame to JSON.\n   * @function toJSON\n   * @memberof SdkAudioMetadataFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioMetadataFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioMetadataFrame;\n}();\n\n$root.SdkAudioAttendeeState = function () {\n  /**\n   * Properties of a SdkAudioAttendeeState.\n   * @exports ISdkAudioAttendeeState\n   * @interface ISdkAudioAttendeeState\n   * @property {number|null} [audioStreamId] SdkAudioAttendeeState audioStreamId\n   * @property {number|null} [volume] SdkAudioAttendeeState volume\n   * @property {boolean|null} [muted] SdkAudioAttendeeState muted\n   * @property {number|null} [signalStrength] SdkAudioAttendeeState signalStrength\n   */\n\n  /**\n   * Constructs a new SdkAudioAttendeeState.\n   * @exports SdkAudioAttendeeState\n   * @classdesc Represents a SdkAudioAttendeeState.\n   * @implements ISdkAudioAttendeeState\n   * @constructor\n   * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n   */\n  function SdkAudioAttendeeState(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioAttendeeState audioStreamId.\n   * @member {number} audioStreamId\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   */\n\n\n  SdkAudioAttendeeState.prototype.audioStreamId = 0;\n  /**\n   * SdkAudioAttendeeState volume.\n   * @member {number} volume\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   */\n\n  SdkAudioAttendeeState.prototype.volume = 0;\n  /**\n   * SdkAudioAttendeeState muted.\n   * @member {boolean} muted\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   */\n\n  SdkAudioAttendeeState.prototype.muted = false;\n  /**\n   * SdkAudioAttendeeState signalStrength.\n   * @member {number} signalStrength\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   */\n\n  SdkAudioAttendeeState.prototype.signalStrength = 0;\n  /**\n   * Creates a new SdkAudioAttendeeState instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n   * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState instance\n   */\n\n  SdkAudioAttendeeState.create = function create(properties) {\n    return new SdkAudioAttendeeState(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioAttendeeState message. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioAttendeeState.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.audioStreamId);\n    if (message.volume != null && message.hasOwnProperty(\"volume\")) writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.volume);\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).bool(message.muted);\n    if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).uint32(message.signalStrength);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioAttendeeState message, length delimited. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioAttendeeState.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioAttendeeState message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioAttendeeState.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioAttendeeState();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.audioStreamId = reader.uint32();\n          break;\n\n        case 2:\n          message.volume = reader.uint32();\n          break;\n\n        case 3:\n          message.muted = reader.bool();\n          break;\n\n        case 4:\n          message.signalStrength = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioAttendeeState message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioAttendeeState.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioAttendeeState message.\n   * @function verify\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioAttendeeState.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) if (!$util.isInteger(message.audioStreamId)) return \"audioStreamId: integer expected\";\n    if (message.volume != null && message.hasOwnProperty(\"volume\")) if (!$util.isInteger(message.volume)) return \"volume: integer expected\";\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) if (typeof message.muted !== \"boolean\") return \"muted: boolean expected\";\n    if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\")) if (!$util.isInteger(message.signalStrength)) return \"signalStrength: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkAudioAttendeeState message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n   */\n\n\n  SdkAudioAttendeeState.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioAttendeeState) return object;\n    var message = new $root.SdkAudioAttendeeState();\n    if (object.audioStreamId != null) message.audioStreamId = object.audioStreamId >>> 0;\n    if (object.volume != null) message.volume = object.volume >>> 0;\n    if (object.muted != null) message.muted = Boolean(object.muted);\n    if (object.signalStrength != null) message.signalStrength = object.signalStrength >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioAttendeeState message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioAttendeeState\n   * @static\n   * @param {SdkAudioAttendeeState} message SdkAudioAttendeeState\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioAttendeeState.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.audioStreamId = 0;\n      object.volume = 0;\n      object.muted = false;\n      object.signalStrength = 0;\n    }\n\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) object.audioStreamId = message.audioStreamId;\n    if (message.volume != null && message.hasOwnProperty(\"volume\")) object.volume = message.volume;\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) object.muted = message.muted;\n    if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\")) object.signalStrength = message.signalStrength;\n    return object;\n  };\n  /**\n   * Converts this SdkAudioAttendeeState to JSON.\n   * @function toJSON\n   * @memberof SdkAudioAttendeeState\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioAttendeeState.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioAttendeeState;\n}();\n\n$root.SdkAudioStreamIdInfoFrame = function () {\n  /**\n   * Properties of a SdkAudioStreamIdInfoFrame.\n   * @exports ISdkAudioStreamIdInfoFrame\n   * @interface ISdkAudioStreamIdInfoFrame\n   * @property {Array.<ISdkAudioStreamIdInfo>|null} [streams] SdkAudioStreamIdInfoFrame streams\n   */\n\n  /**\n   * Constructs a new SdkAudioStreamIdInfoFrame.\n   * @exports SdkAudioStreamIdInfoFrame\n   * @classdesc Represents a SdkAudioStreamIdInfoFrame.\n   * @implements ISdkAudioStreamIdInfoFrame\n   * @constructor\n   * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n   */\n  function SdkAudioStreamIdInfoFrame(properties) {\n    this.streams = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioStreamIdInfoFrame streams.\n   * @member {Array.<ISdkAudioStreamIdInfo>} streams\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @instance\n   */\n\n\n  SdkAudioStreamIdInfoFrame.prototype.streams = $util.emptyArray;\n  /**\n   * Creates a new SdkAudioStreamIdInfoFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n   * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame instance\n   */\n\n  SdkAudioStreamIdInfoFrame.create = function create(properties) {\n    return new SdkAudioStreamIdInfoFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioStreamIdInfoFrame message. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStreamIdInfoFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streams != null && message.streams.length) for (var i = 0; i < message.streams.length; ++i) $root.SdkAudioStreamIdInfo.encode(message.streams[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioStreamIdInfoFrame message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStreamIdInfoFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStreamIdInfoFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioStreamIdInfoFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.streams && message.streams.length)) message.streams = [];\n          message.streams.push($root.SdkAudioStreamIdInfo.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStreamIdInfoFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioStreamIdInfoFrame message.\n   * @function verify\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioStreamIdInfoFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.streams != null && message.hasOwnProperty(\"streams\")) {\n      if (!Array.isArray(message.streams)) return \"streams: array expected\";\n\n      for (var i = 0; i < message.streams.length; ++i) {\n        var error = $root.SdkAudioStreamIdInfo.verify(message.streams[i]);\n        if (error) return \"streams.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkAudioStreamIdInfoFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n   */\n\n\n  SdkAudioStreamIdInfoFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioStreamIdInfoFrame) return object;\n    var message = new $root.SdkAudioStreamIdInfoFrame();\n\n    if (object.streams) {\n      if (!Array.isArray(object.streams)) throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: array expected\");\n      message.streams = [];\n\n      for (var i = 0; i < object.streams.length; ++i) {\n        if (typeof object.streams[i] !== \"object\") throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: object expected\");\n        message.streams[i] = $root.SdkAudioStreamIdInfo.fromObject(object.streams[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioStreamIdInfoFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @static\n   * @param {SdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioStreamIdInfoFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.streams = [];\n\n    if (message.streams && message.streams.length) {\n      object.streams = [];\n\n      for (var j = 0; j < message.streams.length; ++j) object.streams[j] = $root.SdkAudioStreamIdInfo.toObject(message.streams[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkAudioStreamIdInfoFrame to JSON.\n   * @function toJSON\n   * @memberof SdkAudioStreamIdInfoFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioStreamIdInfoFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioStreamIdInfoFrame;\n}();\n\n$root.SdkAudioStreamIdInfo = function () {\n  /**\n   * Properties of a SdkAudioStreamIdInfo.\n   * @exports ISdkAudioStreamIdInfo\n   * @interface ISdkAudioStreamIdInfo\n   * @property {number|null} [audioStreamId] SdkAudioStreamIdInfo audioStreamId\n   * @property {string|null} [attendeeId] SdkAudioStreamIdInfo attendeeId\n   * @property {boolean|null} [muted] SdkAudioStreamIdInfo muted\n   * @property {string|null} [externalUserId] SdkAudioStreamIdInfo externalUserId\n   * @property {boolean|null} [dropped] SdkAudioStreamIdInfo dropped\n   */\n\n  /**\n   * Constructs a new SdkAudioStreamIdInfo.\n   * @exports SdkAudioStreamIdInfo\n   * @classdesc Represents a SdkAudioStreamIdInfo.\n   * @implements ISdkAudioStreamIdInfo\n   * @constructor\n   * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n   */\n  function SdkAudioStreamIdInfo(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioStreamIdInfo audioStreamId.\n   * @member {number} audioStreamId\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n\n  SdkAudioStreamIdInfo.prototype.audioStreamId = 0;\n  /**\n   * SdkAudioStreamIdInfo attendeeId.\n   * @member {string} attendeeId\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n  SdkAudioStreamIdInfo.prototype.attendeeId = \"\";\n  /**\n   * SdkAudioStreamIdInfo muted.\n   * @member {boolean} muted\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n  SdkAudioStreamIdInfo.prototype.muted = false;\n  /**\n   * SdkAudioStreamIdInfo externalUserId.\n   * @member {string} externalUserId\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n  SdkAudioStreamIdInfo.prototype.externalUserId = \"\";\n  /**\n   * SdkAudioStreamIdInfo dropped.\n   * @member {boolean} dropped\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   */\n\n  SdkAudioStreamIdInfo.prototype.dropped = false;\n  /**\n   * Creates a new SdkAudioStreamIdInfo instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n   * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo instance\n   */\n\n  SdkAudioStreamIdInfo.create = function create(properties) {\n    return new SdkAudioStreamIdInfo(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioStreamIdInfo message. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStreamIdInfo.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.audioStreamId);\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.attendeeId);\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).bool(message.muted);\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.externalUserId);\n    if (message.dropped != null && message.hasOwnProperty(\"dropped\")) writer.uint32(\n    /* id 5, wireType 0 =*/\n    40).bool(message.dropped);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioStreamIdInfo message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStreamIdInfo.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStreamIdInfo.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioStreamIdInfo();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.audioStreamId = reader.uint32();\n          break;\n\n        case 2:\n          message.attendeeId = reader.string();\n          break;\n\n        case 3:\n          message.muted = reader.bool();\n          break;\n\n        case 4:\n          message.externalUserId = reader.string();\n          break;\n\n        case 5:\n          message.dropped = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStreamIdInfo.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioStreamIdInfo message.\n   * @function verify\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioStreamIdInfo.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) if (!$util.isInteger(message.audioStreamId)) return \"audioStreamId: integer expected\";\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) if (!$util.isString(message.attendeeId)) return \"attendeeId: string expected\";\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) if (typeof message.muted !== \"boolean\") return \"muted: boolean expected\";\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) if (!$util.isString(message.externalUserId)) return \"externalUserId: string expected\";\n    if (message.dropped != null && message.hasOwnProperty(\"dropped\")) if (typeof message.dropped !== \"boolean\") return \"dropped: boolean expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkAudioStreamIdInfo message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n   */\n\n\n  SdkAudioStreamIdInfo.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioStreamIdInfo) return object;\n    var message = new $root.SdkAudioStreamIdInfo();\n    if (object.audioStreamId != null) message.audioStreamId = object.audioStreamId >>> 0;\n    if (object.attendeeId != null) message.attendeeId = String(object.attendeeId);\n    if (object.muted != null) message.muted = Boolean(object.muted);\n    if (object.externalUserId != null) message.externalUserId = String(object.externalUserId);\n    if (object.dropped != null) message.dropped = Boolean(object.dropped);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioStreamIdInfo message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioStreamIdInfo\n   * @static\n   * @param {SdkAudioStreamIdInfo} message SdkAudioStreamIdInfo\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioStreamIdInfo.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.audioStreamId = 0;\n      object.attendeeId = \"\";\n      object.muted = false;\n      object.externalUserId = \"\";\n      object.dropped = false;\n    }\n\n    if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\")) object.audioStreamId = message.audioStreamId;\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) object.attendeeId = message.attendeeId;\n    if (message.muted != null && message.hasOwnProperty(\"muted\")) object.muted = message.muted;\n    if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\")) object.externalUserId = message.externalUserId;\n    if (message.dropped != null && message.hasOwnProperty(\"dropped\")) object.dropped = message.dropped;\n    return object;\n  };\n  /**\n   * Converts this SdkAudioStreamIdInfo to JSON.\n   * @function toJSON\n   * @memberof SdkAudioStreamIdInfo\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioStreamIdInfo.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioStreamIdInfo;\n}();\n/**\n * SdkPingPongType enum.\n * @exports SdkPingPongType\n * @enum {string}\n * @property {number} PING=1 PING value\n * @property {number} PONG=2 PONG value\n */\n\n\n$root.SdkPingPongType = function () {\n  var valuesById = {},\n      values = Object.create(valuesById);\n  values[valuesById[1] = \"PING\"] = 1;\n  values[valuesById[2] = \"PONG\"] = 2;\n  return values;\n}();\n\n$root.SdkPingPongFrame = function () {\n  /**\n   * Properties of a SdkPingPongFrame.\n   * @exports ISdkPingPongFrame\n   * @interface ISdkPingPongFrame\n   * @property {SdkPingPongType} type SdkPingPongFrame type\n   * @property {number} pingId SdkPingPongFrame pingId\n   */\n\n  /**\n   * Constructs a new SdkPingPongFrame.\n   * @exports SdkPingPongFrame\n   * @classdesc Represents a SdkPingPongFrame.\n   * @implements ISdkPingPongFrame\n   * @constructor\n   * @param {ISdkPingPongFrame=} [properties] Properties to set\n   */\n  function SdkPingPongFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkPingPongFrame type.\n   * @member {SdkPingPongType} type\n   * @memberof SdkPingPongFrame\n   * @instance\n   */\n\n\n  SdkPingPongFrame.prototype.type = 1;\n  /**\n   * SdkPingPongFrame pingId.\n   * @member {number} pingId\n   * @memberof SdkPingPongFrame\n   * @instance\n   */\n\n  SdkPingPongFrame.prototype.pingId = 0;\n  /**\n   * Creates a new SdkPingPongFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {ISdkPingPongFrame=} [properties] Properties to set\n   * @returns {SdkPingPongFrame} SdkPingPongFrame instance\n   */\n\n  SdkPingPongFrame.create = function create(properties) {\n    return new SdkPingPongFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkPingPongFrame message. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPingPongFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).int32(message.type);\n    writer.uint32(\n    /* id 2, wireType 0 =*/\n    16).uint32(message.pingId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkPingPongFrame message, length delimited. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkPingPongFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkPingPongFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkPingPongFrame} SdkPingPongFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPingPongFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkPingPongFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n\n        case 2:\n          message.pingId = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    if (!message.hasOwnProperty(\"type\")) throw $util.ProtocolError(\"missing required 'type'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"pingId\")) throw $util.ProtocolError(\"missing required 'pingId'\", {\n      instance: message\n    });\n    return message;\n  };\n  /**\n   * Decodes a SdkPingPongFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkPingPongFrame} SdkPingPongFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkPingPongFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkPingPongFrame message.\n   * @function verify\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkPingPongFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    switch (message.type) {\n      default:\n        return \"type: enum value expected\";\n\n      case 1:\n      case 2:\n        break;\n    }\n\n    if (!$util.isInteger(message.pingId)) return \"pingId: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkPingPongFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkPingPongFrame} SdkPingPongFrame\n   */\n\n\n  SdkPingPongFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkPingPongFrame) return object;\n    var message = new $root.SdkPingPongFrame();\n\n    switch (object.type) {\n      case \"PING\":\n      case 1:\n        message.type = 1;\n        break;\n\n      case \"PONG\":\n      case 2:\n        message.type = 2;\n        break;\n    }\n\n    if (object.pingId != null) message.pingId = object.pingId >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkPingPongFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkPingPongFrame\n   * @static\n   * @param {SdkPingPongFrame} message SdkPingPongFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkPingPongFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.type = options.enums === String ? \"PING\" : 1;\n      object.pingId = 0;\n    }\n\n    if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.SdkPingPongType[message.type] : message.type;\n    if (message.pingId != null && message.hasOwnProperty(\"pingId\")) object.pingId = message.pingId;\n    return object;\n  };\n  /**\n   * Converts this SdkPingPongFrame to JSON.\n   * @function toJSON\n   * @memberof SdkPingPongFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkPingPongFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkPingPongFrame;\n}();\n\n$root.SdkAudioStatusFrame = function () {\n  /**\n   * Properties of a SdkAudioStatusFrame.\n   * @exports ISdkAudioStatusFrame\n   * @interface ISdkAudioStatusFrame\n   * @property {number|null} [audioStatus] SdkAudioStatusFrame audioStatus\n   */\n\n  /**\n   * Constructs a new SdkAudioStatusFrame.\n   * @exports SdkAudioStatusFrame\n   * @classdesc Represents a SdkAudioStatusFrame.\n   * @implements ISdkAudioStatusFrame\n   * @constructor\n   * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n   */\n  function SdkAudioStatusFrame(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkAudioStatusFrame audioStatus.\n   * @member {number} audioStatus\n   * @memberof SdkAudioStatusFrame\n   * @instance\n   */\n\n\n  SdkAudioStatusFrame.prototype.audioStatus = 0;\n  /**\n   * Creates a new SdkAudioStatusFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n   * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame instance\n   */\n\n  SdkAudioStatusFrame.create = function create(properties) {\n    return new SdkAudioStatusFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkAudioStatusFrame message. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStatusFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint32(message.audioStatus);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkAudioStatusFrame message, length delimited. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkAudioStatusFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkAudioStatusFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStatusFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkAudioStatusFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.audioStatus = reader.uint32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkAudioStatusFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkAudioStatusFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkAudioStatusFrame message.\n   * @function verify\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkAudioStatusFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) if (!$util.isInteger(message.audioStatus)) return \"audioStatus: integer expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkAudioStatusFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n   */\n\n\n  SdkAudioStatusFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkAudioStatusFrame) return object;\n    var message = new $root.SdkAudioStatusFrame();\n    if (object.audioStatus != null) message.audioStatus = object.audioStatus >>> 0;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkAudioStatusFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkAudioStatusFrame\n   * @static\n   * @param {SdkAudioStatusFrame} message SdkAudioStatusFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkAudioStatusFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) object.audioStatus = 0;\n    if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) object.audioStatus = message.audioStatus;\n    return object;\n  };\n  /**\n   * Converts this SdkAudioStatusFrame to JSON.\n   * @function toJSON\n   * @memberof SdkAudioStatusFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkAudioStatusFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkAudioStatusFrame;\n}();\n\n$root.SdkMetric = function () {\n  /**\n   * Properties of a SdkMetric.\n   * @exports ISdkMetric\n   * @interface ISdkMetric\n   * @property {SdkMetric.Type|null} [type] SdkMetric type\n   * @property {number|null} [value] SdkMetric value\n   */\n\n  /**\n   * Constructs a new SdkMetric.\n   * @exports SdkMetric\n   * @classdesc Represents a SdkMetric.\n   * @implements ISdkMetric\n   * @constructor\n   * @param {ISdkMetric=} [properties] Properties to set\n   */\n  function SdkMetric(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkMetric type.\n   * @member {SdkMetric.Type} type\n   * @memberof SdkMetric\n   * @instance\n   */\n\n\n  SdkMetric.prototype.type = 1;\n  /**\n   * SdkMetric value.\n   * @member {number} value\n   * @memberof SdkMetric\n   * @instance\n   */\n\n  SdkMetric.prototype.value = 0;\n  /**\n   * Creates a new SdkMetric instance using the specified properties.\n   * @function create\n   * @memberof SdkMetric\n   * @static\n   * @param {ISdkMetric=} [properties] Properties to set\n   * @returns {SdkMetric} SdkMetric instance\n   */\n\n  SdkMetric.create = function create(properties) {\n    return new SdkMetric(properties);\n  };\n  /**\n   * Encodes the specified SdkMetric message. Does not implicitly {@link SdkMetric.verify|verify} messages.\n   * @function encode\n   * @memberof SdkMetric\n   * @static\n   * @param {ISdkMetric} message SdkMetric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkMetric.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).int32(message.type);\n    if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n    /* id 2, wireType 1 =*/\n    17).double(message.value);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkMetric message, length delimited. Does not implicitly {@link SdkMetric.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkMetric\n   * @static\n   * @param {ISdkMetric} message SdkMetric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkMetric.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkMetric message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkMetric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkMetric} SdkMetric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkMetric.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkMetric();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n\n        case 2:\n          message.value = reader.double();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkMetric message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkMetric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkMetric} SdkMetric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkMetric.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkMetric message.\n   * @function verify\n   * @memberof SdkMetric\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkMetric.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n      default:\n        return \"type: enum value expected\";\n\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 11:\n      case 12:\n      case 13:\n      case 14:\n      case 15:\n      case 16:\n      case 17:\n      case 18:\n      case 19:\n      case 20:\n      case 21:\n      case 22:\n      case 23:\n      case 24:\n      case 25:\n      case 26:\n      case 27:\n      case 28:\n      case 29:\n      case 30:\n      case 31:\n      case 32:\n      case 33:\n      case 34:\n      case 35:\n      case 36:\n      case 37:\n      case 38:\n      case 39:\n      case 40:\n      case 41:\n      case 42:\n      case 43:\n      case 44:\n      case 45:\n      case 46:\n      case 47:\n      case 48:\n      case 49:\n      case 66:\n      case 72:\n        break;\n    }\n    if (message.value != null && message.hasOwnProperty(\"value\")) if (typeof message.value !== \"number\") return \"value: number expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkMetric message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkMetric\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkMetric} SdkMetric\n   */\n\n\n  SdkMetric.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkMetric) return object;\n    var message = new $root.SdkMetric();\n\n    switch (object.type) {\n      case \"VIDEO_ACTUAL_ENCODER_BITRATE\":\n      case 1:\n        message.type = 1;\n        break;\n\n      case \"VIDEO_AVAILABLE_SEND_BANDWIDTH\":\n      case 2:\n        message.type = 2;\n        break;\n\n      case \"VIDEO_RETRANSMIT_BITRATE\":\n      case 3:\n        message.type = 3;\n        break;\n\n      case \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\":\n      case 4:\n        message.type = 4;\n        break;\n\n      case \"VIDEO_TARGET_ENCODER_BITRATE\":\n      case 5:\n        message.type = 5;\n        break;\n\n      case \"VIDEO_BUCKET_DELAY_MS\":\n      case 6:\n        message.type = 6;\n        break;\n\n      case \"STUN_RTT_MS\":\n      case 7:\n        message.type = 7;\n        break;\n\n      case \"SOCKET_DISCARDED_PPS\":\n      case 8:\n        message.type = 8;\n        break;\n\n      case \"RTC_MIC_JITTER_MS\":\n      case 9:\n        message.type = 9;\n        break;\n\n      case \"RTC_MIC_PPS\":\n      case 10:\n        message.type = 10;\n        break;\n\n      case \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\":\n      case 11:\n        message.type = 11;\n        break;\n\n      case \"RTC_MIC_BITRATE\":\n      case 12:\n        message.type = 12;\n        break;\n\n      case \"RTC_MIC_RTT_MS\":\n      case 13:\n        message.type = 13;\n        break;\n\n      case \"RTC_SPK_PPS\":\n      case 14:\n        message.type = 14;\n        break;\n\n      case \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\":\n      case 15:\n        message.type = 15;\n        break;\n\n      case \"RTC_SPK_JITTER_MS\":\n      case 16:\n        message.type = 16;\n        break;\n\n      case \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\":\n      case 17:\n        message.type = 17;\n        break;\n\n      case \"RTC_SPK_BITRATE\":\n      case 18:\n        message.type = 18;\n        break;\n\n      case \"RTC_SPK_CURRENT_DELAY_MS\":\n      case 19:\n        message.type = 19;\n        break;\n\n      case \"RTC_SPK_JITTER_BUFFER_MS\":\n      case 20:\n        message.type = 20;\n        break;\n\n      case \"VIDEO_SENT_RTT_MS\":\n      case 21:\n        message.type = 21;\n        break;\n\n      case \"VIDEO_ENCODE_USAGE_PERCENT\":\n      case 22:\n        message.type = 22;\n        break;\n\n      case \"VIDEO_NACKS_RECEIVED\":\n      case 23:\n        message.type = 23;\n        break;\n\n      case \"VIDEO_PLIS_RECEIVED\":\n      case 24:\n        message.type = 24;\n        break;\n\n      case \"VIDEO_AVERAGE_ENCODE_MS\":\n      case 25:\n        message.type = 25;\n        break;\n\n      case \"VIDEO_INPUT_FPS\":\n      case 26:\n        message.type = 26;\n        break;\n\n      case \"VIDEO_ENCODE_FPS\":\n      case 27:\n        message.type = 27;\n        break;\n\n      case \"VIDEO_SENT_FPS\":\n      case 28:\n        message.type = 28;\n        break;\n\n      case \"VIDEO_FIRS_RECEIVED\":\n      case 29:\n        message.type = 29;\n        break;\n\n      case \"VIDEO_SENT_PPS\":\n      case 30:\n        message.type = 30;\n        break;\n\n      case \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\":\n      case 31:\n        message.type = 31;\n        break;\n\n      case \"VIDEO_SENT_BITRATE\":\n      case 32:\n        message.type = 32;\n        break;\n\n      case \"VIDEO_DROPPED_FPS\":\n      case 33:\n        message.type = 33;\n        break;\n\n      case \"VIDEO_TARGET_DELAY_MS\":\n      case 34:\n        message.type = 34;\n        break;\n\n      case \"VIDEO_DECODE_MS\":\n      case 35:\n        message.type = 35;\n        break;\n\n      case \"VIDEO_OUTPUT_FPS\":\n      case 36:\n        message.type = 36;\n        break;\n\n      case \"VIDEO_RECEIVED_PPS\":\n      case 37:\n        message.type = 37;\n        break;\n\n      case \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\":\n      case 38:\n        message.type = 38;\n        break;\n\n      case \"VIDEO_RENDER_DELAY_MS\":\n      case 39:\n        message.type = 39;\n        break;\n\n      case \"VIDEO_RECEIVED_FPS\":\n      case 40:\n        message.type = 40;\n        break;\n\n      case \"VIDEO_DECODE_FPS\":\n      case 41:\n        message.type = 41;\n        break;\n\n      case \"VIDEO_NACKS_SENT\":\n      case 42:\n        message.type = 42;\n        break;\n\n      case \"VIDEO_FIRS_SENT\":\n      case 43:\n        message.type = 43;\n        break;\n\n      case \"VIDEO_RECEIVED_BITRATE\":\n      case 44:\n        message.type = 44;\n        break;\n\n      case \"VIDEO_CURRENT_DELAY_MS\":\n      case 45:\n        message.type = 45;\n        break;\n\n      case \"VIDEO_JITTER_BUFFER_MS\":\n      case 46:\n        message.type = 46;\n        break;\n\n      case \"VIDEO_DISCARDED_PPS\":\n      case 47:\n        message.type = 47;\n        break;\n\n      case \"VIDEO_PLIS_SENT\":\n      case 48:\n        message.type = 48;\n        break;\n\n      case \"VIDEO_RECEIVED_JITTER_MS\":\n      case 49:\n        message.type = 49;\n        break;\n\n      case \"VIDEO_SENT_QP_SUM\":\n      case 66:\n        message.type = 66;\n        break;\n\n      case \"VIDEO_RECEIVED_QP_SUM\":\n      case 72:\n        message.type = 72;\n        break;\n    }\n\n    if (object.value != null) message.value = Number(object.value);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkMetric message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkMetric\n   * @static\n   * @param {SdkMetric} message SdkMetric\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkMetric.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.type = options.enums === String ? \"VIDEO_ACTUAL_ENCODER_BITRATE\" : 1;\n      object.value = 0;\n    }\n\n    if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.SdkMetric.Type[message.type] : message.type;\n    if (message.value != null && message.hasOwnProperty(\"value\")) object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n    return object;\n  };\n  /**\n   * Converts this SdkMetric to JSON.\n   * @function toJSON\n   * @memberof SdkMetric\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkMetric.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  /**\n   * Type enum.\n   * @name SdkMetric.Type\n   * @enum {string}\n   * @property {number} VIDEO_ACTUAL_ENCODER_BITRATE=1 VIDEO_ACTUAL_ENCODER_BITRATE value\n   * @property {number} VIDEO_AVAILABLE_SEND_BANDWIDTH=2 VIDEO_AVAILABLE_SEND_BANDWIDTH value\n   * @property {number} VIDEO_RETRANSMIT_BITRATE=3 VIDEO_RETRANSMIT_BITRATE value\n   * @property {number} VIDEO_AVAILABLE_RECEIVE_BANDWIDTH=4 VIDEO_AVAILABLE_RECEIVE_BANDWIDTH value\n   * @property {number} VIDEO_TARGET_ENCODER_BITRATE=5 VIDEO_TARGET_ENCODER_BITRATE value\n   * @property {number} VIDEO_BUCKET_DELAY_MS=6 VIDEO_BUCKET_DELAY_MS value\n   * @property {number} STUN_RTT_MS=7 STUN_RTT_MS value\n   * @property {number} SOCKET_DISCARDED_PPS=8 SOCKET_DISCARDED_PPS value\n   * @property {number} RTC_MIC_JITTER_MS=9 RTC_MIC_JITTER_MS value\n   * @property {number} RTC_MIC_PPS=10 RTC_MIC_PPS value\n   * @property {number} RTC_MIC_FRACTION_PACKET_LOST_PERCENT=11 RTC_MIC_FRACTION_PACKET_LOST_PERCENT value\n   * @property {number} RTC_MIC_BITRATE=12 RTC_MIC_BITRATE value\n   * @property {number} RTC_MIC_RTT_MS=13 RTC_MIC_RTT_MS value\n   * @property {number} RTC_SPK_PPS=14 RTC_SPK_PPS value\n   * @property {number} RTC_SPK_FRACTION_PACKET_LOST_PERCENT=15 RTC_SPK_FRACTION_PACKET_LOST_PERCENT value\n   * @property {number} RTC_SPK_JITTER_MS=16 RTC_SPK_JITTER_MS value\n   * @property {number} RTC_SPK_FRACTION_DECODER_LOSS_PERCENT=17 RTC_SPK_FRACTION_DECODER_LOSS_PERCENT value\n   * @property {number} RTC_SPK_BITRATE=18 RTC_SPK_BITRATE value\n   * @property {number} RTC_SPK_CURRENT_DELAY_MS=19 RTC_SPK_CURRENT_DELAY_MS value\n   * @property {number} RTC_SPK_JITTER_BUFFER_MS=20 RTC_SPK_JITTER_BUFFER_MS value\n   * @property {number} VIDEO_SENT_RTT_MS=21 VIDEO_SENT_RTT_MS value\n   * @property {number} VIDEO_ENCODE_USAGE_PERCENT=22 VIDEO_ENCODE_USAGE_PERCENT value\n   * @property {number} VIDEO_NACKS_RECEIVED=23 VIDEO_NACKS_RECEIVED value\n   * @property {number} VIDEO_PLIS_RECEIVED=24 VIDEO_PLIS_RECEIVED value\n   * @property {number} VIDEO_AVERAGE_ENCODE_MS=25 VIDEO_AVERAGE_ENCODE_MS value\n   * @property {number} VIDEO_INPUT_FPS=26 VIDEO_INPUT_FPS value\n   * @property {number} VIDEO_ENCODE_FPS=27 VIDEO_ENCODE_FPS value\n   * @property {number} VIDEO_SENT_FPS=28 VIDEO_SENT_FPS value\n   * @property {number} VIDEO_FIRS_RECEIVED=29 VIDEO_FIRS_RECEIVED value\n   * @property {number} VIDEO_SENT_PPS=30 VIDEO_SENT_PPS value\n   * @property {number} VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT=31 VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT value\n   * @property {number} VIDEO_SENT_BITRATE=32 VIDEO_SENT_BITRATE value\n   * @property {number} VIDEO_DROPPED_FPS=33 VIDEO_DROPPED_FPS value\n   * @property {number} VIDEO_TARGET_DELAY_MS=34 VIDEO_TARGET_DELAY_MS value\n   * @property {number} VIDEO_DECODE_MS=35 VIDEO_DECODE_MS value\n   * @property {number} VIDEO_OUTPUT_FPS=36 VIDEO_OUTPUT_FPS value\n   * @property {number} VIDEO_RECEIVED_PPS=37 VIDEO_RECEIVED_PPS value\n   * @property {number} VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT=38 VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT value\n   * @property {number} VIDEO_RENDER_DELAY_MS=39 VIDEO_RENDER_DELAY_MS value\n   * @property {number} VIDEO_RECEIVED_FPS=40 VIDEO_RECEIVED_FPS value\n   * @property {number} VIDEO_DECODE_FPS=41 VIDEO_DECODE_FPS value\n   * @property {number} VIDEO_NACKS_SENT=42 VIDEO_NACKS_SENT value\n   * @property {number} VIDEO_FIRS_SENT=43 VIDEO_FIRS_SENT value\n   * @property {number} VIDEO_RECEIVED_BITRATE=44 VIDEO_RECEIVED_BITRATE value\n   * @property {number} VIDEO_CURRENT_DELAY_MS=45 VIDEO_CURRENT_DELAY_MS value\n   * @property {number} VIDEO_JITTER_BUFFER_MS=46 VIDEO_JITTER_BUFFER_MS value\n   * @property {number} VIDEO_DISCARDED_PPS=47 VIDEO_DISCARDED_PPS value\n   * @property {number} VIDEO_PLIS_SENT=48 VIDEO_PLIS_SENT value\n   * @property {number} VIDEO_RECEIVED_JITTER_MS=49 VIDEO_RECEIVED_JITTER_MS value\n   * @property {number} VIDEO_SENT_QP_SUM=66 VIDEO_SENT_QP_SUM value\n   * @property {number} VIDEO_RECEIVED_QP_SUM=72 VIDEO_RECEIVED_QP_SUM value\n   */\n\n\n  SdkMetric.Type = function () {\n    var valuesById = {},\n        values = Object.create(valuesById);\n    values[valuesById[1] = \"VIDEO_ACTUAL_ENCODER_BITRATE\"] = 1;\n    values[valuesById[2] = \"VIDEO_AVAILABLE_SEND_BANDWIDTH\"] = 2;\n    values[valuesById[3] = \"VIDEO_RETRANSMIT_BITRATE\"] = 3;\n    values[valuesById[4] = \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\"] = 4;\n    values[valuesById[5] = \"VIDEO_TARGET_ENCODER_BITRATE\"] = 5;\n    values[valuesById[6] = \"VIDEO_BUCKET_DELAY_MS\"] = 6;\n    values[valuesById[7] = \"STUN_RTT_MS\"] = 7;\n    values[valuesById[8] = \"SOCKET_DISCARDED_PPS\"] = 8;\n    values[valuesById[9] = \"RTC_MIC_JITTER_MS\"] = 9;\n    values[valuesById[10] = \"RTC_MIC_PPS\"] = 10;\n    values[valuesById[11] = \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\"] = 11;\n    values[valuesById[12] = \"RTC_MIC_BITRATE\"] = 12;\n    values[valuesById[13] = \"RTC_MIC_RTT_MS\"] = 13;\n    values[valuesById[14] = \"RTC_SPK_PPS\"] = 14;\n    values[valuesById[15] = \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\"] = 15;\n    values[valuesById[16] = \"RTC_SPK_JITTER_MS\"] = 16;\n    values[valuesById[17] = \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\"] = 17;\n    values[valuesById[18] = \"RTC_SPK_BITRATE\"] = 18;\n    values[valuesById[19] = \"RTC_SPK_CURRENT_DELAY_MS\"] = 19;\n    values[valuesById[20] = \"RTC_SPK_JITTER_BUFFER_MS\"] = 20;\n    values[valuesById[21] = \"VIDEO_SENT_RTT_MS\"] = 21;\n    values[valuesById[22] = \"VIDEO_ENCODE_USAGE_PERCENT\"] = 22;\n    values[valuesById[23] = \"VIDEO_NACKS_RECEIVED\"] = 23;\n    values[valuesById[24] = \"VIDEO_PLIS_RECEIVED\"] = 24;\n    values[valuesById[25] = \"VIDEO_AVERAGE_ENCODE_MS\"] = 25;\n    values[valuesById[26] = \"VIDEO_INPUT_FPS\"] = 26;\n    values[valuesById[27] = \"VIDEO_ENCODE_FPS\"] = 27;\n    values[valuesById[28] = \"VIDEO_SENT_FPS\"] = 28;\n    values[valuesById[29] = \"VIDEO_FIRS_RECEIVED\"] = 29;\n    values[valuesById[30] = \"VIDEO_SENT_PPS\"] = 30;\n    values[valuesById[31] = \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\"] = 31;\n    values[valuesById[32] = \"VIDEO_SENT_BITRATE\"] = 32;\n    values[valuesById[33] = \"VIDEO_DROPPED_FPS\"] = 33;\n    values[valuesById[34] = \"VIDEO_TARGET_DELAY_MS\"] = 34;\n    values[valuesById[35] = \"VIDEO_DECODE_MS\"] = 35;\n    values[valuesById[36] = \"VIDEO_OUTPUT_FPS\"] = 36;\n    values[valuesById[37] = \"VIDEO_RECEIVED_PPS\"] = 37;\n    values[valuesById[38] = \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\"] = 38;\n    values[valuesById[39] = \"VIDEO_RENDER_DELAY_MS\"] = 39;\n    values[valuesById[40] = \"VIDEO_RECEIVED_FPS\"] = 40;\n    values[valuesById[41] = \"VIDEO_DECODE_FPS\"] = 41;\n    values[valuesById[42] = \"VIDEO_NACKS_SENT\"] = 42;\n    values[valuesById[43] = \"VIDEO_FIRS_SENT\"] = 43;\n    values[valuesById[44] = \"VIDEO_RECEIVED_BITRATE\"] = 44;\n    values[valuesById[45] = \"VIDEO_CURRENT_DELAY_MS\"] = 45;\n    values[valuesById[46] = \"VIDEO_JITTER_BUFFER_MS\"] = 46;\n    values[valuesById[47] = \"VIDEO_DISCARDED_PPS\"] = 47;\n    values[valuesById[48] = \"VIDEO_PLIS_SENT\"] = 48;\n    values[valuesById[49] = \"VIDEO_RECEIVED_JITTER_MS\"] = 49;\n    values[valuesById[66] = \"VIDEO_SENT_QP_SUM\"] = 66;\n    values[valuesById[72] = \"VIDEO_RECEIVED_QP_SUM\"] = 72;\n    return values;\n  }();\n\n  return SdkMetric;\n}();\n\n$root.SdkStreamMetricFrame = function () {\n  /**\n   * Properties of a SdkStreamMetricFrame.\n   * @exports ISdkStreamMetricFrame\n   * @interface ISdkStreamMetricFrame\n   * @property {number|null} [streamId] SdkStreamMetricFrame streamId\n   * @property {number|null} [groupId] SdkStreamMetricFrame groupId\n   * @property {Array.<ISdkMetric>|null} [metrics] SdkStreamMetricFrame metrics\n   */\n\n  /**\n   * Constructs a new SdkStreamMetricFrame.\n   * @exports SdkStreamMetricFrame\n   * @classdesc Represents a SdkStreamMetricFrame.\n   * @implements ISdkStreamMetricFrame\n   * @constructor\n   * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n   */\n  function SdkStreamMetricFrame(properties) {\n    this.metrics = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkStreamMetricFrame streamId.\n   * @member {number} streamId\n   * @memberof SdkStreamMetricFrame\n   * @instance\n   */\n\n\n  SdkStreamMetricFrame.prototype.streamId = 0;\n  /**\n   * SdkStreamMetricFrame groupId.\n   * @member {number} groupId\n   * @memberof SdkStreamMetricFrame\n   * @instance\n   */\n\n  SdkStreamMetricFrame.prototype.groupId = 0;\n  /**\n   * SdkStreamMetricFrame metrics.\n   * @member {Array.<ISdkMetric>} metrics\n   * @memberof SdkStreamMetricFrame\n   * @instance\n   */\n\n  SdkStreamMetricFrame.prototype.metrics = $util.emptyArray;\n  /**\n   * Creates a new SdkStreamMetricFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n   * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame instance\n   */\n\n  SdkStreamMetricFrame.create = function create(properties) {\n    return new SdkStreamMetricFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkStreamMetricFrame message. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamMetricFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.streamId);\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).uint32(message.groupId);\n    if (message.metrics != null && message.metrics.length) for (var i = 0; i < message.metrics.length; ++i) $root.SdkMetric.encode(message.metrics[i], writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkStreamMetricFrame message, length delimited. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkStreamMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkStreamMetricFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamMetricFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkStreamMetricFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 3:\n          message.streamId = reader.uint32();\n          break;\n\n        case 4:\n          message.groupId = reader.uint32();\n          break;\n\n        case 5:\n          if (!(message.metrics && message.metrics.length)) message.metrics = [];\n          message.metrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkStreamMetricFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkStreamMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkStreamMetricFrame message.\n   * @function verify\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkStreamMetricFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) if (!$util.isInteger(message.streamId)) return \"streamId: integer expected\";\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) if (!$util.isInteger(message.groupId)) return \"groupId: integer expected\";\n\n    if (message.metrics != null && message.hasOwnProperty(\"metrics\")) {\n      if (!Array.isArray(message.metrics)) return \"metrics: array expected\";\n\n      for (var i = 0; i < message.metrics.length; ++i) {\n        var error = $root.SdkMetric.verify(message.metrics[i]);\n        if (error) return \"metrics.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkStreamMetricFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n   */\n\n\n  SdkStreamMetricFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkStreamMetricFrame) return object;\n    var message = new $root.SdkStreamMetricFrame();\n    if (object.streamId != null) message.streamId = object.streamId >>> 0;\n    if (object.groupId != null) message.groupId = object.groupId >>> 0;\n\n    if (object.metrics) {\n      if (!Array.isArray(object.metrics)) throw TypeError(\".SdkStreamMetricFrame.metrics: array expected\");\n      message.metrics = [];\n\n      for (var i = 0; i < object.metrics.length; ++i) {\n        if (typeof object.metrics[i] !== \"object\") throw TypeError(\".SdkStreamMetricFrame.metrics: object expected\");\n        message.metrics[i] = $root.SdkMetric.fromObject(object.metrics[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkStreamMetricFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkStreamMetricFrame\n   * @static\n   * @param {SdkStreamMetricFrame} message SdkStreamMetricFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkStreamMetricFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.metrics = [];\n\n    if (options.defaults) {\n      object.streamId = 0;\n      object.groupId = 0;\n    }\n\n    if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n    if (message.groupId != null && message.hasOwnProperty(\"groupId\")) object.groupId = message.groupId;\n\n    if (message.metrics && message.metrics.length) {\n      object.metrics = [];\n\n      for (var j = 0; j < message.metrics.length; ++j) object.metrics[j] = $root.SdkMetric.toObject(message.metrics[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkStreamMetricFrame to JSON.\n   * @function toJSON\n   * @memberof SdkStreamMetricFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkStreamMetricFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkStreamMetricFrame;\n}();\n\n$root.SdkClientMetricFrame = function () {\n  /**\n   * Properties of a SdkClientMetricFrame.\n   * @exports ISdkClientMetricFrame\n   * @interface ISdkClientMetricFrame\n   * @property {Array.<ISdkMetric>|null} [globalMetrics] SdkClientMetricFrame globalMetrics\n   * @property {Array.<ISdkStreamMetricFrame>|null} [streamMetricFrames] SdkClientMetricFrame streamMetricFrames\n   */\n\n  /**\n   * Constructs a new SdkClientMetricFrame.\n   * @exports SdkClientMetricFrame\n   * @classdesc Represents a SdkClientMetricFrame.\n   * @implements ISdkClientMetricFrame\n   * @constructor\n   * @param {ISdkClientMetricFrame=} [properties] Properties to set\n   */\n  function SdkClientMetricFrame(properties) {\n    this.globalMetrics = [];\n    this.streamMetricFrames = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkClientMetricFrame globalMetrics.\n   * @member {Array.<ISdkMetric>} globalMetrics\n   * @memberof SdkClientMetricFrame\n   * @instance\n   */\n\n\n  SdkClientMetricFrame.prototype.globalMetrics = $util.emptyArray;\n  /**\n   * SdkClientMetricFrame streamMetricFrames.\n   * @member {Array.<ISdkStreamMetricFrame>} streamMetricFrames\n   * @memberof SdkClientMetricFrame\n   * @instance\n   */\n\n  SdkClientMetricFrame.prototype.streamMetricFrames = $util.emptyArray;\n  /**\n   * Creates a new SdkClientMetricFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {ISdkClientMetricFrame=} [properties] Properties to set\n   * @returns {SdkClientMetricFrame} SdkClientMetricFrame instance\n   */\n\n  SdkClientMetricFrame.create = function create(properties) {\n    return new SdkClientMetricFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkClientMetricFrame message. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkClientMetricFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.globalMetrics != null && message.globalMetrics.length) for (var i = 0; i < message.globalMetrics.length; ++i) $root.SdkMetric.encode(message.globalMetrics[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    if (message.streamMetricFrames != null && message.streamMetricFrames.length) for (var i = 0; i < message.streamMetricFrames.length; ++i) $root.SdkStreamMetricFrame.encode(message.streamMetricFrames[i], writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkClientMetricFrame message, length delimited. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkClientMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkClientMetricFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkClientMetricFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkClientMetricFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.globalMetrics && message.globalMetrics.length)) message.globalMetrics = [];\n          message.globalMetrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          if (!(message.streamMetricFrames && message.streamMetricFrames.length)) message.streamMetricFrames = [];\n          message.streamMetricFrames.push($root.SdkStreamMetricFrame.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkClientMetricFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkClientMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkClientMetricFrame message.\n   * @function verify\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkClientMetricFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.globalMetrics != null && message.hasOwnProperty(\"globalMetrics\")) {\n      if (!Array.isArray(message.globalMetrics)) return \"globalMetrics: array expected\";\n\n      for (var i = 0; i < message.globalMetrics.length; ++i) {\n        var error = $root.SdkMetric.verify(message.globalMetrics[i]);\n        if (error) return \"globalMetrics.\" + error;\n      }\n    }\n\n    if (message.streamMetricFrames != null && message.hasOwnProperty(\"streamMetricFrames\")) {\n      if (!Array.isArray(message.streamMetricFrames)) return \"streamMetricFrames: array expected\";\n\n      for (var i = 0; i < message.streamMetricFrames.length; ++i) {\n        var error = $root.SdkStreamMetricFrame.verify(message.streamMetricFrames[i]);\n        if (error) return \"streamMetricFrames.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkClientMetricFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n   */\n\n\n  SdkClientMetricFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkClientMetricFrame) return object;\n    var message = new $root.SdkClientMetricFrame();\n\n    if (object.globalMetrics) {\n      if (!Array.isArray(object.globalMetrics)) throw TypeError(\".SdkClientMetricFrame.globalMetrics: array expected\");\n      message.globalMetrics = [];\n\n      for (var i = 0; i < object.globalMetrics.length; ++i) {\n        if (typeof object.globalMetrics[i] !== \"object\") throw TypeError(\".SdkClientMetricFrame.globalMetrics: object expected\");\n        message.globalMetrics[i] = $root.SdkMetric.fromObject(object.globalMetrics[i]);\n      }\n    }\n\n    if (object.streamMetricFrames) {\n      if (!Array.isArray(object.streamMetricFrames)) throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: array expected\");\n      message.streamMetricFrames = [];\n\n      for (var i = 0; i < object.streamMetricFrames.length; ++i) {\n        if (typeof object.streamMetricFrames[i] !== \"object\") throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: object expected\");\n        message.streamMetricFrames[i] = $root.SdkStreamMetricFrame.fromObject(object.streamMetricFrames[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkClientMetricFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkClientMetricFrame\n   * @static\n   * @param {SdkClientMetricFrame} message SdkClientMetricFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkClientMetricFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.arrays || options.defaults) {\n      object.globalMetrics = [];\n      object.streamMetricFrames = [];\n    }\n\n    if (message.globalMetrics && message.globalMetrics.length) {\n      object.globalMetrics = [];\n\n      for (var j = 0; j < message.globalMetrics.length; ++j) object.globalMetrics[j] = $root.SdkMetric.toObject(message.globalMetrics[j], options);\n    }\n\n    if (message.streamMetricFrames && message.streamMetricFrames.length) {\n      object.streamMetricFrames = [];\n\n      for (var j = 0; j < message.streamMetricFrames.length; ++j) object.streamMetricFrames[j] = $root.SdkStreamMetricFrame.toObject(message.streamMetricFrames[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkClientMetricFrame to JSON.\n   * @function toJSON\n   * @memberof SdkClientMetricFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkClientMetricFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkClientMetricFrame;\n}();\n\n$root.SdkDataMessageFrame = function () {\n  /**\n   * Properties of a SdkDataMessageFrame.\n   * @exports ISdkDataMessageFrame\n   * @interface ISdkDataMessageFrame\n   * @property {Array.<ISdkDataMessagePayload>|null} [messages] SdkDataMessageFrame messages\n   */\n\n  /**\n   * Constructs a new SdkDataMessageFrame.\n   * @exports SdkDataMessageFrame\n   * @classdesc Represents a SdkDataMessageFrame.\n   * @implements ISdkDataMessageFrame\n   * @constructor\n   * @param {ISdkDataMessageFrame=} [properties] Properties to set\n   */\n  function SdkDataMessageFrame(properties) {\n    this.messages = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkDataMessageFrame messages.\n   * @member {Array.<ISdkDataMessagePayload>} messages\n   * @memberof SdkDataMessageFrame\n   * @instance\n   */\n\n\n  SdkDataMessageFrame.prototype.messages = $util.emptyArray;\n  /**\n   * Creates a new SdkDataMessageFrame instance using the specified properties.\n   * @function create\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {ISdkDataMessageFrame=} [properties] Properties to set\n   * @returns {SdkDataMessageFrame} SdkDataMessageFrame instance\n   */\n\n  SdkDataMessageFrame.create = function create(properties) {\n    return new SdkDataMessageFrame(properties);\n  };\n  /**\n   * Encodes the specified SdkDataMessageFrame message. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n   * @function encode\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkDataMessageFrame.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.messages != null && message.messages.length) for (var i = 0; i < message.messages.length; ++i) $root.SdkDataMessagePayload.encode(message.messages[i], writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkDataMessageFrame message, length delimited. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkDataMessageFrame.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkDataMessageFrame message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkDataMessageFrame.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkDataMessageFrame();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if (!(message.messages && message.messages.length)) message.messages = [];\n          message.messages.push($root.SdkDataMessagePayload.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkDataMessageFrame message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkDataMessageFrame.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkDataMessageFrame message.\n   * @function verify\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkDataMessageFrame.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n    if (message.messages != null && message.hasOwnProperty(\"messages\")) {\n      if (!Array.isArray(message.messages)) return \"messages: array expected\";\n\n      for (var i = 0; i < message.messages.length; ++i) {\n        var error = $root.SdkDataMessagePayload.verify(message.messages[i]);\n        if (error) return \"messages.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkDataMessageFrame message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n   */\n\n\n  SdkDataMessageFrame.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkDataMessageFrame) return object;\n    var message = new $root.SdkDataMessageFrame();\n\n    if (object.messages) {\n      if (!Array.isArray(object.messages)) throw TypeError(\".SdkDataMessageFrame.messages: array expected\");\n      message.messages = [];\n\n      for (var i = 0; i < object.messages.length; ++i) {\n        if (typeof object.messages[i] !== \"object\") throw TypeError(\".SdkDataMessageFrame.messages: object expected\");\n        message.messages[i] = $root.SdkDataMessagePayload.fromObject(object.messages[i]);\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkDataMessageFrame message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkDataMessageFrame\n   * @static\n   * @param {SdkDataMessageFrame} message SdkDataMessageFrame\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkDataMessageFrame.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.messages = [];\n\n    if (message.messages && message.messages.length) {\n      object.messages = [];\n\n      for (var j = 0; j < message.messages.length; ++j) object.messages[j] = $root.SdkDataMessagePayload.toObject(message.messages[j], options);\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkDataMessageFrame to JSON.\n   * @function toJSON\n   * @memberof SdkDataMessageFrame\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkDataMessageFrame.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkDataMessageFrame;\n}();\n\n$root.SdkDataMessagePayload = function () {\n  /**\n   * Properties of a SdkDataMessagePayload.\n   * @exports ISdkDataMessagePayload\n   * @interface ISdkDataMessagePayload\n   * @property {string|null} [topic] SdkDataMessagePayload topic\n   * @property {Uint8Array|null} [data] SdkDataMessagePayload data\n   * @property {number|null} [lifetimeMs] SdkDataMessagePayload lifetimeMs\n   * @property {string|null} [senderAttendeeId] SdkDataMessagePayload senderAttendeeId\n   * @property {number|Long|null} [ingestTimeNs] SdkDataMessagePayload ingestTimeNs\n   * @property {string|null} [senderExternalUserId] SdkDataMessagePayload senderExternalUserId\n   */\n\n  /**\n   * Constructs a new SdkDataMessagePayload.\n   * @exports SdkDataMessagePayload\n   * @classdesc Represents a SdkDataMessagePayload.\n   * @implements ISdkDataMessagePayload\n   * @constructor\n   * @param {ISdkDataMessagePayload=} [properties] Properties to set\n   */\n  function SdkDataMessagePayload(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkDataMessagePayload topic.\n   * @member {string} topic\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n\n  SdkDataMessagePayload.prototype.topic = \"\";\n  /**\n   * SdkDataMessagePayload data.\n   * @member {Uint8Array} data\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.data = $util.newBuffer([]);\n  /**\n   * SdkDataMessagePayload lifetimeMs.\n   * @member {number} lifetimeMs\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.lifetimeMs = 0;\n  /**\n   * SdkDataMessagePayload senderAttendeeId.\n   * @member {string} senderAttendeeId\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.senderAttendeeId = \"\";\n  /**\n   * SdkDataMessagePayload ingestTimeNs.\n   * @member {number|Long} ingestTimeNs\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.ingestTimeNs = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  /**\n   * SdkDataMessagePayload senderExternalUserId.\n   * @member {string} senderExternalUserId\n   * @memberof SdkDataMessagePayload\n   * @instance\n   */\n\n  SdkDataMessagePayload.prototype.senderExternalUserId = \"\";\n  /**\n   * Creates a new SdkDataMessagePayload instance using the specified properties.\n   * @function create\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {ISdkDataMessagePayload=} [properties] Properties to set\n   * @returns {SdkDataMessagePayload} SdkDataMessagePayload instance\n   */\n\n  SdkDataMessagePayload.create = function create(properties) {\n    return new SdkDataMessagePayload(properties);\n  };\n  /**\n   * Encodes the specified SdkDataMessagePayload message. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n   * @function encode\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkDataMessagePayload.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.topic != null && message.hasOwnProperty(\"topic\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.topic);\n    if (message.data != null && message.hasOwnProperty(\"data\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).bytes(message.data);\n    if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.lifetimeMs);\n    if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.senderAttendeeId);\n    if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\")) writer.uint32(\n    /* id 5, wireType 0 =*/\n    40).int64(message.ingestTimeNs);\n    if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\")) writer.uint32(\n    /* id 6, wireType 2 =*/\n    50).string(message.senderExternalUserId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkDataMessagePayload message, length delimited. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkDataMessagePayload.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkDataMessagePayload message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkDataMessagePayload.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkDataMessagePayload();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.topic = reader.string();\n          break;\n\n        case 2:\n          message.data = reader.bytes();\n          break;\n\n        case 3:\n          message.lifetimeMs = reader.uint32();\n          break;\n\n        case 4:\n          message.senderAttendeeId = reader.string();\n          break;\n\n        case 5:\n          message.ingestTimeNs = reader.int64();\n          break;\n\n        case 6:\n          message.senderExternalUserId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkDataMessagePayload message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkDataMessagePayload.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkDataMessagePayload message.\n   * @function verify\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkDataMessagePayload.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.topic != null && message.hasOwnProperty(\"topic\")) if (!$util.isString(message.topic)) return \"topic: string expected\";\n    if (message.data != null && message.hasOwnProperty(\"data\")) if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data))) return \"data: buffer expected\";\n    if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\")) if (!$util.isInteger(message.lifetimeMs)) return \"lifetimeMs: integer expected\";\n    if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\")) if (!$util.isString(message.senderAttendeeId)) return \"senderAttendeeId: string expected\";\n    if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\")) if (!$util.isInteger(message.ingestTimeNs) && !(message.ingestTimeNs && $util.isInteger(message.ingestTimeNs.low) && $util.isInteger(message.ingestTimeNs.high))) return \"ingestTimeNs: integer|Long expected\";\n    if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\")) if (!$util.isString(message.senderExternalUserId)) return \"senderExternalUserId: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkDataMessagePayload message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n   */\n\n\n  SdkDataMessagePayload.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkDataMessagePayload) return object;\n    var message = new $root.SdkDataMessagePayload();\n    if (object.topic != null) message.topic = String(object.topic);\n    if (object.data != null) if (typeof object.data === \"string\") $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);else if (object.data.length) message.data = object.data;\n    if (object.lifetimeMs != null) message.lifetimeMs = object.lifetimeMs >>> 0;\n    if (object.senderAttendeeId != null) message.senderAttendeeId = String(object.senderAttendeeId);\n    if (object.ingestTimeNs != null) if ($util.Long) (message.ingestTimeNs = $util.Long.fromValue(object.ingestTimeNs)).unsigned = false;else if (typeof object.ingestTimeNs === \"string\") message.ingestTimeNs = parseInt(object.ingestTimeNs, 10);else if (typeof object.ingestTimeNs === \"number\") message.ingestTimeNs = object.ingestTimeNs;else if (typeof object.ingestTimeNs === \"object\") message.ingestTimeNs = new $util.LongBits(object.ingestTimeNs.low >>> 0, object.ingestTimeNs.high >>> 0).toNumber();\n    if (object.senderExternalUserId != null) message.senderExternalUserId = String(object.senderExternalUserId);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkDataMessagePayload message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkDataMessagePayload\n   * @static\n   * @param {SdkDataMessagePayload} message SdkDataMessagePayload\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkDataMessagePayload.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      object.topic = \"\";\n      if (options.bytes === String) object.data = \"\";else {\n        object.data = [];\n        if (options.bytes !== Array) object.data = $util.newBuffer(object.data);\n      }\n      object.lifetimeMs = 0;\n      object.senderAttendeeId = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.ingestTimeNs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.ingestTimeNs = options.longs === String ? \"0\" : 0;\n\n      object.senderExternalUserId = \"\";\n    }\n\n    if (message.topic != null && message.hasOwnProperty(\"topic\")) object.topic = message.topic;\n    if (message.data != null && message.hasOwnProperty(\"data\")) object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n    if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\")) object.lifetimeMs = message.lifetimeMs;\n    if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\")) object.senderAttendeeId = message.senderAttendeeId;\n    if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\")) if (typeof message.ingestTimeNs === \"number\") object.ingestTimeNs = options.longs === String ? String(message.ingestTimeNs) : message.ingestTimeNs;else object.ingestTimeNs = options.longs === String ? $util.Long.prototype.toString.call(message.ingestTimeNs) : options.longs === Number ? new $util.LongBits(message.ingestTimeNs.low >>> 0, message.ingestTimeNs.high >>> 0).toNumber() : message.ingestTimeNs;\n    if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\")) object.senderExternalUserId = message.senderExternalUserId;\n    return object;\n  };\n  /**\n   * Converts this SdkDataMessagePayload to JSON.\n   * @function toJSON\n   * @memberof SdkDataMessagePayload\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkDataMessagePayload.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkDataMessagePayload;\n}();\n\n$root.SdkTurnCredentials = function () {\n  /**\n   * Properties of a SdkTurnCredentials.\n   * @exports ISdkTurnCredentials\n   * @interface ISdkTurnCredentials\n   * @property {string|null} [username] SdkTurnCredentials username\n   * @property {string|null} [password] SdkTurnCredentials password\n   * @property {number|null} [ttl] SdkTurnCredentials ttl\n   * @property {Array.<string>|null} [uris] SdkTurnCredentials uris\n   */\n\n  /**\n   * Constructs a new SdkTurnCredentials.\n   * @exports SdkTurnCredentials\n   * @classdesc Represents a SdkTurnCredentials.\n   * @implements ISdkTurnCredentials\n   * @constructor\n   * @param {ISdkTurnCredentials=} [properties] Properties to set\n   */\n  function SdkTurnCredentials(properties) {\n    this.uris = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n  /**\n   * SdkTurnCredentials username.\n   * @member {string} username\n   * @memberof SdkTurnCredentials\n   * @instance\n   */\n\n\n  SdkTurnCredentials.prototype.username = \"\";\n  /**\n   * SdkTurnCredentials password.\n   * @member {string} password\n   * @memberof SdkTurnCredentials\n   * @instance\n   */\n\n  SdkTurnCredentials.prototype.password = \"\";\n  /**\n   * SdkTurnCredentials ttl.\n   * @member {number} ttl\n   * @memberof SdkTurnCredentials\n   * @instance\n   */\n\n  SdkTurnCredentials.prototype.ttl = 0;\n  /**\n   * SdkTurnCredentials uris.\n   * @member {Array.<string>} uris\n   * @memberof SdkTurnCredentials\n   * @instance\n   */\n\n  SdkTurnCredentials.prototype.uris = $util.emptyArray;\n  /**\n   * Creates a new SdkTurnCredentials instance using the specified properties.\n   * @function create\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {ISdkTurnCredentials=} [properties] Properties to set\n   * @returns {SdkTurnCredentials} SdkTurnCredentials instance\n   */\n\n  SdkTurnCredentials.create = function create(properties) {\n    return new SdkTurnCredentials(properties);\n  };\n  /**\n   * Encodes the specified SdkTurnCredentials message. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n   * @function encode\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTurnCredentials.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.username != null && message.hasOwnProperty(\"username\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.username);\n    if (message.password != null && message.hasOwnProperty(\"password\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.password);\n    if (message.ttl != null && message.hasOwnProperty(\"ttl\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint32(message.ttl);\n    if (message.uris != null && message.uris.length) for (var i = 0; i < message.uris.length; ++i) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.uris[i]);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkTurnCredentials message, length delimited. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkTurnCredentials.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkTurnCredentials message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkTurnCredentials} SdkTurnCredentials\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTurnCredentials.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkTurnCredentials();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.username = reader.string();\n          break;\n\n        case 2:\n          message.password = reader.string();\n          break;\n\n        case 3:\n          message.ttl = reader.uint32();\n          break;\n\n        case 4:\n          if (!(message.uris && message.uris.length)) message.uris = [];\n          message.uris.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkTurnCredentials message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkTurnCredentials} SdkTurnCredentials\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkTurnCredentials.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkTurnCredentials message.\n   * @function verify\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkTurnCredentials.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.username != null && message.hasOwnProperty(\"username\")) if (!$util.isString(message.username)) return \"username: string expected\";\n    if (message.password != null && message.hasOwnProperty(\"password\")) if (!$util.isString(message.password)) return \"password: string expected\";\n    if (message.ttl != null && message.hasOwnProperty(\"ttl\")) if (!$util.isInteger(message.ttl)) return \"ttl: integer expected\";\n\n    if (message.uris != null && message.hasOwnProperty(\"uris\")) {\n      if (!Array.isArray(message.uris)) return \"uris: array expected\";\n\n      for (var i = 0; i < message.uris.length; ++i) if (!$util.isString(message.uris[i])) return \"uris: string[] expected\";\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SdkTurnCredentials message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkTurnCredentials} SdkTurnCredentials\n   */\n\n\n  SdkTurnCredentials.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkTurnCredentials) return object;\n    var message = new $root.SdkTurnCredentials();\n    if (object.username != null) message.username = String(object.username);\n    if (object.password != null) message.password = String(object.password);\n    if (object.ttl != null) message.ttl = object.ttl >>> 0;\n\n    if (object.uris) {\n      if (!Array.isArray(object.uris)) throw TypeError(\".SdkTurnCredentials.uris: array expected\");\n      message.uris = [];\n\n      for (var i = 0; i < object.uris.length; ++i) message.uris[i] = String(object.uris[i]);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkTurnCredentials message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkTurnCredentials\n   * @static\n   * @param {SdkTurnCredentials} message SdkTurnCredentials\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkTurnCredentials.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object.uris = [];\n\n    if (options.defaults) {\n      object.username = \"\";\n      object.password = \"\";\n      object.ttl = 0;\n    }\n\n    if (message.username != null && message.hasOwnProperty(\"username\")) object.username = message.username;\n    if (message.password != null && message.hasOwnProperty(\"password\")) object.password = message.password;\n    if (message.ttl != null && message.hasOwnProperty(\"ttl\")) object.ttl = message.ttl;\n\n    if (message.uris && message.uris.length) {\n      object.uris = [];\n\n      for (var j = 0; j < message.uris.length; ++j) object.uris[j] = message.uris[j];\n    }\n\n    return object;\n  };\n  /**\n   * Converts this SdkTurnCredentials to JSON.\n   * @function toJSON\n   * @memberof SdkTurnCredentials\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkTurnCredentials.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkTurnCredentials;\n}();\n\nmodule.exports = $root;","map":{"version":3,"sources":["/Users/torarvill/Documents/Pip/relative_gui/relative_ui/node_modules/amazon-chime-sdk-js/build/signalingprotocol/SignalingProtocol.js"],"names":["$protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","SdkSignalFrame","properties","keys","Object","i","length","prototype","timestampMs","Long","fromBits","type","error","join","joinack","sub","suback","index","pause","leave","leaveAck","bitrates","audioControl","audioMetadata","audioStreamIdInfo","pingPong","audioStatus","clientMetric","dataMessage","create","encode","message","writer","uint32","uint64","int32","hasOwnProperty","SdkErrorFrame","fork","ldelim","SdkJoinFrame","SdkJoinAckFrame","SdkSubscribeFrame","SdkSubscribeAckFrame","SdkIndexFrame","SdkPauseResumeFrame","SdkLeaveFrame","SdkLeaveAckFrame","SdkBitrateFrame","SdkAudioControlFrame","SdkAudioMetadataFrame","SdkAudioStreamIdInfoFrame","SdkPingPongFrame","SdkAudioStatusFrame","SdkClientMetricFrame","SdkDataMessageFrame","encodeDelimited","decode","reader","end","undefined","len","pos","tag","skipType","ProtocolError","instance","decodeDelimited","verify","isInteger","low","high","fromObject","object","fromValue","unsigned","parseInt","LongBits","toNumber","TypeError","toObject","options","defaults","long","longs","String","toString","Number","enums","call","Type","toJSON","constructor","toJSONOptions","valuesById","values","status","description","string","isString","SdkJoinFlags","SdkClientDetails","appVersionName","appVersionCode","deviceModel","deviceMake","platformName","platformVersion","clientSource","chimeSdkVersion","protocolVersion","maxNumOfVideos","flags","clientDetails","audioSessionId","turnCredentials","SdkTurnCredentials","SdkStreamServiceType","SdkStreamMediaType","sendStreams","receiveStreamIds","duplex","emptyArray","sdpOffer","audioHost","audioCheckin","audioMuted","SdkStreamDescriptor","bool","push","end2","Array","isArray","Boolean","arrays","j","allocations","tracks","sdpAnswer","SdkStreamAllocation","SdkTrackMapping","sources","pausedAtSourceIds","atCapacity","numParticipants","streamIds","SdkBitrate","streamId","framerate","maxBitrateKbps","trackLabel","groupId","avgBitrateBps","attendeeId","mediaType","externalUserId","ssrc","sourceStreamId","muted","attendeeStates","SdkAudioAttendeeState","audioStreamId","volume","signalStrength","streams","SdkAudioStreamIdInfo","dropped","SdkPingPongType","pingId","SdkMetric","value","double","json","isFinite","SdkStreamMetricFrame","metrics","globalMetrics","streamMetricFrames","messages","SdkDataMessagePayload","topic","data","newBuffer","lifetimeMs","senderAttendeeId","ingestTimeNs","senderExternalUserId","bytes","int64","base64","slice","uris","username","password","ttl","module","exports"],"mappings":"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","sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.SdkSignalFrame = (function() {\n\n    /**\n     * Properties of a SdkSignalFrame.\n     * @exports ISdkSignalFrame\n     * @interface ISdkSignalFrame\n     * @property {number|Long} timestampMs SdkSignalFrame timestampMs\n     * @property {SdkSignalFrame.Type} type SdkSignalFrame type\n     * @property {ISdkErrorFrame|null} [error] SdkSignalFrame error\n     * @property {ISdkJoinFrame|null} [join] SdkSignalFrame join\n     * @property {ISdkJoinAckFrame|null} [joinack] SdkSignalFrame joinack\n     * @property {ISdkSubscribeFrame|null} [sub] SdkSignalFrame sub\n     * @property {ISdkSubscribeAckFrame|null} [suback] SdkSignalFrame suback\n     * @property {ISdkIndexFrame|null} [index] SdkSignalFrame index\n     * @property {ISdkPauseResumeFrame|null} [pause] SdkSignalFrame pause\n     * @property {ISdkLeaveFrame|null} [leave] SdkSignalFrame leave\n     * @property {ISdkLeaveAckFrame|null} [leaveAck] SdkSignalFrame leaveAck\n     * @property {ISdkBitrateFrame|null} [bitrates] SdkSignalFrame bitrates\n     * @property {ISdkAudioControlFrame|null} [audioControl] SdkSignalFrame audioControl\n     * @property {ISdkAudioMetadataFrame|null} [audioMetadata] SdkSignalFrame audioMetadata\n     * @property {ISdkAudioStreamIdInfoFrame|null} [audioStreamIdInfo] SdkSignalFrame audioStreamIdInfo\n     * @property {ISdkPingPongFrame|null} [pingPong] SdkSignalFrame pingPong\n     * @property {ISdkAudioStatusFrame|null} [audioStatus] SdkSignalFrame audioStatus\n     * @property {ISdkClientMetricFrame|null} [clientMetric] SdkSignalFrame clientMetric\n     * @property {ISdkDataMessageFrame|null} [dataMessage] SdkSignalFrame dataMessage\n     */\n\n    /**\n     * Constructs a new SdkSignalFrame.\n     * @exports SdkSignalFrame\n     * @classdesc Represents a SdkSignalFrame.\n     * @implements ISdkSignalFrame\n     * @constructor\n     * @param {ISdkSignalFrame=} [properties] Properties to set\n     */\n    function SdkSignalFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSignalFrame timestampMs.\n     * @member {number|Long} timestampMs\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.timestampMs = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * SdkSignalFrame type.\n     * @member {SdkSignalFrame.Type} type\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.type = 1;\n\n    /**\n     * SdkSignalFrame error.\n     * @member {ISdkErrorFrame|null|undefined} error\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.error = null;\n\n    /**\n     * SdkSignalFrame join.\n     * @member {ISdkJoinFrame|null|undefined} join\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.join = null;\n\n    /**\n     * SdkSignalFrame joinack.\n     * @member {ISdkJoinAckFrame|null|undefined} joinack\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.joinack = null;\n\n    /**\n     * SdkSignalFrame sub.\n     * @member {ISdkSubscribeFrame|null|undefined} sub\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.sub = null;\n\n    /**\n     * SdkSignalFrame suback.\n     * @member {ISdkSubscribeAckFrame|null|undefined} suback\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.suback = null;\n\n    /**\n     * SdkSignalFrame index.\n     * @member {ISdkIndexFrame|null|undefined} index\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.index = null;\n\n    /**\n     * SdkSignalFrame pause.\n     * @member {ISdkPauseResumeFrame|null|undefined} pause\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.pause = null;\n\n    /**\n     * SdkSignalFrame leave.\n     * @member {ISdkLeaveFrame|null|undefined} leave\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.leave = null;\n\n    /**\n     * SdkSignalFrame leaveAck.\n     * @member {ISdkLeaveAckFrame|null|undefined} leaveAck\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.leaveAck = null;\n\n    /**\n     * SdkSignalFrame bitrates.\n     * @member {ISdkBitrateFrame|null|undefined} bitrates\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.bitrates = null;\n\n    /**\n     * SdkSignalFrame audioControl.\n     * @member {ISdkAudioControlFrame|null|undefined} audioControl\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioControl = null;\n\n    /**\n     * SdkSignalFrame audioMetadata.\n     * @member {ISdkAudioMetadataFrame|null|undefined} audioMetadata\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioMetadata = null;\n\n    /**\n     * SdkSignalFrame audioStreamIdInfo.\n     * @member {ISdkAudioStreamIdInfoFrame|null|undefined} audioStreamIdInfo\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioStreamIdInfo = null;\n\n    /**\n     * SdkSignalFrame pingPong.\n     * @member {ISdkPingPongFrame|null|undefined} pingPong\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.pingPong = null;\n\n    /**\n     * SdkSignalFrame audioStatus.\n     * @member {ISdkAudioStatusFrame|null|undefined} audioStatus\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioStatus = null;\n\n    /**\n     * SdkSignalFrame clientMetric.\n     * @member {ISdkClientMetricFrame|null|undefined} clientMetric\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.clientMetric = null;\n\n    /**\n     * SdkSignalFrame dataMessage.\n     * @member {ISdkDataMessageFrame|null|undefined} dataMessage\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.dataMessage = null;\n\n    /**\n     * Creates a new SdkSignalFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame=} [properties] Properties to set\n     * @returns {SdkSignalFrame} SdkSignalFrame instance\n     */\n    SdkSignalFrame.create = function create(properties) {\n        return new SdkSignalFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSignalFrame message. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSignalFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.timestampMs);\n        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            $root.SdkErrorFrame.encode(message.error, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.join != null && message.hasOwnProperty(\"join\"))\n            $root.SdkJoinFrame.encode(message.join, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\"))\n            $root.SdkJoinAckFrame.encode(message.joinack, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.sub != null && message.hasOwnProperty(\"sub\"))\n            $root.SdkSubscribeFrame.encode(message.sub, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.suback != null && message.hasOwnProperty(\"suback\"))\n            $root.SdkSubscribeAckFrame.encode(message.suback, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.index != null && message.hasOwnProperty(\"index\"))\n            $root.SdkIndexFrame.encode(message.index, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.pause != null && message.hasOwnProperty(\"pause\"))\n            $root.SdkPauseResumeFrame.encode(message.pause, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.leave != null && message.hasOwnProperty(\"leave\"))\n            $root.SdkLeaveFrame.encode(message.leave, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\"))\n            $root.SdkLeaveAckFrame.encode(message.leaveAck, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\"))\n            $root.SdkBitrateFrame.encode(message.bitrates, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\"))\n            $root.SdkAudioControlFrame.encode(message.audioControl, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\"))\n            $root.SdkAudioMetadataFrame.encode(message.audioMetadata, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\"))\n            $root.SdkAudioStreamIdInfoFrame.encode(message.audioStreamIdInfo, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\"))\n            $root.SdkPingPongFrame.encode(message.pingPong, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            $root.SdkAudioStatusFrame.encode(message.audioStatus, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\"))\n            $root.SdkClientMetricFrame.encode(message.clientMetric, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\"))\n            $root.SdkDataMessageFrame.encode(message.dataMessage, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSignalFrame message, length delimited. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSignalFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSignalFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSignalFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSignalFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.timestampMs = reader.uint64();\n                break;\n            case 2:\n                message.type = reader.int32();\n                break;\n            case 3:\n                message.error = $root.SdkErrorFrame.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.join = $root.SdkJoinFrame.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.joinack = $root.SdkJoinAckFrame.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.sub = $root.SdkSubscribeFrame.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.suback = $root.SdkSubscribeAckFrame.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.index = $root.SdkIndexFrame.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.pause = $root.SdkPauseResumeFrame.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.leave = $root.SdkLeaveFrame.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.leaveAck = $root.SdkLeaveAckFrame.decode(reader, reader.uint32());\n                break;\n            case 14:\n                message.bitrates = $root.SdkBitrateFrame.decode(reader, reader.uint32());\n                break;\n            case 17:\n                message.audioControl = $root.SdkAudioControlFrame.decode(reader, reader.uint32());\n                break;\n            case 18:\n                message.audioMetadata = $root.SdkAudioMetadataFrame.decode(reader, reader.uint32());\n                break;\n            case 19:\n                message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.decode(reader, reader.uint32());\n                break;\n            case 20:\n                message.pingPong = $root.SdkPingPongFrame.decode(reader, reader.uint32());\n                break;\n            case 21:\n                message.audioStatus = $root.SdkAudioStatusFrame.decode(reader, reader.uint32());\n                break;\n            case 22:\n                message.clientMetric = $root.SdkClientMetricFrame.decode(reader, reader.uint32());\n                break;\n            case 23:\n                message.dataMessage = $root.SdkDataMessageFrame.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"timestampMs\"))\n            throw $util.ProtocolError(\"missing required 'timestampMs'\", { instance: message });\n        if (!message.hasOwnProperty(\"type\"))\n            throw $util.ProtocolError(\"missing required 'type'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSignalFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSignalFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSignalFrame message.\n     * @function verify\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSignalFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isInteger(message.timestampMs) && !(message.timestampMs && $util.isInteger(message.timestampMs.low) && $util.isInteger(message.timestampMs.high)))\n            return \"timestampMs: integer|Long expected\";\n        switch (message.type) {\n        default:\n            return \"type: enum value expected\";\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 13:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 21:\n        case 22:\n            break;\n        }\n        if (message.error != null && message.hasOwnProperty(\"error\")) {\n            var error = $root.SdkErrorFrame.verify(message.error);\n            if (error)\n                return \"error.\" + error;\n        }\n        if (message.join != null && message.hasOwnProperty(\"join\")) {\n            var error = $root.SdkJoinFrame.verify(message.join);\n            if (error)\n                return \"join.\" + error;\n        }\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\")) {\n            var error = $root.SdkJoinAckFrame.verify(message.joinack);\n            if (error)\n                return \"joinack.\" + error;\n        }\n        if (message.sub != null && message.hasOwnProperty(\"sub\")) {\n            var error = $root.SdkSubscribeFrame.verify(message.sub);\n            if (error)\n                return \"sub.\" + error;\n        }\n        if (message.suback != null && message.hasOwnProperty(\"suback\")) {\n            var error = $root.SdkSubscribeAckFrame.verify(message.suback);\n            if (error)\n                return \"suback.\" + error;\n        }\n        if (message.index != null && message.hasOwnProperty(\"index\")) {\n            var error = $root.SdkIndexFrame.verify(message.index);\n            if (error)\n                return \"index.\" + error;\n        }\n        if (message.pause != null && message.hasOwnProperty(\"pause\")) {\n            var error = $root.SdkPauseResumeFrame.verify(message.pause);\n            if (error)\n                return \"pause.\" + error;\n        }\n        if (message.leave != null && message.hasOwnProperty(\"leave\")) {\n            var error = $root.SdkLeaveFrame.verify(message.leave);\n            if (error)\n                return \"leave.\" + error;\n        }\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) {\n            var error = $root.SdkLeaveAckFrame.verify(message.leaveAck);\n            if (error)\n                return \"leaveAck.\" + error;\n        }\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n            var error = $root.SdkBitrateFrame.verify(message.bitrates);\n            if (error)\n                return \"bitrates.\" + error;\n        }\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) {\n            var error = $root.SdkAudioControlFrame.verify(message.audioControl);\n            if (error)\n                return \"audioControl.\" + error;\n        }\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) {\n            var error = $root.SdkAudioMetadataFrame.verify(message.audioMetadata);\n            if (error)\n                return \"audioMetadata.\" + error;\n        }\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) {\n            var error = $root.SdkAudioStreamIdInfoFrame.verify(message.audioStreamIdInfo);\n            if (error)\n                return \"audioStreamIdInfo.\" + error;\n        }\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) {\n            var error = $root.SdkPingPongFrame.verify(message.pingPong);\n            if (error)\n                return \"pingPong.\" + error;\n        }\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) {\n            var error = $root.SdkAudioStatusFrame.verify(message.audioStatus);\n            if (error)\n                return \"audioStatus.\" + error;\n        }\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) {\n            var error = $root.SdkClientMetricFrame.verify(message.clientMetric);\n            if (error)\n                return \"clientMetric.\" + error;\n        }\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) {\n            var error = $root.SdkDataMessageFrame.verify(message.dataMessage);\n            if (error)\n                return \"dataMessage.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkSignalFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     */\n    SdkSignalFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSignalFrame)\n            return object;\n        var message = new $root.SdkSignalFrame();\n        if (object.timestampMs != null)\n            if ($util.Long)\n                (message.timestampMs = $util.Long.fromValue(object.timestampMs)).unsigned = true;\n            else if (typeof object.timestampMs === \"string\")\n                message.timestampMs = parseInt(object.timestampMs, 10);\n            else if (typeof object.timestampMs === \"number\")\n                message.timestampMs = object.timestampMs;\n            else if (typeof object.timestampMs === \"object\")\n                message.timestampMs = new $util.LongBits(object.timestampMs.low >>> 0, object.timestampMs.high >>> 0).toNumber(true);\n        switch (object.type) {\n        case \"JOIN\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"JOIN_ACK\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"SUBSCRIBE\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"SUBSCRIBE_ACK\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"INDEX\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"PAUSE\":\n        case 7:\n            message.type = 7;\n            break;\n        case \"RESUME\":\n        case 8:\n            message.type = 8;\n            break;\n        case \"LEAVE\":\n        case 9:\n            message.type = 9;\n            break;\n        case \"LEAVE_ACK\":\n        case 10:\n            message.type = 10;\n            break;\n        case \"BITRATES\":\n        case 13:\n            message.type = 13;\n            break;\n        case \"AUDIO_CONTROL\":\n        case 16:\n            message.type = 16;\n            break;\n        case \"AUDIO_METADATA\":\n        case 17:\n            message.type = 17;\n            break;\n        case \"AUDIO_STREAM_ID_INFO\":\n        case 18:\n            message.type = 18;\n            break;\n        case \"PING_PONG\":\n        case 19:\n            message.type = 19;\n            break;\n        case \"AUDIO_STATUS\":\n        case 20:\n            message.type = 20;\n            break;\n        case \"CLIENT_METRIC\":\n        case 21:\n            message.type = 21;\n            break;\n        case \"DATA_MESSAGE\":\n        case 22:\n            message.type = 22;\n            break;\n        }\n        if (object.error != null) {\n            if (typeof object.error !== \"object\")\n                throw TypeError(\".SdkSignalFrame.error: object expected\");\n            message.error = $root.SdkErrorFrame.fromObject(object.error);\n        }\n        if (object.join != null) {\n            if (typeof object.join !== \"object\")\n                throw TypeError(\".SdkSignalFrame.join: object expected\");\n            message.join = $root.SdkJoinFrame.fromObject(object.join);\n        }\n        if (object.joinack != null) {\n            if (typeof object.joinack !== \"object\")\n                throw TypeError(\".SdkSignalFrame.joinack: object expected\");\n            message.joinack = $root.SdkJoinAckFrame.fromObject(object.joinack);\n        }\n        if (object.sub != null) {\n            if (typeof object.sub !== \"object\")\n                throw TypeError(\".SdkSignalFrame.sub: object expected\");\n            message.sub = $root.SdkSubscribeFrame.fromObject(object.sub);\n        }\n        if (object.suback != null) {\n            if (typeof object.suback !== \"object\")\n                throw TypeError(\".SdkSignalFrame.suback: object expected\");\n            message.suback = $root.SdkSubscribeAckFrame.fromObject(object.suback);\n        }\n        if (object.index != null) {\n            if (typeof object.index !== \"object\")\n                throw TypeError(\".SdkSignalFrame.index: object expected\");\n            message.index = $root.SdkIndexFrame.fromObject(object.index);\n        }\n        if (object.pause != null) {\n            if (typeof object.pause !== \"object\")\n                throw TypeError(\".SdkSignalFrame.pause: object expected\");\n            message.pause = $root.SdkPauseResumeFrame.fromObject(object.pause);\n        }\n        if (object.leave != null) {\n            if (typeof object.leave !== \"object\")\n                throw TypeError(\".SdkSignalFrame.leave: object expected\");\n            message.leave = $root.SdkLeaveFrame.fromObject(object.leave);\n        }\n        if (object.leaveAck != null) {\n            if (typeof object.leaveAck !== \"object\")\n                throw TypeError(\".SdkSignalFrame.leaveAck: object expected\");\n            message.leaveAck = $root.SdkLeaveAckFrame.fromObject(object.leaveAck);\n        }\n        if (object.bitrates != null) {\n            if (typeof object.bitrates !== \"object\")\n                throw TypeError(\".SdkSignalFrame.bitrates: object expected\");\n            message.bitrates = $root.SdkBitrateFrame.fromObject(object.bitrates);\n        }\n        if (object.audioControl != null) {\n            if (typeof object.audioControl !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioControl: object expected\");\n            message.audioControl = $root.SdkAudioControlFrame.fromObject(object.audioControl);\n        }\n        if (object.audioMetadata != null) {\n            if (typeof object.audioMetadata !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioMetadata: object expected\");\n            message.audioMetadata = $root.SdkAudioMetadataFrame.fromObject(object.audioMetadata);\n        }\n        if (object.audioStreamIdInfo != null) {\n            if (typeof object.audioStreamIdInfo !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioStreamIdInfo: object expected\");\n            message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.fromObject(object.audioStreamIdInfo);\n        }\n        if (object.pingPong != null) {\n            if (typeof object.pingPong !== \"object\")\n                throw TypeError(\".SdkSignalFrame.pingPong: object expected\");\n            message.pingPong = $root.SdkPingPongFrame.fromObject(object.pingPong);\n        }\n        if (object.audioStatus != null) {\n            if (typeof object.audioStatus !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioStatus: object expected\");\n            message.audioStatus = $root.SdkAudioStatusFrame.fromObject(object.audioStatus);\n        }\n        if (object.clientMetric != null) {\n            if (typeof object.clientMetric !== \"object\")\n                throw TypeError(\".SdkSignalFrame.clientMetric: object expected\");\n            message.clientMetric = $root.SdkClientMetricFrame.fromObject(object.clientMetric);\n        }\n        if (object.dataMessage != null) {\n            if (typeof object.dataMessage !== \"object\")\n                throw TypeError(\".SdkSignalFrame.dataMessage: object expected\");\n            message.dataMessage = $root.SdkDataMessageFrame.fromObject(object.dataMessage);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSignalFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {SdkSignalFrame} message SdkSignalFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSignalFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestampMs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestampMs = options.longs === String ? \"0\" : 0;\n            object.type = options.enums === String ? \"JOIN\" : 1;\n            object.error = null;\n            object.join = null;\n            object.joinack = null;\n            object.sub = null;\n            object.suback = null;\n            object.index = null;\n            object.pause = null;\n            object.leave = null;\n            object.leaveAck = null;\n            object.bitrates = null;\n            object.audioControl = null;\n            object.audioMetadata = null;\n            object.audioStreamIdInfo = null;\n            object.pingPong = null;\n            object.audioStatus = null;\n            object.clientMetric = null;\n            object.dataMessage = null;\n        }\n        if (message.timestampMs != null && message.hasOwnProperty(\"timestampMs\"))\n            if (typeof message.timestampMs === \"number\")\n                object.timestampMs = options.longs === String ? String(message.timestampMs) : message.timestampMs;\n            else\n                object.timestampMs = options.longs === String ? $util.Long.prototype.toString.call(message.timestampMs) : options.longs === Number ? new $util.LongBits(message.timestampMs.low >>> 0, message.timestampMs.high >>> 0).toNumber(true) : message.timestampMs;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkSignalFrame.Type[message.type] : message.type;\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            object.error = $root.SdkErrorFrame.toObject(message.error, options);\n        if (message.join != null && message.hasOwnProperty(\"join\"))\n            object.join = $root.SdkJoinFrame.toObject(message.join, options);\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\"))\n            object.joinack = $root.SdkJoinAckFrame.toObject(message.joinack, options);\n        if (message.sub != null && message.hasOwnProperty(\"sub\"))\n            object.sub = $root.SdkSubscribeFrame.toObject(message.sub, options);\n        if (message.suback != null && message.hasOwnProperty(\"suback\"))\n            object.suback = $root.SdkSubscribeAckFrame.toObject(message.suback, options);\n        if (message.index != null && message.hasOwnProperty(\"index\"))\n            object.index = $root.SdkIndexFrame.toObject(message.index, options);\n        if (message.pause != null && message.hasOwnProperty(\"pause\"))\n            object.pause = $root.SdkPauseResumeFrame.toObject(message.pause, options);\n        if (message.leave != null && message.hasOwnProperty(\"leave\"))\n            object.leave = $root.SdkLeaveFrame.toObject(message.leave, options);\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\"))\n            object.leaveAck = $root.SdkLeaveAckFrame.toObject(message.leaveAck, options);\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\"))\n            object.bitrates = $root.SdkBitrateFrame.toObject(message.bitrates, options);\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\"))\n            object.audioControl = $root.SdkAudioControlFrame.toObject(message.audioControl, options);\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\"))\n            object.audioMetadata = $root.SdkAudioMetadataFrame.toObject(message.audioMetadata, options);\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\"))\n            object.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.toObject(message.audioStreamIdInfo, options);\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\"))\n            object.pingPong = $root.SdkPingPongFrame.toObject(message.pingPong, options);\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            object.audioStatus = $root.SdkAudioStatusFrame.toObject(message.audioStatus, options);\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\"))\n            object.clientMetric = $root.SdkClientMetricFrame.toObject(message.clientMetric, options);\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\"))\n            object.dataMessage = $root.SdkDataMessageFrame.toObject(message.dataMessage, options);\n        return object;\n    };\n\n    /**\n     * Converts this SdkSignalFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSignalFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSignalFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkSignalFrame.Type\n     * @enum {string}\n     * @property {number} JOIN=1 JOIN value\n     * @property {number} JOIN_ACK=2 JOIN_ACK value\n     * @property {number} SUBSCRIBE=3 SUBSCRIBE value\n     * @property {number} SUBSCRIBE_ACK=4 SUBSCRIBE_ACK value\n     * @property {number} INDEX=5 INDEX value\n     * @property {number} PAUSE=7 PAUSE value\n     * @property {number} RESUME=8 RESUME value\n     * @property {number} LEAVE=9 LEAVE value\n     * @property {number} LEAVE_ACK=10 LEAVE_ACK value\n     * @property {number} BITRATES=13 BITRATES value\n     * @property {number} AUDIO_CONTROL=16 AUDIO_CONTROL value\n     * @property {number} AUDIO_METADATA=17 AUDIO_METADATA value\n     * @property {number} AUDIO_STREAM_ID_INFO=18 AUDIO_STREAM_ID_INFO value\n     * @property {number} PING_PONG=19 PING_PONG value\n     * @property {number} AUDIO_STATUS=20 AUDIO_STATUS value\n     * @property {number} CLIENT_METRIC=21 CLIENT_METRIC value\n     * @property {number} DATA_MESSAGE=22 DATA_MESSAGE value\n     */\n    SdkSignalFrame.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"JOIN\"] = 1;\n        values[valuesById[2] = \"JOIN_ACK\"] = 2;\n        values[valuesById[3] = \"SUBSCRIBE\"] = 3;\n        values[valuesById[4] = \"SUBSCRIBE_ACK\"] = 4;\n        values[valuesById[5] = \"INDEX\"] = 5;\n        values[valuesById[7] = \"PAUSE\"] = 7;\n        values[valuesById[8] = \"RESUME\"] = 8;\n        values[valuesById[9] = \"LEAVE\"] = 9;\n        values[valuesById[10] = \"LEAVE_ACK\"] = 10;\n        values[valuesById[13] = \"BITRATES\"] = 13;\n        values[valuesById[16] = \"AUDIO_CONTROL\"] = 16;\n        values[valuesById[17] = \"AUDIO_METADATA\"] = 17;\n        values[valuesById[18] = \"AUDIO_STREAM_ID_INFO\"] = 18;\n        values[valuesById[19] = \"PING_PONG\"] = 19;\n        values[valuesById[20] = \"AUDIO_STATUS\"] = 20;\n        values[valuesById[21] = \"CLIENT_METRIC\"] = 21;\n        values[valuesById[22] = \"DATA_MESSAGE\"] = 22;\n        return values;\n    })();\n\n    return SdkSignalFrame;\n})();\n\n$root.SdkErrorFrame = (function() {\n\n    /**\n     * Properties of a SdkErrorFrame.\n     * @exports ISdkErrorFrame\n     * @interface ISdkErrorFrame\n     * @property {number|null} [status] SdkErrorFrame status\n     * @property {string|null} [description] SdkErrorFrame description\n     */\n\n    /**\n     * Constructs a new SdkErrorFrame.\n     * @exports SdkErrorFrame\n     * @classdesc Represents a SdkErrorFrame.\n     * @implements ISdkErrorFrame\n     * @constructor\n     * @param {ISdkErrorFrame=} [properties] Properties to set\n     */\n    function SdkErrorFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkErrorFrame status.\n     * @member {number} status\n     * @memberof SdkErrorFrame\n     * @instance\n     */\n    SdkErrorFrame.prototype.status = 0;\n\n    /**\n     * SdkErrorFrame description.\n     * @member {string} description\n     * @memberof SdkErrorFrame\n     * @instance\n     */\n    SdkErrorFrame.prototype.description = \"\";\n\n    /**\n     * Creates a new SdkErrorFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame=} [properties] Properties to set\n     * @returns {SdkErrorFrame} SdkErrorFrame instance\n     */\n    SdkErrorFrame.create = function create(properties) {\n        return new SdkErrorFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkErrorFrame message. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkErrorFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.status);\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkErrorFrame message, length delimited. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkErrorFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkErrorFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkErrorFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkErrorFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.status = reader.uint32();\n                break;\n            case 2:\n                message.description = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkErrorFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkErrorFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkErrorFrame message.\n     * @function verify\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkErrorFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            if (!$util.isInteger(message.status))\n                return \"status: integer expected\";\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            if (!$util.isString(message.description))\n                return \"description: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkErrorFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     */\n    SdkErrorFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkErrorFrame)\n            return object;\n        var message = new $root.SdkErrorFrame();\n        if (object.status != null)\n            message.status = object.status >>> 0;\n        if (object.description != null)\n            message.description = String(object.description);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkErrorFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {SdkErrorFrame} message SdkErrorFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkErrorFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.status = 0;\n            object.description = \"\";\n        }\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            object.status = message.status;\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            object.description = message.description;\n        return object;\n    };\n\n    /**\n     * Converts this SdkErrorFrame to JSON.\n     * @function toJSON\n     * @memberof SdkErrorFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkErrorFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkErrorFrame;\n})();\n\n/**\n * SdkJoinFlags enum.\n * @exports SdkJoinFlags\n * @enum {string}\n * @property {number} SEND_BITRATES=1 SEND_BITRATES value\n * @property {number} HAS_STREAM_UPDATE=2 HAS_STREAM_UPDATE value\n * @property {number} USE_SEND_SIDE_BWE=8 USE_SEND_SIDE_BWE value\n * @property {number} COMPLETE_VIDEO_SOURCES_LIST=16 COMPLETE_VIDEO_SOURCES_LIST value\n * @property {number} EXCLUDE_SELF_CONTENT_IN_INDEX=32 EXCLUDE_SELF_CONTENT_IN_INDEX value\n */\n$root.SdkJoinFlags = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"SEND_BITRATES\"] = 1;\n    values[valuesById[2] = \"HAS_STREAM_UPDATE\"] = 2;\n    values[valuesById[8] = \"USE_SEND_SIDE_BWE\"] = 8;\n    values[valuesById[16] = \"COMPLETE_VIDEO_SOURCES_LIST\"] = 16;\n    values[valuesById[32] = \"EXCLUDE_SELF_CONTENT_IN_INDEX\"] = 32;\n    return values;\n})();\n\n$root.SdkClientDetails = (function() {\n\n    /**\n     * Properties of a SdkClientDetails.\n     * @exports ISdkClientDetails\n     * @interface ISdkClientDetails\n     * @property {string|null} [appVersionName] SdkClientDetails appVersionName\n     * @property {string|null} [appVersionCode] SdkClientDetails appVersionCode\n     * @property {string|null} [deviceModel] SdkClientDetails deviceModel\n     * @property {string|null} [deviceMake] SdkClientDetails deviceMake\n     * @property {string|null} [platformName] SdkClientDetails platformName\n     * @property {string|null} [platformVersion] SdkClientDetails platformVersion\n     * @property {string|null} [clientSource] SdkClientDetails clientSource\n     * @property {string|null} [chimeSdkVersion] SdkClientDetails chimeSdkVersion\n     */\n\n    /**\n     * Constructs a new SdkClientDetails.\n     * @exports SdkClientDetails\n     * @classdesc Represents a SdkClientDetails.\n     * @implements ISdkClientDetails\n     * @constructor\n     * @param {ISdkClientDetails=} [properties] Properties to set\n     */\n    function SdkClientDetails(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkClientDetails appVersionName.\n     * @member {string} appVersionName\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.appVersionName = \"\";\n\n    /**\n     * SdkClientDetails appVersionCode.\n     * @member {string} appVersionCode\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.appVersionCode = \"\";\n\n    /**\n     * SdkClientDetails deviceModel.\n     * @member {string} deviceModel\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.deviceModel = \"\";\n\n    /**\n     * SdkClientDetails deviceMake.\n     * @member {string} deviceMake\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.deviceMake = \"\";\n\n    /**\n     * SdkClientDetails platformName.\n     * @member {string} platformName\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.platformName = \"\";\n\n    /**\n     * SdkClientDetails platformVersion.\n     * @member {string} platformVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.platformVersion = \"\";\n\n    /**\n     * SdkClientDetails clientSource.\n     * @member {string} clientSource\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.clientSource = \"\";\n\n    /**\n     * SdkClientDetails chimeSdkVersion.\n     * @member {string} chimeSdkVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.chimeSdkVersion = \"\";\n\n    /**\n     * Creates a new SdkClientDetails instance using the specified properties.\n     * @function create\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails=} [properties] Properties to set\n     * @returns {SdkClientDetails} SdkClientDetails instance\n     */\n    SdkClientDetails.create = function create(properties) {\n        return new SdkClientDetails(properties);\n    };\n\n    /**\n     * Encodes the specified SdkClientDetails message. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n     * @function encode\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientDetails.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.appVersionName != null && message.hasOwnProperty(\"appVersionName\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.appVersionName);\n        if (message.appVersionCode != null && message.hasOwnProperty(\"appVersionCode\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.appVersionCode);\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.deviceModel);\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.deviceMake);\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.platformName);\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.platformVersion);\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            writer.uint32(/* id 7, wireType 2 =*/58).string(message.clientSource);\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.chimeSdkVersion);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkClientDetails message, length delimited. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientDetails.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkClientDetails message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkClientDetails\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkClientDetails} SdkClientDetails\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientDetails.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkClientDetails();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.appVersionName = reader.string();\n                break;\n            case 2:\n                message.appVersionCode = reader.string();\n                break;\n            case 3:\n                message.deviceModel = reader.string();\n                break;\n            case 4:\n                message.deviceMake = reader.string();\n                break;\n            case 5:\n                message.platformName = reader.string();\n                break;\n            case 6:\n                message.platformVersion = reader.string();\n                break;\n            case 7:\n                message.clientSource = reader.string();\n                break;\n            case 8:\n                message.chimeSdkVersion = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkClientDetails message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkClientDetails\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkClientDetails} SdkClientDetails\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientDetails.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkClientDetails message.\n     * @function verify\n     * @memberof SdkClientDetails\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkClientDetails.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.appVersionName != null && message.hasOwnProperty(\"appVersionName\"))\n            if (!$util.isString(message.appVersionName))\n                return \"appVersionName: string expected\";\n        if (message.appVersionCode != null && message.hasOwnProperty(\"appVersionCode\"))\n            if (!$util.isString(message.appVersionCode))\n                return \"appVersionCode: string expected\";\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            if (!$util.isString(message.deviceModel))\n                return \"deviceModel: string expected\";\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            if (!$util.isString(message.deviceMake))\n                return \"deviceMake: string expected\";\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            if (!$util.isString(message.platformName))\n                return \"platformName: string expected\";\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            if (!$util.isString(message.platformVersion))\n                return \"platformVersion: string expected\";\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            if (!$util.isString(message.clientSource))\n                return \"clientSource: string expected\";\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            if (!$util.isString(message.chimeSdkVersion))\n                return \"chimeSdkVersion: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkClientDetails message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkClientDetails\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkClientDetails} SdkClientDetails\n     */\n    SdkClientDetails.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkClientDetails)\n            return object;\n        var message = new $root.SdkClientDetails();\n        if (object.appVersionName != null)\n            message.appVersionName = String(object.appVersionName);\n        if (object.appVersionCode != null)\n            message.appVersionCode = String(object.appVersionCode);\n        if (object.deviceModel != null)\n            message.deviceModel = String(object.deviceModel);\n        if (object.deviceMake != null)\n            message.deviceMake = String(object.deviceMake);\n        if (object.platformName != null)\n            message.platformName = String(object.platformName);\n        if (object.platformVersion != null)\n            message.platformVersion = String(object.platformVersion);\n        if (object.clientSource != null)\n            message.clientSource = String(object.clientSource);\n        if (object.chimeSdkVersion != null)\n            message.chimeSdkVersion = String(object.chimeSdkVersion);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkClientDetails message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkClientDetails\n     * @static\n     * @param {SdkClientDetails} message SdkClientDetails\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkClientDetails.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.appVersionName = \"\";\n            object.appVersionCode = \"\";\n            object.deviceModel = \"\";\n            object.deviceMake = \"\";\n            object.platformName = \"\";\n            object.platformVersion = \"\";\n            object.clientSource = \"\";\n            object.chimeSdkVersion = \"\";\n        }\n        if (message.appVersionName != null && message.hasOwnProperty(\"appVersionName\"))\n            object.appVersionName = message.appVersionName;\n        if (message.appVersionCode != null && message.hasOwnProperty(\"appVersionCode\"))\n            object.appVersionCode = message.appVersionCode;\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            object.deviceModel = message.deviceModel;\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            object.deviceMake = message.deviceMake;\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            object.platformName = message.platformName;\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            object.platformVersion = message.platformVersion;\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            object.clientSource = message.clientSource;\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            object.chimeSdkVersion = message.chimeSdkVersion;\n        return object;\n    };\n\n    /**\n     * Converts this SdkClientDetails to JSON.\n     * @function toJSON\n     * @memberof SdkClientDetails\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkClientDetails.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkClientDetails;\n})();\n\n$root.SdkJoinFrame = (function() {\n\n    /**\n     * Properties of a SdkJoinFrame.\n     * @exports ISdkJoinFrame\n     * @interface ISdkJoinFrame\n     * @property {number|null} [protocolVersion] SdkJoinFrame protocolVersion\n     * @property {number|null} [maxNumOfVideos] SdkJoinFrame maxNumOfVideos\n     * @property {number|null} [flags] SdkJoinFrame flags\n     * @property {ISdkClientDetails|null} [clientDetails] SdkJoinFrame clientDetails\n     * @property {number|Long|null} [audioSessionId] SdkJoinFrame audioSessionId\n     */\n\n    /**\n     * Constructs a new SdkJoinFrame.\n     * @exports SdkJoinFrame\n     * @classdesc Represents a SdkJoinFrame.\n     * @implements ISdkJoinFrame\n     * @constructor\n     * @param {ISdkJoinFrame=} [properties] Properties to set\n     */\n    function SdkJoinFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkJoinFrame protocolVersion.\n     * @member {number} protocolVersion\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.protocolVersion = 2;\n\n    /**\n     * SdkJoinFrame maxNumOfVideos.\n     * @member {number} maxNumOfVideos\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.maxNumOfVideos = 8;\n\n    /**\n     * SdkJoinFrame flags.\n     * @member {number} flags\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.flags = 0;\n\n    /**\n     * SdkJoinFrame clientDetails.\n     * @member {ISdkClientDetails|null|undefined} clientDetails\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.clientDetails = null;\n\n    /**\n     * SdkJoinFrame audioSessionId.\n     * @member {number|Long} audioSessionId\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.audioSessionId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Creates a new SdkJoinFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame=} [properties] Properties to set\n     * @returns {SdkJoinFrame} SdkJoinFrame instance\n     */\n    SdkJoinFrame.create = function create(properties) {\n        return new SdkJoinFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkJoinFrame message. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.protocolVersion);\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxNumOfVideos);\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.flags);\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\"))\n            $root.SdkClientDetails.encode(message.clientDetails, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.audioSessionId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkJoinFrame message, length delimited. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkJoinFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkJoinFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.protocolVersion = reader.uint32();\n                break;\n            case 2:\n                message.maxNumOfVideos = reader.uint32();\n                break;\n            case 3:\n                message.flags = reader.uint32();\n                break;\n            case 4:\n                message.clientDetails = $root.SdkClientDetails.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.audioSessionId = reader.uint64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkJoinFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkJoinFrame message.\n     * @function verify\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkJoinFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            if (!$util.isInteger(message.protocolVersion))\n                return \"protocolVersion: integer expected\";\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            if (!$util.isInteger(message.maxNumOfVideos))\n                return \"maxNumOfVideos: integer expected\";\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            if (!$util.isInteger(message.flags))\n                return \"flags: integer expected\";\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) {\n            var error = $root.SdkClientDetails.verify(message.clientDetails);\n            if (error)\n                return \"clientDetails.\" + error;\n        }\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            if (!$util.isInteger(message.audioSessionId) && !(message.audioSessionId && $util.isInteger(message.audioSessionId.low) && $util.isInteger(message.audioSessionId.high)))\n                return \"audioSessionId: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkJoinFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     */\n    SdkJoinFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkJoinFrame)\n            return object;\n        var message = new $root.SdkJoinFrame();\n        if (object.protocolVersion != null)\n            message.protocolVersion = object.protocolVersion >>> 0;\n        if (object.maxNumOfVideos != null)\n            message.maxNumOfVideos = object.maxNumOfVideos >>> 0;\n        if (object.flags != null)\n            message.flags = object.flags >>> 0;\n        if (object.clientDetails != null) {\n            if (typeof object.clientDetails !== \"object\")\n                throw TypeError(\".SdkJoinFrame.clientDetails: object expected\");\n            message.clientDetails = $root.SdkClientDetails.fromObject(object.clientDetails);\n        }\n        if (object.audioSessionId != null)\n            if ($util.Long)\n                (message.audioSessionId = $util.Long.fromValue(object.audioSessionId)).unsigned = true;\n            else if (typeof object.audioSessionId === \"string\")\n                message.audioSessionId = parseInt(object.audioSessionId, 10);\n            else if (typeof object.audioSessionId === \"number\")\n                message.audioSessionId = object.audioSessionId;\n            else if (typeof object.audioSessionId === \"object\")\n                message.audioSessionId = new $util.LongBits(object.audioSessionId.low >>> 0, object.audioSessionId.high >>> 0).toNumber(true);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkJoinFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {SdkJoinFrame} message SdkJoinFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkJoinFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.protocolVersion = 2;\n            object.maxNumOfVideos = 8;\n            object.flags = 0;\n            object.clientDetails = null;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.audioSessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.audioSessionId = options.longs === String ? \"0\" : 0;\n        }\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            object.protocolVersion = message.protocolVersion;\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            object.maxNumOfVideos = message.maxNumOfVideos;\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            object.flags = message.flags;\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\"))\n            object.clientDetails = $root.SdkClientDetails.toObject(message.clientDetails, options);\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            if (typeof message.audioSessionId === \"number\")\n                object.audioSessionId = options.longs === String ? String(message.audioSessionId) : message.audioSessionId;\n            else\n                object.audioSessionId = options.longs === String ? $util.Long.prototype.toString.call(message.audioSessionId) : options.longs === Number ? new $util.LongBits(message.audioSessionId.low >>> 0, message.audioSessionId.high >>> 0).toNumber(true) : message.audioSessionId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkJoinFrame to JSON.\n     * @function toJSON\n     * @memberof SdkJoinFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkJoinFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkJoinFrame;\n})();\n\n$root.SdkJoinAckFrame = (function() {\n\n    /**\n     * Properties of a SdkJoinAckFrame.\n     * @exports ISdkJoinAckFrame\n     * @interface ISdkJoinAckFrame\n     * @property {ISdkTurnCredentials|null} [turnCredentials] SdkJoinAckFrame turnCredentials\n     */\n\n    /**\n     * Constructs a new SdkJoinAckFrame.\n     * @exports SdkJoinAckFrame\n     * @classdesc Represents a SdkJoinAckFrame.\n     * @implements ISdkJoinAckFrame\n     * @constructor\n     * @param {ISdkJoinAckFrame=} [properties] Properties to set\n     */\n    function SdkJoinAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkJoinAckFrame turnCredentials.\n     * @member {ISdkTurnCredentials|null|undefined} turnCredentials\n     * @memberof SdkJoinAckFrame\n     * @instance\n     */\n    SdkJoinAckFrame.prototype.turnCredentials = null;\n\n    /**\n     * Creates a new SdkJoinAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame=} [properties] Properties to set\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame instance\n     */\n    SdkJoinAckFrame.create = function create(properties) {\n        return new SdkJoinAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkJoinAckFrame message. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\"))\n            $root.SdkTurnCredentials.encode(message.turnCredentials, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkJoinAckFrame message, length delimited. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkJoinAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkJoinAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.turnCredentials = $root.SdkTurnCredentials.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkJoinAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkJoinAckFrame message.\n     * @function verify\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkJoinAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) {\n            var error = $root.SdkTurnCredentials.verify(message.turnCredentials);\n            if (error)\n                return \"turnCredentials.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkJoinAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     */\n    SdkJoinAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkJoinAckFrame)\n            return object;\n        var message = new $root.SdkJoinAckFrame();\n        if (object.turnCredentials != null) {\n            if (typeof object.turnCredentials !== \"object\")\n                throw TypeError(\".SdkJoinAckFrame.turnCredentials: object expected\");\n            message.turnCredentials = $root.SdkTurnCredentials.fromObject(object.turnCredentials);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkJoinAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {SdkJoinAckFrame} message SdkJoinAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkJoinAckFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.turnCredentials = null;\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\"))\n            object.turnCredentials = $root.SdkTurnCredentials.toObject(message.turnCredentials, options);\n        return object;\n    };\n\n    /**\n     * Converts this SdkJoinAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkJoinAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkJoinAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkJoinAckFrame;\n})();\n\n$root.SdkLeaveFrame = (function() {\n\n    /**\n     * Properties of a SdkLeaveFrame.\n     * @exports ISdkLeaveFrame\n     * @interface ISdkLeaveFrame\n     */\n\n    /**\n     * Constructs a new SdkLeaveFrame.\n     * @exports SdkLeaveFrame\n     * @classdesc Represents a SdkLeaveFrame.\n     * @implements ISdkLeaveFrame\n     * @constructor\n     * @param {ISdkLeaveFrame=} [properties] Properties to set\n     */\n    function SdkLeaveFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkLeaveFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame=} [properties] Properties to set\n     * @returns {SdkLeaveFrame} SdkLeaveFrame instance\n     */\n    SdkLeaveFrame.create = function create(properties) {\n        return new SdkLeaveFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkLeaveFrame message. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkLeaveFrame message, length delimited. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkLeaveFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkLeaveFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkLeaveFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkLeaveFrame message.\n     * @function verify\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkLeaveFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkLeaveFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     */\n    SdkLeaveFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkLeaveFrame)\n            return object;\n        return new $root.SdkLeaveFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkLeaveFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {SdkLeaveFrame} message SdkLeaveFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkLeaveFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkLeaveFrame to JSON.\n     * @function toJSON\n     * @memberof SdkLeaveFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkLeaveFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkLeaveFrame;\n})();\n\n$root.SdkLeaveAckFrame = (function() {\n\n    /**\n     * Properties of a SdkLeaveAckFrame.\n     * @exports ISdkLeaveAckFrame\n     * @interface ISdkLeaveAckFrame\n     */\n\n    /**\n     * Constructs a new SdkLeaveAckFrame.\n     * @exports SdkLeaveAckFrame\n     * @classdesc Represents a SdkLeaveAckFrame.\n     * @implements ISdkLeaveAckFrame\n     * @constructor\n     * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n     */\n    function SdkLeaveAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkLeaveAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame instance\n     */\n    SdkLeaveAckFrame.create = function create(properties) {\n        return new SdkLeaveAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkLeaveAckFrame message. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkLeaveAckFrame message, length delimited. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkLeaveAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkLeaveAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkLeaveAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkLeaveAckFrame message.\n     * @function verify\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkLeaveAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkLeaveAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     */\n    SdkLeaveAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkLeaveAckFrame)\n            return object;\n        return new $root.SdkLeaveAckFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkLeaveAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {SdkLeaveAckFrame} message SdkLeaveAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkLeaveAckFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkLeaveAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkLeaveAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkLeaveAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkLeaveAckFrame;\n})();\n\n/**\n * SdkStreamServiceType enum.\n * @exports SdkStreamServiceType\n * @enum {string}\n * @property {number} RX=1 RX value\n * @property {number} TX=2 TX value\n * @property {number} DUPLEX=3 DUPLEX value\n */\n$root.SdkStreamServiceType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"RX\"] = 1;\n    values[valuesById[2] = \"TX\"] = 2;\n    values[valuesById[3] = \"DUPLEX\"] = 3;\n    return values;\n})();\n\n/**\n * SdkStreamMediaType enum.\n * @exports SdkStreamMediaType\n * @enum {string}\n * @property {number} AUDIO=1 AUDIO value\n * @property {number} VIDEO=2 VIDEO value\n */\n$root.SdkStreamMediaType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"AUDIO\"] = 1;\n    values[valuesById[2] = \"VIDEO\"] = 2;\n    return values;\n})();\n\n$root.SdkSubscribeFrame = (function() {\n\n    /**\n     * Properties of a SdkSubscribeFrame.\n     * @exports ISdkSubscribeFrame\n     * @interface ISdkSubscribeFrame\n     * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeFrame duplex\n     * @property {Array.<ISdkStreamDescriptor>|null} [sendStreams] SdkSubscribeFrame sendStreams\n     * @property {Array.<number>|null} [receiveStreamIds] SdkSubscribeFrame receiveStreamIds\n     * @property {string|null} [sdpOffer] SdkSubscribeFrame sdpOffer\n     * @property {string|null} [audioHost] SdkSubscribeFrame audioHost\n     * @property {boolean|null} [audioCheckin] SdkSubscribeFrame audioCheckin\n     * @property {boolean|null} [audioMuted] SdkSubscribeFrame audioMuted\n     */\n\n    /**\n     * Constructs a new SdkSubscribeFrame.\n     * @exports SdkSubscribeFrame\n     * @classdesc Represents a SdkSubscribeFrame.\n     * @implements ISdkSubscribeFrame\n     * @constructor\n     * @param {ISdkSubscribeFrame=} [properties] Properties to set\n     */\n    function SdkSubscribeFrame(properties) {\n        this.sendStreams = [];\n        this.receiveStreamIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSubscribeFrame duplex.\n     * @member {SdkStreamServiceType} duplex\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.duplex = 1;\n\n    /**\n     * SdkSubscribeFrame sendStreams.\n     * @member {Array.<ISdkStreamDescriptor>} sendStreams\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.sendStreams = $util.emptyArray;\n\n    /**\n     * SdkSubscribeFrame receiveStreamIds.\n     * @member {Array.<number>} receiveStreamIds\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.receiveStreamIds = $util.emptyArray;\n\n    /**\n     * SdkSubscribeFrame sdpOffer.\n     * @member {string} sdpOffer\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.sdpOffer = \"\";\n\n    /**\n     * SdkSubscribeFrame audioHost.\n     * @member {string} audioHost\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioHost = \"\";\n\n    /**\n     * SdkSubscribeFrame audioCheckin.\n     * @member {boolean} audioCheckin\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioCheckin = false;\n\n    /**\n     * SdkSubscribeFrame audioMuted.\n     * @member {boolean} audioMuted\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioMuted = false;\n\n    /**\n     * Creates a new SdkSubscribeFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame=} [properties] Properties to set\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame instance\n     */\n    SdkSubscribeFrame.create = function create(properties) {\n        return new SdkSubscribeFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeFrame message. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.duplex);\n        if (message.sendStreams != null && message.sendStreams.length)\n            for (var i = 0; i < message.sendStreams.length; ++i)\n                $root.SdkStreamDescriptor.encode(message.sendStreams[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.receiveStreamIds != null && message.receiveStreamIds.length)\n            for (var i = 0; i < message.receiveStreamIds.length; ++i)\n                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.receiveStreamIds[i]);\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.sdpOffer);\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.audioHost);\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.audioCheckin);\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.audioMuted);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeFrame message, length delimited. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSubscribeFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSubscribeFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.duplex = reader.int32();\n                break;\n            case 2:\n                if (!(message.sendStreams && message.sendStreams.length))\n                    message.sendStreams = [];\n                message.sendStreams.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                if (!(message.receiveStreamIds && message.receiveStreamIds.length))\n                    message.receiveStreamIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.receiveStreamIds.push(reader.uint32());\n                } else\n                    message.receiveStreamIds.push(reader.uint32());\n                break;\n            case 4:\n                message.sdpOffer = reader.string();\n                break;\n            case 5:\n                message.audioHost = reader.string();\n                break;\n            case 6:\n                message.audioCheckin = reader.bool();\n                break;\n            case 7:\n                message.audioMuted = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSubscribeFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSubscribeFrame message.\n     * @function verify\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSubscribeFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            switch (message.duplex) {\n            default:\n                return \"duplex: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.sendStreams != null && message.hasOwnProperty(\"sendStreams\")) {\n            if (!Array.isArray(message.sendStreams))\n                return \"sendStreams: array expected\";\n            for (var i = 0; i < message.sendStreams.length; ++i) {\n                var error = $root.SdkStreamDescriptor.verify(message.sendStreams[i]);\n                if (error)\n                    return \"sendStreams.\" + error;\n            }\n        }\n        if (message.receiveStreamIds != null && message.hasOwnProperty(\"receiveStreamIds\")) {\n            if (!Array.isArray(message.receiveStreamIds))\n                return \"receiveStreamIds: array expected\";\n            for (var i = 0; i < message.receiveStreamIds.length; ++i)\n                if (!$util.isInteger(message.receiveStreamIds[i]))\n                    return \"receiveStreamIds: integer[] expected\";\n        }\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            if (!$util.isString(message.sdpOffer))\n                return \"sdpOffer: string expected\";\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            if (!$util.isString(message.audioHost))\n                return \"audioHost: string expected\";\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            if (typeof message.audioCheckin !== \"boolean\")\n                return \"audioCheckin: boolean expected\";\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            if (typeof message.audioMuted !== \"boolean\")\n                return \"audioMuted: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkSubscribeFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     */\n    SdkSubscribeFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSubscribeFrame)\n            return object;\n        var message = new $root.SdkSubscribeFrame();\n        switch (object.duplex) {\n        case \"RX\":\n        case 1:\n            message.duplex = 1;\n            break;\n        case \"TX\":\n        case 2:\n            message.duplex = 2;\n            break;\n        case \"DUPLEX\":\n        case 3:\n            message.duplex = 3;\n            break;\n        }\n        if (object.sendStreams) {\n            if (!Array.isArray(object.sendStreams))\n                throw TypeError(\".SdkSubscribeFrame.sendStreams: array expected\");\n            message.sendStreams = [];\n            for (var i = 0; i < object.sendStreams.length; ++i) {\n                if (typeof object.sendStreams[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeFrame.sendStreams: object expected\");\n                message.sendStreams[i] = $root.SdkStreamDescriptor.fromObject(object.sendStreams[i]);\n            }\n        }\n        if (object.receiveStreamIds) {\n            if (!Array.isArray(object.receiveStreamIds))\n                throw TypeError(\".SdkSubscribeFrame.receiveStreamIds: array expected\");\n            message.receiveStreamIds = [];\n            for (var i = 0; i < object.receiveStreamIds.length; ++i)\n                message.receiveStreamIds[i] = object.receiveStreamIds[i] >>> 0;\n        }\n        if (object.sdpOffer != null)\n            message.sdpOffer = String(object.sdpOffer);\n        if (object.audioHost != null)\n            message.audioHost = String(object.audioHost);\n        if (object.audioCheckin != null)\n            message.audioCheckin = Boolean(object.audioCheckin);\n        if (object.audioMuted != null)\n            message.audioMuted = Boolean(object.audioMuted);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSubscribeFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {SdkSubscribeFrame} message SdkSubscribeFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSubscribeFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.sendStreams = [];\n            object.receiveStreamIds = [];\n        }\n        if (options.defaults) {\n            object.duplex = options.enums === String ? \"RX\" : 1;\n            object.sdpOffer = \"\";\n            object.audioHost = \"\";\n            object.audioCheckin = false;\n            object.audioMuted = false;\n        }\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n        if (message.sendStreams && message.sendStreams.length) {\n            object.sendStreams = [];\n            for (var j = 0; j < message.sendStreams.length; ++j)\n                object.sendStreams[j] = $root.SdkStreamDescriptor.toObject(message.sendStreams[j], options);\n        }\n        if (message.receiveStreamIds && message.receiveStreamIds.length) {\n            object.receiveStreamIds = [];\n            for (var j = 0; j < message.receiveStreamIds.length; ++j)\n                object.receiveStreamIds[j] = message.receiveStreamIds[j];\n        }\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            object.sdpOffer = message.sdpOffer;\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            object.audioHost = message.audioHost;\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            object.audioCheckin = message.audioCheckin;\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            object.audioMuted = message.audioMuted;\n        return object;\n    };\n\n    /**\n     * Converts this SdkSubscribeFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSubscribeFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSubscribeFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkSubscribeFrame;\n})();\n\n$root.SdkSubscribeAckFrame = (function() {\n\n    /**\n     * Properties of a SdkSubscribeAckFrame.\n     * @exports ISdkSubscribeAckFrame\n     * @interface ISdkSubscribeAckFrame\n     * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeAckFrame duplex\n     * @property {Array.<ISdkStreamAllocation>|null} [allocations] SdkSubscribeAckFrame allocations\n     * @property {string|null} [sdpAnswer] SdkSubscribeAckFrame sdpAnswer\n     * @property {Array.<ISdkTrackMapping>|null} [tracks] SdkSubscribeAckFrame tracks\n     */\n\n    /**\n     * Constructs a new SdkSubscribeAckFrame.\n     * @exports SdkSubscribeAckFrame\n     * @classdesc Represents a SdkSubscribeAckFrame.\n     * @implements ISdkSubscribeAckFrame\n     * @constructor\n     * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n     */\n    function SdkSubscribeAckFrame(properties) {\n        this.allocations = [];\n        this.tracks = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSubscribeAckFrame duplex.\n     * @member {SdkStreamServiceType} duplex\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.duplex = 1;\n\n    /**\n     * SdkSubscribeAckFrame allocations.\n     * @member {Array.<ISdkStreamAllocation>} allocations\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.allocations = $util.emptyArray;\n\n    /**\n     * SdkSubscribeAckFrame sdpAnswer.\n     * @member {string} sdpAnswer\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.sdpAnswer = \"\";\n\n    /**\n     * SdkSubscribeAckFrame tracks.\n     * @member {Array.<ISdkTrackMapping>} tracks\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.tracks = $util.emptyArray;\n\n    /**\n     * Creates a new SdkSubscribeAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame instance\n     */\n    SdkSubscribeAckFrame.create = function create(properties) {\n        return new SdkSubscribeAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeAckFrame message. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.duplex);\n        if (message.allocations != null && message.allocations.length)\n            for (var i = 0; i < message.allocations.length; ++i)\n                $root.SdkStreamAllocation.encode(message.allocations[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.sdpAnswer);\n        if (message.tracks != null && message.tracks.length)\n            for (var i = 0; i < message.tracks.length; ++i)\n                $root.SdkTrackMapping.encode(message.tracks[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeAckFrame message, length delimited. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSubscribeAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.duplex = reader.int32();\n                break;\n            case 2:\n                if (!(message.allocations && message.allocations.length))\n                    message.allocations = [];\n                message.allocations.push($root.SdkStreamAllocation.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                message.sdpAnswer = reader.string();\n                break;\n            case 4:\n                if (!(message.tracks && message.tracks.length))\n                    message.tracks = [];\n                message.tracks.push($root.SdkTrackMapping.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSubscribeAckFrame message.\n     * @function verify\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSubscribeAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            switch (message.duplex) {\n            default:\n                return \"duplex: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.allocations != null && message.hasOwnProperty(\"allocations\")) {\n            if (!Array.isArray(message.allocations))\n                return \"allocations: array expected\";\n            for (var i = 0; i < message.allocations.length; ++i) {\n                var error = $root.SdkStreamAllocation.verify(message.allocations[i]);\n                if (error)\n                    return \"allocations.\" + error;\n            }\n        }\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            if (!$util.isString(message.sdpAnswer))\n                return \"sdpAnswer: string expected\";\n        if (message.tracks != null && message.hasOwnProperty(\"tracks\")) {\n            if (!Array.isArray(message.tracks))\n                return \"tracks: array expected\";\n            for (var i = 0; i < message.tracks.length; ++i) {\n                var error = $root.SdkTrackMapping.verify(message.tracks[i]);\n                if (error)\n                    return \"tracks.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkSubscribeAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     */\n    SdkSubscribeAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSubscribeAckFrame)\n            return object;\n        var message = new $root.SdkSubscribeAckFrame();\n        switch (object.duplex) {\n        case \"RX\":\n        case 1:\n            message.duplex = 1;\n            break;\n        case \"TX\":\n        case 2:\n            message.duplex = 2;\n            break;\n        case \"DUPLEX\":\n        case 3:\n            message.duplex = 3;\n            break;\n        }\n        if (object.allocations) {\n            if (!Array.isArray(object.allocations))\n                throw TypeError(\".SdkSubscribeAckFrame.allocations: array expected\");\n            message.allocations = [];\n            for (var i = 0; i < object.allocations.length; ++i) {\n                if (typeof object.allocations[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeAckFrame.allocations: object expected\");\n                message.allocations[i] = $root.SdkStreamAllocation.fromObject(object.allocations[i]);\n            }\n        }\n        if (object.sdpAnswer != null)\n            message.sdpAnswer = String(object.sdpAnswer);\n        if (object.tracks) {\n            if (!Array.isArray(object.tracks))\n                throw TypeError(\".SdkSubscribeAckFrame.tracks: array expected\");\n            message.tracks = [];\n            for (var i = 0; i < object.tracks.length; ++i) {\n                if (typeof object.tracks[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeAckFrame.tracks: object expected\");\n                message.tracks[i] = $root.SdkTrackMapping.fromObject(object.tracks[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSubscribeAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {SdkSubscribeAckFrame} message SdkSubscribeAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSubscribeAckFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.allocations = [];\n            object.tracks = [];\n        }\n        if (options.defaults) {\n            object.duplex = options.enums === String ? \"RX\" : 1;\n            object.sdpAnswer = \"\";\n        }\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n        if (message.allocations && message.allocations.length) {\n            object.allocations = [];\n            for (var j = 0; j < message.allocations.length; ++j)\n                object.allocations[j] = $root.SdkStreamAllocation.toObject(message.allocations[j], options);\n        }\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            object.sdpAnswer = message.sdpAnswer;\n        if (message.tracks && message.tracks.length) {\n            object.tracks = [];\n            for (var j = 0; j < message.tracks.length; ++j)\n                object.tracks[j] = $root.SdkTrackMapping.toObject(message.tracks[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkSubscribeAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSubscribeAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkSubscribeAckFrame;\n})();\n\n$root.SdkIndexFrame = (function() {\n\n    /**\n     * Properties of a SdkIndexFrame.\n     * @exports ISdkIndexFrame\n     * @interface ISdkIndexFrame\n     * @property {boolean|null} [atCapacity] SdkIndexFrame atCapacity\n     * @property {Array.<ISdkStreamDescriptor>|null} [sources] SdkIndexFrame sources\n     * @property {Array.<number>|null} [pausedAtSourceIds] SdkIndexFrame pausedAtSourceIds\n     * @property {number|null} [numParticipants] SdkIndexFrame numParticipants\n     */\n\n    /**\n     * Constructs a new SdkIndexFrame.\n     * @exports SdkIndexFrame\n     * @classdesc Represents a SdkIndexFrame.\n     * @implements ISdkIndexFrame\n     * @constructor\n     * @param {ISdkIndexFrame=} [properties] Properties to set\n     */\n    function SdkIndexFrame(properties) {\n        this.sources = [];\n        this.pausedAtSourceIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkIndexFrame atCapacity.\n     * @member {boolean} atCapacity\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.atCapacity = false;\n\n    /**\n     * SdkIndexFrame sources.\n     * @member {Array.<ISdkStreamDescriptor>} sources\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.sources = $util.emptyArray;\n\n    /**\n     * SdkIndexFrame pausedAtSourceIds.\n     * @member {Array.<number>} pausedAtSourceIds\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.pausedAtSourceIds = $util.emptyArray;\n\n    /**\n     * SdkIndexFrame numParticipants.\n     * @member {number} numParticipants\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.numParticipants = 0;\n\n    /**\n     * Creates a new SdkIndexFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame=} [properties] Properties to set\n     * @returns {SdkIndexFrame} SdkIndexFrame instance\n     */\n    SdkIndexFrame.create = function create(properties) {\n        return new SdkIndexFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkIndexFrame message. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkIndexFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.atCapacity);\n        if (message.sources != null && message.sources.length)\n            for (var i = 0; i < message.sources.length; ++i)\n                $root.SdkStreamDescriptor.encode(message.sources[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.pausedAtSourceIds != null && message.pausedAtSourceIds.length)\n            for (var i = 0; i < message.pausedAtSourceIds.length; ++i)\n                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.pausedAtSourceIds[i]);\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numParticipants);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkIndexFrame message, length delimited. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkIndexFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkIndexFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkIndexFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkIndexFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.atCapacity = reader.bool();\n                break;\n            case 2:\n                if (!(message.sources && message.sources.length))\n                    message.sources = [];\n                message.sources.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                if (!(message.pausedAtSourceIds && message.pausedAtSourceIds.length))\n                    message.pausedAtSourceIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.pausedAtSourceIds.push(reader.uint32());\n                } else\n                    message.pausedAtSourceIds.push(reader.uint32());\n                break;\n            case 4:\n                message.numParticipants = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkIndexFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkIndexFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkIndexFrame message.\n     * @function verify\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkIndexFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            if (typeof message.atCapacity !== \"boolean\")\n                return \"atCapacity: boolean expected\";\n        if (message.sources != null && message.hasOwnProperty(\"sources\")) {\n            if (!Array.isArray(message.sources))\n                return \"sources: array expected\";\n            for (var i = 0; i < message.sources.length; ++i) {\n                var error = $root.SdkStreamDescriptor.verify(message.sources[i]);\n                if (error)\n                    return \"sources.\" + error;\n            }\n        }\n        if (message.pausedAtSourceIds != null && message.hasOwnProperty(\"pausedAtSourceIds\")) {\n            if (!Array.isArray(message.pausedAtSourceIds))\n                return \"pausedAtSourceIds: array expected\";\n            for (var i = 0; i < message.pausedAtSourceIds.length; ++i)\n                if (!$util.isInteger(message.pausedAtSourceIds[i]))\n                    return \"pausedAtSourceIds: integer[] expected\";\n        }\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            if (!$util.isInteger(message.numParticipants))\n                return \"numParticipants: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkIndexFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     */\n    SdkIndexFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkIndexFrame)\n            return object;\n        var message = new $root.SdkIndexFrame();\n        if (object.atCapacity != null)\n            message.atCapacity = Boolean(object.atCapacity);\n        if (object.sources) {\n            if (!Array.isArray(object.sources))\n                throw TypeError(\".SdkIndexFrame.sources: array expected\");\n            message.sources = [];\n            for (var i = 0; i < object.sources.length; ++i) {\n                if (typeof object.sources[i] !== \"object\")\n                    throw TypeError(\".SdkIndexFrame.sources: object expected\");\n                message.sources[i] = $root.SdkStreamDescriptor.fromObject(object.sources[i]);\n            }\n        }\n        if (object.pausedAtSourceIds) {\n            if (!Array.isArray(object.pausedAtSourceIds))\n                throw TypeError(\".SdkIndexFrame.pausedAtSourceIds: array expected\");\n            message.pausedAtSourceIds = [];\n            for (var i = 0; i < object.pausedAtSourceIds.length; ++i)\n                message.pausedAtSourceIds[i] = object.pausedAtSourceIds[i] >>> 0;\n        }\n        if (object.numParticipants != null)\n            message.numParticipants = object.numParticipants >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkIndexFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {SdkIndexFrame} message SdkIndexFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkIndexFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.sources = [];\n            object.pausedAtSourceIds = [];\n        }\n        if (options.defaults) {\n            object.atCapacity = false;\n            object.numParticipants = 0;\n        }\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            object.atCapacity = message.atCapacity;\n        if (message.sources && message.sources.length) {\n            object.sources = [];\n            for (var j = 0; j < message.sources.length; ++j)\n                object.sources[j] = $root.SdkStreamDescriptor.toObject(message.sources[j], options);\n        }\n        if (message.pausedAtSourceIds && message.pausedAtSourceIds.length) {\n            object.pausedAtSourceIds = [];\n            for (var j = 0; j < message.pausedAtSourceIds.length; ++j)\n                object.pausedAtSourceIds[j] = message.pausedAtSourceIds[j];\n        }\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            object.numParticipants = message.numParticipants;\n        return object;\n    };\n\n    /**\n     * Converts this SdkIndexFrame to JSON.\n     * @function toJSON\n     * @memberof SdkIndexFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkIndexFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkIndexFrame;\n})();\n\n$root.SdkPauseResumeFrame = (function() {\n\n    /**\n     * Properties of a SdkPauseResumeFrame.\n     * @exports ISdkPauseResumeFrame\n     * @interface ISdkPauseResumeFrame\n     * @property {Array.<number>|null} [streamIds] SdkPauseResumeFrame streamIds\n     */\n\n    /**\n     * Constructs a new SdkPauseResumeFrame.\n     * @exports SdkPauseResumeFrame\n     * @classdesc Represents a SdkPauseResumeFrame.\n     * @implements ISdkPauseResumeFrame\n     * @constructor\n     * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n     */\n    function SdkPauseResumeFrame(properties) {\n        this.streamIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPauseResumeFrame streamIds.\n     * @member {Array.<number>} streamIds\n     * @memberof SdkPauseResumeFrame\n     * @instance\n     */\n    SdkPauseResumeFrame.prototype.streamIds = $util.emptyArray;\n\n    /**\n     * Creates a new SdkPauseResumeFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame instance\n     */\n    SdkPauseResumeFrame.create = function create(properties) {\n        return new SdkPauseResumeFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPauseResumeFrame message. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPauseResumeFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamIds != null && message.streamIds.length)\n            for (var i = 0; i < message.streamIds.length; ++i)\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamIds[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPauseResumeFrame message, length delimited. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPauseResumeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPauseResumeFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPauseResumeFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPauseResumeFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.streamIds && message.streamIds.length))\n                    message.streamIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.streamIds.push(reader.uint32());\n                } else\n                    message.streamIds.push(reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPauseResumeFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPauseResumeFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPauseResumeFrame message.\n     * @function verify\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPauseResumeFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamIds != null && message.hasOwnProperty(\"streamIds\")) {\n            if (!Array.isArray(message.streamIds))\n                return \"streamIds: array expected\";\n            for (var i = 0; i < message.streamIds.length; ++i)\n                if (!$util.isInteger(message.streamIds[i]))\n                    return \"streamIds: integer[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkPauseResumeFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     */\n    SdkPauseResumeFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPauseResumeFrame)\n            return object;\n        var message = new $root.SdkPauseResumeFrame();\n        if (object.streamIds) {\n            if (!Array.isArray(object.streamIds))\n                throw TypeError(\".SdkPauseResumeFrame.streamIds: array expected\");\n            message.streamIds = [];\n            for (var i = 0; i < object.streamIds.length; ++i)\n                message.streamIds[i] = object.streamIds[i] >>> 0;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPauseResumeFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {SdkPauseResumeFrame} message SdkPauseResumeFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPauseResumeFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.streamIds = [];\n        if (message.streamIds && message.streamIds.length) {\n            object.streamIds = [];\n            for (var j = 0; j < message.streamIds.length; ++j)\n                object.streamIds[j] = message.streamIds[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkPauseResumeFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPauseResumeFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPauseResumeFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPauseResumeFrame;\n})();\n\n$root.SdkBitrateFrame = (function() {\n\n    /**\n     * Properties of a SdkBitrateFrame.\n     * @exports ISdkBitrateFrame\n     * @interface ISdkBitrateFrame\n     * @property {Array.<ISdkBitrate>|null} [bitrates] SdkBitrateFrame bitrates\n     */\n\n    /**\n     * Constructs a new SdkBitrateFrame.\n     * @exports SdkBitrateFrame\n     * @classdesc Represents a SdkBitrateFrame.\n     * @implements ISdkBitrateFrame\n     * @constructor\n     * @param {ISdkBitrateFrame=} [properties] Properties to set\n     */\n    function SdkBitrateFrame(properties) {\n        this.bitrates = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkBitrateFrame bitrates.\n     * @member {Array.<ISdkBitrate>} bitrates\n     * @memberof SdkBitrateFrame\n     * @instance\n     */\n    SdkBitrateFrame.prototype.bitrates = $util.emptyArray;\n\n    /**\n     * Creates a new SdkBitrateFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame=} [properties] Properties to set\n     * @returns {SdkBitrateFrame} SdkBitrateFrame instance\n     */\n    SdkBitrateFrame.create = function create(properties) {\n        return new SdkBitrateFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkBitrateFrame message. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrateFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.bitrates != null && message.bitrates.length)\n            for (var i = 0; i < message.bitrates.length; ++i)\n                $root.SdkBitrate.encode(message.bitrates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkBitrateFrame message, length delimited. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrateFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkBitrateFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrateFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkBitrateFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.bitrates && message.bitrates.length))\n                    message.bitrates = [];\n                message.bitrates.push($root.SdkBitrate.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkBitrateFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrateFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkBitrateFrame message.\n     * @function verify\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkBitrateFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n            if (!Array.isArray(message.bitrates))\n                return \"bitrates: array expected\";\n            for (var i = 0; i < message.bitrates.length; ++i) {\n                var error = $root.SdkBitrate.verify(message.bitrates[i]);\n                if (error)\n                    return \"bitrates.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkBitrateFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     */\n    SdkBitrateFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkBitrateFrame)\n            return object;\n        var message = new $root.SdkBitrateFrame();\n        if (object.bitrates) {\n            if (!Array.isArray(object.bitrates))\n                throw TypeError(\".SdkBitrateFrame.bitrates: array expected\");\n            message.bitrates = [];\n            for (var i = 0; i < object.bitrates.length; ++i) {\n                if (typeof object.bitrates[i] !== \"object\")\n                    throw TypeError(\".SdkBitrateFrame.bitrates: object expected\");\n                message.bitrates[i] = $root.SdkBitrate.fromObject(object.bitrates[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkBitrateFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {SdkBitrateFrame} message SdkBitrateFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkBitrateFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.bitrates = [];\n        if (message.bitrates && message.bitrates.length) {\n            object.bitrates = [];\n            for (var j = 0; j < message.bitrates.length; ++j)\n                object.bitrates[j] = $root.SdkBitrate.toObject(message.bitrates[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkBitrateFrame to JSON.\n     * @function toJSON\n     * @memberof SdkBitrateFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkBitrateFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkBitrateFrame;\n})();\n\n$root.SdkStreamDescriptor = (function() {\n\n    /**\n     * Properties of a SdkStreamDescriptor.\n     * @exports ISdkStreamDescriptor\n     * @interface ISdkStreamDescriptor\n     * @property {number|null} [streamId] SdkStreamDescriptor streamId\n     * @property {number|null} [framerate] SdkStreamDescriptor framerate\n     * @property {number|null} [maxBitrateKbps] SdkStreamDescriptor maxBitrateKbps\n     * @property {string|null} [trackLabel] SdkStreamDescriptor trackLabel\n     * @property {number|null} [groupId] SdkStreamDescriptor groupId\n     * @property {number|null} [avgBitrateBps] SdkStreamDescriptor avgBitrateBps\n     * @property {string|null} [attendeeId] SdkStreamDescriptor attendeeId\n     * @property {SdkStreamMediaType|null} [mediaType] SdkStreamDescriptor mediaType\n     * @property {string|null} [externalUserId] SdkStreamDescriptor externalUserId\n     */\n\n    /**\n     * Constructs a new SdkStreamDescriptor.\n     * @exports SdkStreamDescriptor\n     * @classdesc Represents a SdkStreamDescriptor.\n     * @implements ISdkStreamDescriptor\n     * @constructor\n     * @param {ISdkStreamDescriptor=} [properties] Properties to set\n     */\n    function SdkStreamDescriptor(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamDescriptor streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.streamId = 0;\n\n    /**\n     * SdkStreamDescriptor framerate.\n     * @member {number} framerate\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.framerate = 0;\n\n    /**\n     * SdkStreamDescriptor maxBitrateKbps.\n     * @member {number} maxBitrateKbps\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.maxBitrateKbps = 0;\n\n    /**\n     * SdkStreamDescriptor trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.trackLabel = \"\";\n\n    /**\n     * SdkStreamDescriptor groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.groupId = 0;\n\n    /**\n     * SdkStreamDescriptor avgBitrateBps.\n     * @member {number} avgBitrateBps\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.avgBitrateBps = 0;\n\n    /**\n     * SdkStreamDescriptor attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.attendeeId = \"\";\n\n    /**\n     * SdkStreamDescriptor mediaType.\n     * @member {SdkStreamMediaType} mediaType\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.mediaType = 1;\n\n    /**\n     * SdkStreamDescriptor externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.externalUserId = \"\";\n\n    /**\n     * Creates a new SdkStreamDescriptor instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor=} [properties] Properties to set\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor instance\n     */\n    SdkStreamDescriptor.create = function create(properties) {\n        return new SdkStreamDescriptor(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamDescriptor message. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDescriptor.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamId);\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.framerate);\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.maxBitrateKbps);\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trackLabel);\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.groupId);\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.avgBitrateBps);\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.attendeeId);\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.mediaType);\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            writer.uint32(/* id 10, wireType 2 =*/82).string(message.externalUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamDescriptor message, length delimited. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDescriptor.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamDescriptor message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDescriptor.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamDescriptor();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.streamId = reader.uint32();\n                break;\n            case 2:\n                message.framerate = reader.uint32();\n                break;\n            case 3:\n                message.maxBitrateKbps = reader.uint32();\n                break;\n            case 4:\n                message.trackLabel = reader.string();\n                break;\n            case 6:\n                message.groupId = reader.uint32();\n                break;\n            case 7:\n                message.avgBitrateBps = reader.uint32();\n                break;\n            case 8:\n                message.attendeeId = reader.string();\n                break;\n            case 9:\n                message.mediaType = reader.int32();\n                break;\n            case 10:\n                message.externalUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamDescriptor message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDescriptor.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamDescriptor message.\n     * @function verify\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamDescriptor.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            if (!$util.isInteger(message.framerate))\n                return \"framerate: integer expected\";\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            if (!$util.isInteger(message.maxBitrateKbps))\n                return \"maxBitrateKbps: integer expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            if (!$util.isInteger(message.avgBitrateBps))\n                return \"avgBitrateBps: integer expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            switch (message.mediaType) {\n            default:\n                return \"mediaType: enum value expected\";\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamDescriptor message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     */\n    SdkStreamDescriptor.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamDescriptor)\n            return object;\n        var message = new $root.SdkStreamDescriptor();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.framerate != null)\n            message.framerate = object.framerate >>> 0;\n        if (object.maxBitrateKbps != null)\n            message.maxBitrateKbps = object.maxBitrateKbps >>> 0;\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        if (object.avgBitrateBps != null)\n            message.avgBitrateBps = object.avgBitrateBps >>> 0;\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        switch (object.mediaType) {\n        case \"AUDIO\":\n        case 1:\n            message.mediaType = 1;\n            break;\n        case \"VIDEO\":\n        case 2:\n            message.mediaType = 2;\n            break;\n        }\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamDescriptor message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {SdkStreamDescriptor} message SdkStreamDescriptor\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamDescriptor.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.streamId = 0;\n            object.framerate = 0;\n            object.maxBitrateKbps = 0;\n            object.trackLabel = \"\";\n            object.groupId = 0;\n            object.avgBitrateBps = 0;\n            object.attendeeId = \"\";\n            object.mediaType = options.enums === String ? \"AUDIO\" : 1;\n            object.externalUserId = \"\";\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            object.framerate = message.framerate;\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            object.maxBitrateKbps = message.maxBitrateKbps;\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            object.avgBitrateBps = message.avgBitrateBps;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            object.mediaType = options.enums === String ? $root.SdkStreamMediaType[message.mediaType] : message.mediaType;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamDescriptor to JSON.\n     * @function toJSON\n     * @memberof SdkStreamDescriptor\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamDescriptor.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamDescriptor;\n})();\n\n$root.SdkStreamAllocation = (function() {\n\n    /**\n     * Properties of a SdkStreamAllocation.\n     * @exports ISdkStreamAllocation\n     * @interface ISdkStreamAllocation\n     * @property {string|null} [trackLabel] SdkStreamAllocation trackLabel\n     * @property {number|null} [streamId] SdkStreamAllocation streamId\n     * @property {number|null} [groupId] SdkStreamAllocation groupId\n     */\n\n    /**\n     * Constructs a new SdkStreamAllocation.\n     * @exports SdkStreamAllocation\n     * @classdesc Represents a SdkStreamAllocation.\n     * @implements ISdkStreamAllocation\n     * @constructor\n     * @param {ISdkStreamAllocation=} [properties] Properties to set\n     */\n    function SdkStreamAllocation(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamAllocation trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.trackLabel = \"\";\n\n    /**\n     * SdkStreamAllocation streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.streamId = 0;\n\n    /**\n     * SdkStreamAllocation groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.groupId = 0;\n\n    /**\n     * Creates a new SdkStreamAllocation instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation=} [properties] Properties to set\n     * @returns {SdkStreamAllocation} SdkStreamAllocation instance\n     */\n    SdkStreamAllocation.create = function create(properties) {\n        return new SdkStreamAllocation(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamAllocation message. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamAllocation.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackLabel);\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.streamId);\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.groupId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamAllocation message, length delimited. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamAllocation.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamAllocation message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamAllocation.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamAllocation();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trackLabel = reader.string();\n                break;\n            case 2:\n                message.streamId = reader.uint32();\n                break;\n            case 3:\n                message.groupId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamAllocation message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamAllocation.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamAllocation message.\n     * @function verify\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamAllocation.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamAllocation message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     */\n    SdkStreamAllocation.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamAllocation)\n            return object;\n        var message = new $root.SdkStreamAllocation();\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamAllocation message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {SdkStreamAllocation} message SdkStreamAllocation\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamAllocation.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.trackLabel = \"\";\n            object.streamId = 0;\n            object.groupId = 0;\n        }\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamAllocation to JSON.\n     * @function toJSON\n     * @memberof SdkStreamAllocation\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamAllocation.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamAllocation;\n})();\n\n$root.SdkTrackMapping = (function() {\n\n    /**\n     * Properties of a SdkTrackMapping.\n     * @exports ISdkTrackMapping\n     * @interface ISdkTrackMapping\n     * @property {number|null} [streamId] SdkTrackMapping streamId\n     * @property {number|null} [ssrc] SdkTrackMapping ssrc\n     * @property {string|null} [trackLabel] SdkTrackMapping trackLabel\n     */\n\n    /**\n     * Constructs a new SdkTrackMapping.\n     * @exports SdkTrackMapping\n     * @classdesc Represents a SdkTrackMapping.\n     * @implements ISdkTrackMapping\n     * @constructor\n     * @param {ISdkTrackMapping=} [properties] Properties to set\n     */\n    function SdkTrackMapping(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTrackMapping streamId.\n     * @member {number} streamId\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.streamId = 0;\n\n    /**\n     * SdkTrackMapping ssrc.\n     * @member {number} ssrc\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.ssrc = 0;\n\n    /**\n     * SdkTrackMapping trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.trackLabel = \"\";\n\n    /**\n     * Creates a new SdkTrackMapping instance using the specified properties.\n     * @function create\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping=} [properties] Properties to set\n     * @returns {SdkTrackMapping} SdkTrackMapping instance\n     */\n    SdkTrackMapping.create = function create(properties) {\n        return new SdkTrackMapping(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTrackMapping message. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTrackMapping.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamId);\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ssrc);\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.trackLabel);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTrackMapping message, length delimited. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTrackMapping.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTrackMapping message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTrackMapping.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTrackMapping();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.streamId = reader.uint32();\n                break;\n            case 2:\n                message.ssrc = reader.uint32();\n                break;\n            case 3:\n                message.trackLabel = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTrackMapping message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTrackMapping.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTrackMapping message.\n     * @function verify\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTrackMapping.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            if (!$util.isInteger(message.ssrc))\n                return \"ssrc: integer expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTrackMapping message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     */\n    SdkTrackMapping.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTrackMapping)\n            return object;\n        var message = new $root.SdkTrackMapping();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.ssrc != null)\n            message.ssrc = object.ssrc >>> 0;\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTrackMapping message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {SdkTrackMapping} message SdkTrackMapping\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTrackMapping.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.streamId = 0;\n            object.ssrc = 0;\n            object.trackLabel = \"\";\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            object.ssrc = message.ssrc;\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTrackMapping to JSON.\n     * @function toJSON\n     * @memberof SdkTrackMapping\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTrackMapping.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTrackMapping;\n})();\n\n$root.SdkBitrate = (function() {\n\n    /**\n     * Properties of a SdkBitrate.\n     * @exports ISdkBitrate\n     * @interface ISdkBitrate\n     * @property {number|null} [sourceStreamId] SdkBitrate sourceStreamId\n     * @property {number|null} [avgBitrateBps] SdkBitrate avgBitrateBps\n     */\n\n    /**\n     * Constructs a new SdkBitrate.\n     * @exports SdkBitrate\n     * @classdesc Represents a SdkBitrate.\n     * @implements ISdkBitrate\n     * @constructor\n     * @param {ISdkBitrate=} [properties] Properties to set\n     */\n    function SdkBitrate(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkBitrate sourceStreamId.\n     * @member {number} sourceStreamId\n     * @memberof SdkBitrate\n     * @instance\n     */\n    SdkBitrate.prototype.sourceStreamId = 0;\n\n    /**\n     * SdkBitrate avgBitrateBps.\n     * @member {number} avgBitrateBps\n     * @memberof SdkBitrate\n     * @instance\n     */\n    SdkBitrate.prototype.avgBitrateBps = 0;\n\n    /**\n     * Creates a new SdkBitrate instance using the specified properties.\n     * @function create\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate=} [properties] Properties to set\n     * @returns {SdkBitrate} SdkBitrate instance\n     */\n    SdkBitrate.create = function create(properties) {\n        return new SdkBitrate(properties);\n    };\n\n    /**\n     * Encodes the specified SdkBitrate message. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n     * @function encode\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrate.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sourceStreamId);\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.avgBitrateBps);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkBitrate message, length delimited. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrate.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkBitrate message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkBitrate\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkBitrate} SdkBitrate\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrate.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkBitrate();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.sourceStreamId = reader.uint32();\n                break;\n            case 2:\n                message.avgBitrateBps = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkBitrate message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkBitrate\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkBitrate} SdkBitrate\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrate.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkBitrate message.\n     * @function verify\n     * @memberof SdkBitrate\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkBitrate.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            if (!$util.isInteger(message.sourceStreamId))\n                return \"sourceStreamId: integer expected\";\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            if (!$util.isInteger(message.avgBitrateBps))\n                return \"avgBitrateBps: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkBitrate message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkBitrate\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkBitrate} SdkBitrate\n     */\n    SdkBitrate.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkBitrate)\n            return object;\n        var message = new $root.SdkBitrate();\n        if (object.sourceStreamId != null)\n            message.sourceStreamId = object.sourceStreamId >>> 0;\n        if (object.avgBitrateBps != null)\n            message.avgBitrateBps = object.avgBitrateBps >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkBitrate message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkBitrate\n     * @static\n     * @param {SdkBitrate} message SdkBitrate\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkBitrate.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.sourceStreamId = 0;\n            object.avgBitrateBps = 0;\n        }\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            object.sourceStreamId = message.sourceStreamId;\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            object.avgBitrateBps = message.avgBitrateBps;\n        return object;\n    };\n\n    /**\n     * Converts this SdkBitrate to JSON.\n     * @function toJSON\n     * @memberof SdkBitrate\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkBitrate.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkBitrate;\n})();\n\n$root.SdkAudioControlFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioControlFrame.\n     * @exports ISdkAudioControlFrame\n     * @interface ISdkAudioControlFrame\n     * @property {boolean|null} [muted] SdkAudioControlFrame muted\n     */\n\n    /**\n     * Constructs a new SdkAudioControlFrame.\n     * @exports SdkAudioControlFrame\n     * @classdesc Represents a SdkAudioControlFrame.\n     * @implements ISdkAudioControlFrame\n     * @constructor\n     * @param {ISdkAudioControlFrame=} [properties] Properties to set\n     */\n    function SdkAudioControlFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioControlFrame muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioControlFrame\n     * @instance\n     */\n    SdkAudioControlFrame.prototype.muted = false;\n\n    /**\n     * Creates a new SdkAudioControlFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame=} [properties] Properties to set\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame instance\n     */\n    SdkAudioControlFrame.create = function create(properties) {\n        return new SdkAudioControlFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioControlFrame message. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioControlFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.muted);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioControlFrame message, length delimited. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioControlFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioControlFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioControlFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioControlFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.muted = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioControlFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioControlFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioControlFrame message.\n     * @function verify\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioControlFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioControlFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     */\n    SdkAudioControlFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioControlFrame)\n            return object;\n        var message = new $root.SdkAudioControlFrame();\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioControlFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {SdkAudioControlFrame} message SdkAudioControlFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioControlFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.muted = false;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioControlFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioControlFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioControlFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioControlFrame;\n})();\n\n$root.SdkAudioMetadataFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioMetadataFrame.\n     * @exports ISdkAudioMetadataFrame\n     * @interface ISdkAudioMetadataFrame\n     * @property {Array.<ISdkAudioAttendeeState>|null} [attendeeStates] SdkAudioMetadataFrame attendeeStates\n     */\n\n    /**\n     * Constructs a new SdkAudioMetadataFrame.\n     * @exports SdkAudioMetadataFrame\n     * @classdesc Represents a SdkAudioMetadataFrame.\n     * @implements ISdkAudioMetadataFrame\n     * @constructor\n     * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n     */\n    function SdkAudioMetadataFrame(properties) {\n        this.attendeeStates = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioMetadataFrame attendeeStates.\n     * @member {Array.<ISdkAudioAttendeeState>} attendeeStates\n     * @memberof SdkAudioMetadataFrame\n     * @instance\n     */\n    SdkAudioMetadataFrame.prototype.attendeeStates = $util.emptyArray;\n\n    /**\n     * Creates a new SdkAudioMetadataFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame instance\n     */\n    SdkAudioMetadataFrame.create = function create(properties) {\n        return new SdkAudioMetadataFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioMetadataFrame message. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioMetadataFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.attendeeStates != null && message.attendeeStates.length)\n            for (var i = 0; i < message.attendeeStates.length; ++i)\n                $root.SdkAudioAttendeeState.encode(message.attendeeStates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioMetadataFrame message, length delimited. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioMetadataFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioMetadataFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioMetadataFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.attendeeStates && message.attendeeStates.length))\n                    message.attendeeStates = [];\n                message.attendeeStates.push($root.SdkAudioAttendeeState.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioMetadataFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioMetadataFrame message.\n     * @function verify\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioMetadataFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.attendeeStates != null && message.hasOwnProperty(\"attendeeStates\")) {\n            if (!Array.isArray(message.attendeeStates))\n                return \"attendeeStates: array expected\";\n            for (var i = 0; i < message.attendeeStates.length; ++i) {\n                var error = $root.SdkAudioAttendeeState.verify(message.attendeeStates[i]);\n                if (error)\n                    return \"attendeeStates.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioMetadataFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     */\n    SdkAudioMetadataFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioMetadataFrame)\n            return object;\n        var message = new $root.SdkAudioMetadataFrame();\n        if (object.attendeeStates) {\n            if (!Array.isArray(object.attendeeStates))\n                throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: array expected\");\n            message.attendeeStates = [];\n            for (var i = 0; i < object.attendeeStates.length; ++i) {\n                if (typeof object.attendeeStates[i] !== \"object\")\n                    throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: object expected\");\n                message.attendeeStates[i] = $root.SdkAudioAttendeeState.fromObject(object.attendeeStates[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioMetadataFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {SdkAudioMetadataFrame} message SdkAudioMetadataFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioMetadataFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.attendeeStates = [];\n        if (message.attendeeStates && message.attendeeStates.length) {\n            object.attendeeStates = [];\n            for (var j = 0; j < message.attendeeStates.length; ++j)\n                object.attendeeStates[j] = $root.SdkAudioAttendeeState.toObject(message.attendeeStates[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioMetadataFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioMetadataFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioMetadataFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioMetadataFrame;\n})();\n\n$root.SdkAudioAttendeeState = (function() {\n\n    /**\n     * Properties of a SdkAudioAttendeeState.\n     * @exports ISdkAudioAttendeeState\n     * @interface ISdkAudioAttendeeState\n     * @property {number|null} [audioStreamId] SdkAudioAttendeeState audioStreamId\n     * @property {number|null} [volume] SdkAudioAttendeeState volume\n     * @property {boolean|null} [muted] SdkAudioAttendeeState muted\n     * @property {number|null} [signalStrength] SdkAudioAttendeeState signalStrength\n     */\n\n    /**\n     * Constructs a new SdkAudioAttendeeState.\n     * @exports SdkAudioAttendeeState\n     * @classdesc Represents a SdkAudioAttendeeState.\n     * @implements ISdkAudioAttendeeState\n     * @constructor\n     * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n     */\n    function SdkAudioAttendeeState(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioAttendeeState audioStreamId.\n     * @member {number} audioStreamId\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.audioStreamId = 0;\n\n    /**\n     * SdkAudioAttendeeState volume.\n     * @member {number} volume\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.volume = 0;\n\n    /**\n     * SdkAudioAttendeeState muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.muted = false;\n\n    /**\n     * SdkAudioAttendeeState signalStrength.\n     * @member {number} signalStrength\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.signalStrength = 0;\n\n    /**\n     * Creates a new SdkAudioAttendeeState instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState instance\n     */\n    SdkAudioAttendeeState.create = function create(properties) {\n        return new SdkAudioAttendeeState(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioAttendeeState message. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioAttendeeState.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStreamId);\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.volume);\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.muted);\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.signalStrength);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioAttendeeState message, length delimited. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioAttendeeState.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioAttendeeState message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioAttendeeState.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioAttendeeState();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStreamId = reader.uint32();\n                break;\n            case 2:\n                message.volume = reader.uint32();\n                break;\n            case 3:\n                message.muted = reader.bool();\n                break;\n            case 4:\n                message.signalStrength = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioAttendeeState message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioAttendeeState.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioAttendeeState message.\n     * @function verify\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioAttendeeState.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            if (!$util.isInteger(message.audioStreamId))\n                return \"audioStreamId: integer expected\";\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            if (!$util.isInteger(message.volume))\n                return \"volume: integer expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            if (!$util.isInteger(message.signalStrength))\n                return \"signalStrength: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioAttendeeState message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     */\n    SdkAudioAttendeeState.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioAttendeeState)\n            return object;\n        var message = new $root.SdkAudioAttendeeState();\n        if (object.audioStreamId != null)\n            message.audioStreamId = object.audioStreamId >>> 0;\n        if (object.volume != null)\n            message.volume = object.volume >>> 0;\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        if (object.signalStrength != null)\n            message.signalStrength = object.signalStrength >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioAttendeeState message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {SdkAudioAttendeeState} message SdkAudioAttendeeState\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioAttendeeState.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.audioStreamId = 0;\n            object.volume = 0;\n            object.muted = false;\n            object.signalStrength = 0;\n        }\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            object.audioStreamId = message.audioStreamId;\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            object.volume = message.volume;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            object.signalStrength = message.signalStrength;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioAttendeeState to JSON.\n     * @function toJSON\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioAttendeeState.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioAttendeeState;\n})();\n\n$root.SdkAudioStreamIdInfoFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioStreamIdInfoFrame.\n     * @exports ISdkAudioStreamIdInfoFrame\n     * @interface ISdkAudioStreamIdInfoFrame\n     * @property {Array.<ISdkAudioStreamIdInfo>|null} [streams] SdkAudioStreamIdInfoFrame streams\n     */\n\n    /**\n     * Constructs a new SdkAudioStreamIdInfoFrame.\n     * @exports SdkAudioStreamIdInfoFrame\n     * @classdesc Represents a SdkAudioStreamIdInfoFrame.\n     * @implements ISdkAudioStreamIdInfoFrame\n     * @constructor\n     * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n     */\n    function SdkAudioStreamIdInfoFrame(properties) {\n        this.streams = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStreamIdInfoFrame streams.\n     * @member {Array.<ISdkAudioStreamIdInfo>} streams\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @instance\n     */\n    SdkAudioStreamIdInfoFrame.prototype.streams = $util.emptyArray;\n\n    /**\n     * Creates a new SdkAudioStreamIdInfoFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame instance\n     */\n    SdkAudioStreamIdInfoFrame.create = function create(properties) {\n        return new SdkAudioStreamIdInfoFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfoFrame message. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfoFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streams != null && message.streams.length)\n            for (var i = 0; i < message.streams.length; ++i)\n                $root.SdkAudioStreamIdInfo.encode(message.streams[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfoFrame message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfoFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfoFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStreamIdInfoFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.streams && message.streams.length))\n                    message.streams = [];\n                message.streams.push($root.SdkAudioStreamIdInfo.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfoFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStreamIdInfoFrame message.\n     * @function verify\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStreamIdInfoFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streams != null && message.hasOwnProperty(\"streams\")) {\n            if (!Array.isArray(message.streams))\n                return \"streams: array expected\";\n            for (var i = 0; i < message.streams.length; ++i) {\n                var error = $root.SdkAudioStreamIdInfo.verify(message.streams[i]);\n                if (error)\n                    return \"streams.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStreamIdInfoFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     */\n    SdkAudioStreamIdInfoFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStreamIdInfoFrame)\n            return object;\n        var message = new $root.SdkAudioStreamIdInfoFrame();\n        if (object.streams) {\n            if (!Array.isArray(object.streams))\n                throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: array expected\");\n            message.streams = [];\n            for (var i = 0; i < object.streams.length; ++i) {\n                if (typeof object.streams[i] !== \"object\")\n                    throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: object expected\");\n                message.streams[i] = $root.SdkAudioStreamIdInfo.fromObject(object.streams[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStreamIdInfoFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {SdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStreamIdInfoFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.streams = [];\n        if (message.streams && message.streams.length) {\n            object.streams = [];\n            for (var j = 0; j < message.streams.length; ++j)\n                object.streams[j] = $root.SdkAudioStreamIdInfo.toObject(message.streams[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStreamIdInfoFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStreamIdInfoFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStreamIdInfoFrame;\n})();\n\n$root.SdkAudioStreamIdInfo = (function() {\n\n    /**\n     * Properties of a SdkAudioStreamIdInfo.\n     * @exports ISdkAudioStreamIdInfo\n     * @interface ISdkAudioStreamIdInfo\n     * @property {number|null} [audioStreamId] SdkAudioStreamIdInfo audioStreamId\n     * @property {string|null} [attendeeId] SdkAudioStreamIdInfo attendeeId\n     * @property {boolean|null} [muted] SdkAudioStreamIdInfo muted\n     * @property {string|null} [externalUserId] SdkAudioStreamIdInfo externalUserId\n     * @property {boolean|null} [dropped] SdkAudioStreamIdInfo dropped\n     */\n\n    /**\n     * Constructs a new SdkAudioStreamIdInfo.\n     * @exports SdkAudioStreamIdInfo\n     * @classdesc Represents a SdkAudioStreamIdInfo.\n     * @implements ISdkAudioStreamIdInfo\n     * @constructor\n     * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n     */\n    function SdkAudioStreamIdInfo(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStreamIdInfo audioStreamId.\n     * @member {number} audioStreamId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.audioStreamId = 0;\n\n    /**\n     * SdkAudioStreamIdInfo attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.attendeeId = \"\";\n\n    /**\n     * SdkAudioStreamIdInfo muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.muted = false;\n\n    /**\n     * SdkAudioStreamIdInfo externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.externalUserId = \"\";\n\n    /**\n     * SdkAudioStreamIdInfo dropped.\n     * @member {boolean} dropped\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.dropped = false;\n\n    /**\n     * Creates a new SdkAudioStreamIdInfo instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo instance\n     */\n    SdkAudioStreamIdInfo.create = function create(properties) {\n        return new SdkAudioStreamIdInfo(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfo message. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfo.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStreamId);\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.attendeeId);\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.muted);\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.externalUserId);\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.dropped);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfo message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfo.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfo.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStreamIdInfo();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStreamId = reader.uint32();\n                break;\n            case 2:\n                message.attendeeId = reader.string();\n                break;\n            case 3:\n                message.muted = reader.bool();\n                break;\n            case 4:\n                message.externalUserId = reader.string();\n                break;\n            case 5:\n                message.dropped = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfo.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStreamIdInfo message.\n     * @function verify\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStreamIdInfo.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            if (!$util.isInteger(message.audioStreamId))\n                return \"audioStreamId: integer expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            if (typeof message.dropped !== \"boolean\")\n                return \"dropped: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStreamIdInfo message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     */\n    SdkAudioStreamIdInfo.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStreamIdInfo)\n            return object;\n        var message = new $root.SdkAudioStreamIdInfo();\n        if (object.audioStreamId != null)\n            message.audioStreamId = object.audioStreamId >>> 0;\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        if (object.dropped != null)\n            message.dropped = Boolean(object.dropped);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStreamIdInfo message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {SdkAudioStreamIdInfo} message SdkAudioStreamIdInfo\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStreamIdInfo.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.audioStreamId = 0;\n            object.attendeeId = \"\";\n            object.muted = false;\n            object.externalUserId = \"\";\n            object.dropped = false;\n        }\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            object.audioStreamId = message.audioStreamId;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            object.dropped = message.dropped;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStreamIdInfo to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStreamIdInfo.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStreamIdInfo;\n})();\n\n/**\n * SdkPingPongType enum.\n * @exports SdkPingPongType\n * @enum {string}\n * @property {number} PING=1 PING value\n * @property {number} PONG=2 PONG value\n */\n$root.SdkPingPongType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"PING\"] = 1;\n    values[valuesById[2] = \"PONG\"] = 2;\n    return values;\n})();\n\n$root.SdkPingPongFrame = (function() {\n\n    /**\n     * Properties of a SdkPingPongFrame.\n     * @exports ISdkPingPongFrame\n     * @interface ISdkPingPongFrame\n     * @property {SdkPingPongType} type SdkPingPongFrame type\n     * @property {number} pingId SdkPingPongFrame pingId\n     */\n\n    /**\n     * Constructs a new SdkPingPongFrame.\n     * @exports SdkPingPongFrame\n     * @classdesc Represents a SdkPingPongFrame.\n     * @implements ISdkPingPongFrame\n     * @constructor\n     * @param {ISdkPingPongFrame=} [properties] Properties to set\n     */\n    function SdkPingPongFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPingPongFrame type.\n     * @member {SdkPingPongType} type\n     * @memberof SdkPingPongFrame\n     * @instance\n     */\n    SdkPingPongFrame.prototype.type = 1;\n\n    /**\n     * SdkPingPongFrame pingId.\n     * @member {number} pingId\n     * @memberof SdkPingPongFrame\n     * @instance\n     */\n    SdkPingPongFrame.prototype.pingId = 0;\n\n    /**\n     * Creates a new SdkPingPongFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame=} [properties] Properties to set\n     * @returns {SdkPingPongFrame} SdkPingPongFrame instance\n     */\n    SdkPingPongFrame.create = function create(properties) {\n        return new SdkPingPongFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPingPongFrame message. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPingPongFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.pingId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPingPongFrame message, length delimited. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPingPongFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPingPongFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPingPongFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPingPongFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.pingId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"type\"))\n            throw $util.ProtocolError(\"missing required 'type'\", { instance: message });\n        if (!message.hasOwnProperty(\"pingId\"))\n            throw $util.ProtocolError(\"missing required 'pingId'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPingPongFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPingPongFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPingPongFrame message.\n     * @function verify\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPingPongFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        switch (message.type) {\n        default:\n            return \"type: enum value expected\";\n        case 1:\n        case 2:\n            break;\n        }\n        if (!$util.isInteger(message.pingId))\n            return \"pingId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkPingPongFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     */\n    SdkPingPongFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPingPongFrame)\n            return object;\n        var message = new $root.SdkPingPongFrame();\n        switch (object.type) {\n        case \"PING\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"PONG\":\n        case 2:\n            message.type = 2;\n            break;\n        }\n        if (object.pingId != null)\n            message.pingId = object.pingId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPingPongFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {SdkPingPongFrame} message SdkPingPongFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPingPongFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"PING\" : 1;\n            object.pingId = 0;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkPingPongType[message.type] : message.type;\n        if (message.pingId != null && message.hasOwnProperty(\"pingId\"))\n            object.pingId = message.pingId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkPingPongFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPingPongFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPingPongFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPingPongFrame;\n})();\n\n$root.SdkAudioStatusFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioStatusFrame.\n     * @exports ISdkAudioStatusFrame\n     * @interface ISdkAudioStatusFrame\n     * @property {number|null} [audioStatus] SdkAudioStatusFrame audioStatus\n     */\n\n    /**\n     * Constructs a new SdkAudioStatusFrame.\n     * @exports SdkAudioStatusFrame\n     * @classdesc Represents a SdkAudioStatusFrame.\n     * @implements ISdkAudioStatusFrame\n     * @constructor\n     * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n     */\n    function SdkAudioStatusFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStatusFrame audioStatus.\n     * @member {number} audioStatus\n     * @memberof SdkAudioStatusFrame\n     * @instance\n     */\n    SdkAudioStatusFrame.prototype.audioStatus = 0;\n\n    /**\n     * Creates a new SdkAudioStatusFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame instance\n     */\n    SdkAudioStatusFrame.create = function create(properties) {\n        return new SdkAudioStatusFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStatusFrame message. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStatusFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStatus);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStatusFrame message, length delimited. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStatusFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStatusFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStatusFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStatusFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStatus = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStatusFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStatusFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStatusFrame message.\n     * @function verify\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStatusFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            if (!$util.isInteger(message.audioStatus))\n                return \"audioStatus: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStatusFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     */\n    SdkAudioStatusFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStatusFrame)\n            return object;\n        var message = new $root.SdkAudioStatusFrame();\n        if (object.audioStatus != null)\n            message.audioStatus = object.audioStatus >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStatusFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {SdkAudioStatusFrame} message SdkAudioStatusFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStatusFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.audioStatus = 0;\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            object.audioStatus = message.audioStatus;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStatusFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStatusFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStatusFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStatusFrame;\n})();\n\n$root.SdkMetric = (function() {\n\n    /**\n     * Properties of a SdkMetric.\n     * @exports ISdkMetric\n     * @interface ISdkMetric\n     * @property {SdkMetric.Type|null} [type] SdkMetric type\n     * @property {number|null} [value] SdkMetric value\n     */\n\n    /**\n     * Constructs a new SdkMetric.\n     * @exports SdkMetric\n     * @classdesc Represents a SdkMetric.\n     * @implements ISdkMetric\n     * @constructor\n     * @param {ISdkMetric=} [properties] Properties to set\n     */\n    function SdkMetric(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkMetric type.\n     * @member {SdkMetric.Type} type\n     * @memberof SdkMetric\n     * @instance\n     */\n    SdkMetric.prototype.type = 1;\n\n    /**\n     * SdkMetric value.\n     * @member {number} value\n     * @memberof SdkMetric\n     * @instance\n     */\n    SdkMetric.prototype.value = 0;\n\n    /**\n     * Creates a new SdkMetric instance using the specified properties.\n     * @function create\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric=} [properties] Properties to set\n     * @returns {SdkMetric} SdkMetric instance\n     */\n    SdkMetric.create = function create(properties) {\n        return new SdkMetric(properties);\n    };\n\n    /**\n     * Encodes the specified SdkMetric message. Does not implicitly {@link SdkMetric.verify|verify} messages.\n     * @function encode\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric} message SdkMetric message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMetric.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            writer.uint32(/* id 2, wireType 1 =*/17).double(message.value);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkMetric message, length delimited. Does not implicitly {@link SdkMetric.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric} message SdkMetric message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMetric.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkMetric message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkMetric\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkMetric} SdkMetric\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMetric.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkMetric();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.value = reader.double();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkMetric message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkMetric\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkMetric} SdkMetric\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMetric.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkMetric message.\n     * @function verify\n     * @memberof SdkMetric\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkMetric.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20:\n            case 21:\n            case 22:\n            case 23:\n            case 24:\n            case 25:\n            case 26:\n            case 27:\n            case 28:\n            case 29:\n            case 30:\n            case 31:\n            case 32:\n            case 33:\n            case 34:\n            case 35:\n            case 36:\n            case 37:\n            case 38:\n            case 39:\n            case 40:\n            case 41:\n            case 42:\n            case 43:\n            case 44:\n            case 45:\n            case 46:\n            case 47:\n            case 48:\n            case 49:\n            case 66:\n            case 72:\n                break;\n            }\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            if (typeof message.value !== \"number\")\n                return \"value: number expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkMetric message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkMetric\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkMetric} SdkMetric\n     */\n    SdkMetric.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkMetric)\n            return object;\n        var message = new $root.SdkMetric();\n        switch (object.type) {\n        case \"VIDEO_ACTUAL_ENCODER_BITRATE\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"VIDEO_AVAILABLE_SEND_BANDWIDTH\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"VIDEO_RETRANSMIT_BITRATE\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"VIDEO_TARGET_ENCODER_BITRATE\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"VIDEO_BUCKET_DELAY_MS\":\n        case 6:\n            message.type = 6;\n            break;\n        case \"STUN_RTT_MS\":\n        case 7:\n            message.type = 7;\n            break;\n        case \"SOCKET_DISCARDED_PPS\":\n        case 8:\n            message.type = 8;\n            break;\n        case \"RTC_MIC_JITTER_MS\":\n        case 9:\n            message.type = 9;\n            break;\n        case \"RTC_MIC_PPS\":\n        case 10:\n            message.type = 10;\n            break;\n        case \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\":\n        case 11:\n            message.type = 11;\n            break;\n        case \"RTC_MIC_BITRATE\":\n        case 12:\n            message.type = 12;\n            break;\n        case \"RTC_MIC_RTT_MS\":\n        case 13:\n            message.type = 13;\n            break;\n        case \"RTC_SPK_PPS\":\n        case 14:\n            message.type = 14;\n            break;\n        case \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\":\n        case 15:\n            message.type = 15;\n            break;\n        case \"RTC_SPK_JITTER_MS\":\n        case 16:\n            message.type = 16;\n            break;\n        case \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\":\n        case 17:\n            message.type = 17;\n            break;\n        case \"RTC_SPK_BITRATE\":\n        case 18:\n            message.type = 18;\n            break;\n        case \"RTC_SPK_CURRENT_DELAY_MS\":\n        case 19:\n            message.type = 19;\n            break;\n        case \"RTC_SPK_JITTER_BUFFER_MS\":\n        case 20:\n            message.type = 20;\n            break;\n        case \"VIDEO_SENT_RTT_MS\":\n        case 21:\n            message.type = 21;\n            break;\n        case \"VIDEO_ENCODE_USAGE_PERCENT\":\n        case 22:\n            message.type = 22;\n            break;\n        case \"VIDEO_NACKS_RECEIVED\":\n        case 23:\n            message.type = 23;\n            break;\n        case \"VIDEO_PLIS_RECEIVED\":\n        case 24:\n            message.type = 24;\n            break;\n        case \"VIDEO_AVERAGE_ENCODE_MS\":\n        case 25:\n            message.type = 25;\n            break;\n        case \"VIDEO_INPUT_FPS\":\n        case 26:\n            message.type = 26;\n            break;\n        case \"VIDEO_ENCODE_FPS\":\n        case 27:\n            message.type = 27;\n            break;\n        case \"VIDEO_SENT_FPS\":\n        case 28:\n            message.type = 28;\n            break;\n        case \"VIDEO_FIRS_RECEIVED\":\n        case 29:\n            message.type = 29;\n            break;\n        case \"VIDEO_SENT_PPS\":\n        case 30:\n            message.type = 30;\n            break;\n        case \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\":\n        case 31:\n            message.type = 31;\n            break;\n        case \"VIDEO_SENT_BITRATE\":\n        case 32:\n            message.type = 32;\n            break;\n        case \"VIDEO_DROPPED_FPS\":\n        case 33:\n            message.type = 33;\n            break;\n        case \"VIDEO_TARGET_DELAY_MS\":\n        case 34:\n            message.type = 34;\n            break;\n        case \"VIDEO_DECODE_MS\":\n        case 35:\n            message.type = 35;\n            break;\n        case \"VIDEO_OUTPUT_FPS\":\n        case 36:\n            message.type = 36;\n            break;\n        case \"VIDEO_RECEIVED_PPS\":\n        case 37:\n            message.type = 37;\n            break;\n        case \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\":\n        case 38:\n            message.type = 38;\n            break;\n        case \"VIDEO_RENDER_DELAY_MS\":\n        case 39:\n            message.type = 39;\n            break;\n        case \"VIDEO_RECEIVED_FPS\":\n        case 40:\n            message.type = 40;\n            break;\n        case \"VIDEO_DECODE_FPS\":\n        case 41:\n            message.type = 41;\n            break;\n        case \"VIDEO_NACKS_SENT\":\n        case 42:\n            message.type = 42;\n            break;\n        case \"VIDEO_FIRS_SENT\":\n        case 43:\n            message.type = 43;\n            break;\n        case \"VIDEO_RECEIVED_BITRATE\":\n        case 44:\n            message.type = 44;\n            break;\n        case \"VIDEO_CURRENT_DELAY_MS\":\n        case 45:\n            message.type = 45;\n            break;\n        case \"VIDEO_JITTER_BUFFER_MS\":\n        case 46:\n            message.type = 46;\n            break;\n        case \"VIDEO_DISCARDED_PPS\":\n        case 47:\n            message.type = 47;\n            break;\n        case \"VIDEO_PLIS_SENT\":\n        case 48:\n            message.type = 48;\n            break;\n        case \"VIDEO_RECEIVED_JITTER_MS\":\n        case 49:\n            message.type = 49;\n            break;\n        case \"VIDEO_SENT_QP_SUM\":\n        case 66:\n            message.type = 66;\n            break;\n        case \"VIDEO_RECEIVED_QP_SUM\":\n        case 72:\n            message.type = 72;\n            break;\n        }\n        if (object.value != null)\n            message.value = Number(object.value);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkMetric message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkMetric\n     * @static\n     * @param {SdkMetric} message SdkMetric\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkMetric.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"VIDEO_ACTUAL_ENCODER_BITRATE\" : 1;\n            object.value = 0;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkMetric.Type[message.type] : message.type;\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n        return object;\n    };\n\n    /**\n     * Converts this SdkMetric to JSON.\n     * @function toJSON\n     * @memberof SdkMetric\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkMetric.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkMetric.Type\n     * @enum {string}\n     * @property {number} VIDEO_ACTUAL_ENCODER_BITRATE=1 VIDEO_ACTUAL_ENCODER_BITRATE value\n     * @property {number} VIDEO_AVAILABLE_SEND_BANDWIDTH=2 VIDEO_AVAILABLE_SEND_BANDWIDTH value\n     * @property {number} VIDEO_RETRANSMIT_BITRATE=3 VIDEO_RETRANSMIT_BITRATE value\n     * @property {number} VIDEO_AVAILABLE_RECEIVE_BANDWIDTH=4 VIDEO_AVAILABLE_RECEIVE_BANDWIDTH value\n     * @property {number} VIDEO_TARGET_ENCODER_BITRATE=5 VIDEO_TARGET_ENCODER_BITRATE value\n     * @property {number} VIDEO_BUCKET_DELAY_MS=6 VIDEO_BUCKET_DELAY_MS value\n     * @property {number} STUN_RTT_MS=7 STUN_RTT_MS value\n     * @property {number} SOCKET_DISCARDED_PPS=8 SOCKET_DISCARDED_PPS value\n     * @property {number} RTC_MIC_JITTER_MS=9 RTC_MIC_JITTER_MS value\n     * @property {number} RTC_MIC_PPS=10 RTC_MIC_PPS value\n     * @property {number} RTC_MIC_FRACTION_PACKET_LOST_PERCENT=11 RTC_MIC_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} RTC_MIC_BITRATE=12 RTC_MIC_BITRATE value\n     * @property {number} RTC_MIC_RTT_MS=13 RTC_MIC_RTT_MS value\n     * @property {number} RTC_SPK_PPS=14 RTC_SPK_PPS value\n     * @property {number} RTC_SPK_FRACTION_PACKET_LOST_PERCENT=15 RTC_SPK_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} RTC_SPK_JITTER_MS=16 RTC_SPK_JITTER_MS value\n     * @property {number} RTC_SPK_FRACTION_DECODER_LOSS_PERCENT=17 RTC_SPK_FRACTION_DECODER_LOSS_PERCENT value\n     * @property {number} RTC_SPK_BITRATE=18 RTC_SPK_BITRATE value\n     * @property {number} RTC_SPK_CURRENT_DELAY_MS=19 RTC_SPK_CURRENT_DELAY_MS value\n     * @property {number} RTC_SPK_JITTER_BUFFER_MS=20 RTC_SPK_JITTER_BUFFER_MS value\n     * @property {number} VIDEO_SENT_RTT_MS=21 VIDEO_SENT_RTT_MS value\n     * @property {number} VIDEO_ENCODE_USAGE_PERCENT=22 VIDEO_ENCODE_USAGE_PERCENT value\n     * @property {number} VIDEO_NACKS_RECEIVED=23 VIDEO_NACKS_RECEIVED value\n     * @property {number} VIDEO_PLIS_RECEIVED=24 VIDEO_PLIS_RECEIVED value\n     * @property {number} VIDEO_AVERAGE_ENCODE_MS=25 VIDEO_AVERAGE_ENCODE_MS value\n     * @property {number} VIDEO_INPUT_FPS=26 VIDEO_INPUT_FPS value\n     * @property {number} VIDEO_ENCODE_FPS=27 VIDEO_ENCODE_FPS value\n     * @property {number} VIDEO_SENT_FPS=28 VIDEO_SENT_FPS value\n     * @property {number} VIDEO_FIRS_RECEIVED=29 VIDEO_FIRS_RECEIVED value\n     * @property {number} VIDEO_SENT_PPS=30 VIDEO_SENT_PPS value\n     * @property {number} VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT=31 VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} VIDEO_SENT_BITRATE=32 VIDEO_SENT_BITRATE value\n     * @property {number} VIDEO_DROPPED_FPS=33 VIDEO_DROPPED_FPS value\n     * @property {number} VIDEO_TARGET_DELAY_MS=34 VIDEO_TARGET_DELAY_MS value\n     * @property {number} VIDEO_DECODE_MS=35 VIDEO_DECODE_MS value\n     * @property {number} VIDEO_OUTPUT_FPS=36 VIDEO_OUTPUT_FPS value\n     * @property {number} VIDEO_RECEIVED_PPS=37 VIDEO_RECEIVED_PPS value\n     * @property {number} VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT=38 VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} VIDEO_RENDER_DELAY_MS=39 VIDEO_RENDER_DELAY_MS value\n     * @property {number} VIDEO_RECEIVED_FPS=40 VIDEO_RECEIVED_FPS value\n     * @property {number} VIDEO_DECODE_FPS=41 VIDEO_DECODE_FPS value\n     * @property {number} VIDEO_NACKS_SENT=42 VIDEO_NACKS_SENT value\n     * @property {number} VIDEO_FIRS_SENT=43 VIDEO_FIRS_SENT value\n     * @property {number} VIDEO_RECEIVED_BITRATE=44 VIDEO_RECEIVED_BITRATE value\n     * @property {number} VIDEO_CURRENT_DELAY_MS=45 VIDEO_CURRENT_DELAY_MS value\n     * @property {number} VIDEO_JITTER_BUFFER_MS=46 VIDEO_JITTER_BUFFER_MS value\n     * @property {number} VIDEO_DISCARDED_PPS=47 VIDEO_DISCARDED_PPS value\n     * @property {number} VIDEO_PLIS_SENT=48 VIDEO_PLIS_SENT value\n     * @property {number} VIDEO_RECEIVED_JITTER_MS=49 VIDEO_RECEIVED_JITTER_MS value\n     * @property {number} VIDEO_SENT_QP_SUM=66 VIDEO_SENT_QP_SUM value\n     * @property {number} VIDEO_RECEIVED_QP_SUM=72 VIDEO_RECEIVED_QP_SUM value\n     */\n    SdkMetric.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"VIDEO_ACTUAL_ENCODER_BITRATE\"] = 1;\n        values[valuesById[2] = \"VIDEO_AVAILABLE_SEND_BANDWIDTH\"] = 2;\n        values[valuesById[3] = \"VIDEO_RETRANSMIT_BITRATE\"] = 3;\n        values[valuesById[4] = \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\"] = 4;\n        values[valuesById[5] = \"VIDEO_TARGET_ENCODER_BITRATE\"] = 5;\n        values[valuesById[6] = \"VIDEO_BUCKET_DELAY_MS\"] = 6;\n        values[valuesById[7] = \"STUN_RTT_MS\"] = 7;\n        values[valuesById[8] = \"SOCKET_DISCARDED_PPS\"] = 8;\n        values[valuesById[9] = \"RTC_MIC_JITTER_MS\"] = 9;\n        values[valuesById[10] = \"RTC_MIC_PPS\"] = 10;\n        values[valuesById[11] = \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\"] = 11;\n        values[valuesById[12] = \"RTC_MIC_BITRATE\"] = 12;\n        values[valuesById[13] = \"RTC_MIC_RTT_MS\"] = 13;\n        values[valuesById[14] = \"RTC_SPK_PPS\"] = 14;\n        values[valuesById[15] = \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\"] = 15;\n        values[valuesById[16] = \"RTC_SPK_JITTER_MS\"] = 16;\n        values[valuesById[17] = \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\"] = 17;\n        values[valuesById[18] = \"RTC_SPK_BITRATE\"] = 18;\n        values[valuesById[19] = \"RTC_SPK_CURRENT_DELAY_MS\"] = 19;\n        values[valuesById[20] = \"RTC_SPK_JITTER_BUFFER_MS\"] = 20;\n        values[valuesById[21] = \"VIDEO_SENT_RTT_MS\"] = 21;\n        values[valuesById[22] = \"VIDEO_ENCODE_USAGE_PERCENT\"] = 22;\n        values[valuesById[23] = \"VIDEO_NACKS_RECEIVED\"] = 23;\n        values[valuesById[24] = \"VIDEO_PLIS_RECEIVED\"] = 24;\n        values[valuesById[25] = \"VIDEO_AVERAGE_ENCODE_MS\"] = 25;\n        values[valuesById[26] = \"VIDEO_INPUT_FPS\"] = 26;\n        values[valuesById[27] = \"VIDEO_ENCODE_FPS\"] = 27;\n        values[valuesById[28] = \"VIDEO_SENT_FPS\"] = 28;\n        values[valuesById[29] = \"VIDEO_FIRS_RECEIVED\"] = 29;\n        values[valuesById[30] = \"VIDEO_SENT_PPS\"] = 30;\n        values[valuesById[31] = \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\"] = 31;\n        values[valuesById[32] = \"VIDEO_SENT_BITRATE\"] = 32;\n        values[valuesById[33] = \"VIDEO_DROPPED_FPS\"] = 33;\n        values[valuesById[34] = \"VIDEO_TARGET_DELAY_MS\"] = 34;\n        values[valuesById[35] = \"VIDEO_DECODE_MS\"] = 35;\n        values[valuesById[36] = \"VIDEO_OUTPUT_FPS\"] = 36;\n        values[valuesById[37] = \"VIDEO_RECEIVED_PPS\"] = 37;\n        values[valuesById[38] = \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\"] = 38;\n        values[valuesById[39] = \"VIDEO_RENDER_DELAY_MS\"] = 39;\n        values[valuesById[40] = \"VIDEO_RECEIVED_FPS\"] = 40;\n        values[valuesById[41] = \"VIDEO_DECODE_FPS\"] = 41;\n        values[valuesById[42] = \"VIDEO_NACKS_SENT\"] = 42;\n        values[valuesById[43] = \"VIDEO_FIRS_SENT\"] = 43;\n        values[valuesById[44] = \"VIDEO_RECEIVED_BITRATE\"] = 44;\n        values[valuesById[45] = \"VIDEO_CURRENT_DELAY_MS\"] = 45;\n        values[valuesById[46] = \"VIDEO_JITTER_BUFFER_MS\"] = 46;\n        values[valuesById[47] = \"VIDEO_DISCARDED_PPS\"] = 47;\n        values[valuesById[48] = \"VIDEO_PLIS_SENT\"] = 48;\n        values[valuesById[49] = \"VIDEO_RECEIVED_JITTER_MS\"] = 49;\n        values[valuesById[66] = \"VIDEO_SENT_QP_SUM\"] = 66;\n        values[valuesById[72] = \"VIDEO_RECEIVED_QP_SUM\"] = 72;\n        return values;\n    })();\n\n    return SdkMetric;\n})();\n\n$root.SdkStreamMetricFrame = (function() {\n\n    /**\n     * Properties of a SdkStreamMetricFrame.\n     * @exports ISdkStreamMetricFrame\n     * @interface ISdkStreamMetricFrame\n     * @property {number|null} [streamId] SdkStreamMetricFrame streamId\n     * @property {number|null} [groupId] SdkStreamMetricFrame groupId\n     * @property {Array.<ISdkMetric>|null} [metrics] SdkStreamMetricFrame metrics\n     */\n\n    /**\n     * Constructs a new SdkStreamMetricFrame.\n     * @exports SdkStreamMetricFrame\n     * @classdesc Represents a SdkStreamMetricFrame.\n     * @implements ISdkStreamMetricFrame\n     * @constructor\n     * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n     */\n    function SdkStreamMetricFrame(properties) {\n        this.metrics = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamMetricFrame streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.streamId = 0;\n\n    /**\n     * SdkStreamMetricFrame groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.groupId = 0;\n\n    /**\n     * SdkStreamMetricFrame metrics.\n     * @member {Array.<ISdkMetric>} metrics\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.metrics = $util.emptyArray;\n\n    /**\n     * Creates a new SdkStreamMetricFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame instance\n     */\n    SdkStreamMetricFrame.create = function create(properties) {\n        return new SdkStreamMetricFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamMetricFrame message. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamMetricFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.streamId);\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.groupId);\n        if (message.metrics != null && message.metrics.length)\n            for (var i = 0; i < message.metrics.length; ++i)\n                $root.SdkMetric.encode(message.metrics[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamMetricFrame message, length delimited. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamMetricFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamMetricFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamMetricFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 3:\n                message.streamId = reader.uint32();\n                break;\n            case 4:\n                message.groupId = reader.uint32();\n                break;\n            case 5:\n                if (!(message.metrics && message.metrics.length))\n                    message.metrics = [];\n                message.metrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamMetricFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamMetricFrame message.\n     * @function verify\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamMetricFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        if (message.metrics != null && message.hasOwnProperty(\"metrics\")) {\n            if (!Array.isArray(message.metrics))\n                return \"metrics: array expected\";\n            for (var i = 0; i < message.metrics.length; ++i) {\n                var error = $root.SdkMetric.verify(message.metrics[i]);\n                if (error)\n                    return \"metrics.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamMetricFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     */\n    SdkStreamMetricFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamMetricFrame)\n            return object;\n        var message = new $root.SdkStreamMetricFrame();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        if (object.metrics) {\n            if (!Array.isArray(object.metrics))\n                throw TypeError(\".SdkStreamMetricFrame.metrics: array expected\");\n            message.metrics = [];\n            for (var i = 0; i < object.metrics.length; ++i) {\n                if (typeof object.metrics[i] !== \"object\")\n                    throw TypeError(\".SdkStreamMetricFrame.metrics: object expected\");\n                message.metrics[i] = $root.SdkMetric.fromObject(object.metrics[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamMetricFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {SdkStreamMetricFrame} message SdkStreamMetricFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamMetricFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.metrics = [];\n        if (options.defaults) {\n            object.streamId = 0;\n            object.groupId = 0;\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        if (message.metrics && message.metrics.length) {\n            object.metrics = [];\n            for (var j = 0; j < message.metrics.length; ++j)\n                object.metrics[j] = $root.SdkMetric.toObject(message.metrics[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamMetricFrame to JSON.\n     * @function toJSON\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamMetricFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamMetricFrame;\n})();\n\n$root.SdkClientMetricFrame = (function() {\n\n    /**\n     * Properties of a SdkClientMetricFrame.\n     * @exports ISdkClientMetricFrame\n     * @interface ISdkClientMetricFrame\n     * @property {Array.<ISdkMetric>|null} [globalMetrics] SdkClientMetricFrame globalMetrics\n     * @property {Array.<ISdkStreamMetricFrame>|null} [streamMetricFrames] SdkClientMetricFrame streamMetricFrames\n     */\n\n    /**\n     * Constructs a new SdkClientMetricFrame.\n     * @exports SdkClientMetricFrame\n     * @classdesc Represents a SdkClientMetricFrame.\n     * @implements ISdkClientMetricFrame\n     * @constructor\n     * @param {ISdkClientMetricFrame=} [properties] Properties to set\n     */\n    function SdkClientMetricFrame(properties) {\n        this.globalMetrics = [];\n        this.streamMetricFrames = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkClientMetricFrame globalMetrics.\n     * @member {Array.<ISdkMetric>} globalMetrics\n     * @memberof SdkClientMetricFrame\n     * @instance\n     */\n    SdkClientMetricFrame.prototype.globalMetrics = $util.emptyArray;\n\n    /**\n     * SdkClientMetricFrame streamMetricFrames.\n     * @member {Array.<ISdkStreamMetricFrame>} streamMetricFrames\n     * @memberof SdkClientMetricFrame\n     * @instance\n     */\n    SdkClientMetricFrame.prototype.streamMetricFrames = $util.emptyArray;\n\n    /**\n     * Creates a new SdkClientMetricFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame=} [properties] Properties to set\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame instance\n     */\n    SdkClientMetricFrame.create = function create(properties) {\n        return new SdkClientMetricFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkClientMetricFrame message. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientMetricFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.globalMetrics != null && message.globalMetrics.length)\n            for (var i = 0; i < message.globalMetrics.length; ++i)\n                $root.SdkMetric.encode(message.globalMetrics[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.streamMetricFrames != null && message.streamMetricFrames.length)\n            for (var i = 0; i < message.streamMetricFrames.length; ++i)\n                $root.SdkStreamMetricFrame.encode(message.streamMetricFrames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkClientMetricFrame message, length delimited. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkClientMetricFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientMetricFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkClientMetricFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.globalMetrics && message.globalMetrics.length))\n                    message.globalMetrics = [];\n                message.globalMetrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                if (!(message.streamMetricFrames && message.streamMetricFrames.length))\n                    message.streamMetricFrames = [];\n                message.streamMetricFrames.push($root.SdkStreamMetricFrame.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkClientMetricFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkClientMetricFrame message.\n     * @function verify\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkClientMetricFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.globalMetrics != null && message.hasOwnProperty(\"globalMetrics\")) {\n            if (!Array.isArray(message.globalMetrics))\n                return \"globalMetrics: array expected\";\n            for (var i = 0; i < message.globalMetrics.length; ++i) {\n                var error = $root.SdkMetric.verify(message.globalMetrics[i]);\n                if (error)\n                    return \"globalMetrics.\" + error;\n            }\n        }\n        if (message.streamMetricFrames != null && message.hasOwnProperty(\"streamMetricFrames\")) {\n            if (!Array.isArray(message.streamMetricFrames))\n                return \"streamMetricFrames: array expected\";\n            for (var i = 0; i < message.streamMetricFrames.length; ++i) {\n                var error = $root.SdkStreamMetricFrame.verify(message.streamMetricFrames[i]);\n                if (error)\n                    return \"streamMetricFrames.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkClientMetricFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     */\n    SdkClientMetricFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkClientMetricFrame)\n            return object;\n        var message = new $root.SdkClientMetricFrame();\n        if (object.globalMetrics) {\n            if (!Array.isArray(object.globalMetrics))\n                throw TypeError(\".SdkClientMetricFrame.globalMetrics: array expected\");\n            message.globalMetrics = [];\n            for (var i = 0; i < object.globalMetrics.length; ++i) {\n                if (typeof object.globalMetrics[i] !== \"object\")\n                    throw TypeError(\".SdkClientMetricFrame.globalMetrics: object expected\");\n                message.globalMetrics[i] = $root.SdkMetric.fromObject(object.globalMetrics[i]);\n            }\n        }\n        if (object.streamMetricFrames) {\n            if (!Array.isArray(object.streamMetricFrames))\n                throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: array expected\");\n            message.streamMetricFrames = [];\n            for (var i = 0; i < object.streamMetricFrames.length; ++i) {\n                if (typeof object.streamMetricFrames[i] !== \"object\")\n                    throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: object expected\");\n                message.streamMetricFrames[i] = $root.SdkStreamMetricFrame.fromObject(object.streamMetricFrames[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkClientMetricFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {SdkClientMetricFrame} message SdkClientMetricFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkClientMetricFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.globalMetrics = [];\n            object.streamMetricFrames = [];\n        }\n        if (message.globalMetrics && message.globalMetrics.length) {\n            object.globalMetrics = [];\n            for (var j = 0; j < message.globalMetrics.length; ++j)\n                object.globalMetrics[j] = $root.SdkMetric.toObject(message.globalMetrics[j], options);\n        }\n        if (message.streamMetricFrames && message.streamMetricFrames.length) {\n            object.streamMetricFrames = [];\n            for (var j = 0; j < message.streamMetricFrames.length; ++j)\n                object.streamMetricFrames[j] = $root.SdkStreamMetricFrame.toObject(message.streamMetricFrames[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkClientMetricFrame to JSON.\n     * @function toJSON\n     * @memberof SdkClientMetricFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkClientMetricFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkClientMetricFrame;\n})();\n\n$root.SdkDataMessageFrame = (function() {\n\n    /**\n     * Properties of a SdkDataMessageFrame.\n     * @exports ISdkDataMessageFrame\n     * @interface ISdkDataMessageFrame\n     * @property {Array.<ISdkDataMessagePayload>|null} [messages] SdkDataMessageFrame messages\n     */\n\n    /**\n     * Constructs a new SdkDataMessageFrame.\n     * @exports SdkDataMessageFrame\n     * @classdesc Represents a SdkDataMessageFrame.\n     * @implements ISdkDataMessageFrame\n     * @constructor\n     * @param {ISdkDataMessageFrame=} [properties] Properties to set\n     */\n    function SdkDataMessageFrame(properties) {\n        this.messages = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkDataMessageFrame messages.\n     * @member {Array.<ISdkDataMessagePayload>} messages\n     * @memberof SdkDataMessageFrame\n     * @instance\n     */\n    SdkDataMessageFrame.prototype.messages = $util.emptyArray;\n\n    /**\n     * Creates a new SdkDataMessageFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame=} [properties] Properties to set\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame instance\n     */\n    SdkDataMessageFrame.create = function create(properties) {\n        return new SdkDataMessageFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkDataMessageFrame message. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessageFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.messages != null && message.messages.length)\n            for (var i = 0; i < message.messages.length; ++i)\n                $root.SdkDataMessagePayload.encode(message.messages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkDataMessageFrame message, length delimited. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessageFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkDataMessageFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessageFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkDataMessageFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.messages && message.messages.length))\n                    message.messages = [];\n                message.messages.push($root.SdkDataMessagePayload.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkDataMessageFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessageFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkDataMessageFrame message.\n     * @function verify\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkDataMessageFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.messages != null && message.hasOwnProperty(\"messages\")) {\n            if (!Array.isArray(message.messages))\n                return \"messages: array expected\";\n            for (var i = 0; i < message.messages.length; ++i) {\n                var error = $root.SdkDataMessagePayload.verify(message.messages[i]);\n                if (error)\n                    return \"messages.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkDataMessageFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     */\n    SdkDataMessageFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkDataMessageFrame)\n            return object;\n        var message = new $root.SdkDataMessageFrame();\n        if (object.messages) {\n            if (!Array.isArray(object.messages))\n                throw TypeError(\".SdkDataMessageFrame.messages: array expected\");\n            message.messages = [];\n            for (var i = 0; i < object.messages.length; ++i) {\n                if (typeof object.messages[i] !== \"object\")\n                    throw TypeError(\".SdkDataMessageFrame.messages: object expected\");\n                message.messages[i] = $root.SdkDataMessagePayload.fromObject(object.messages[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkDataMessageFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {SdkDataMessageFrame} message SdkDataMessageFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkDataMessageFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.messages = [];\n        if (message.messages && message.messages.length) {\n            object.messages = [];\n            for (var j = 0; j < message.messages.length; ++j)\n                object.messages[j] = $root.SdkDataMessagePayload.toObject(message.messages[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkDataMessageFrame to JSON.\n     * @function toJSON\n     * @memberof SdkDataMessageFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkDataMessageFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkDataMessageFrame;\n})();\n\n$root.SdkDataMessagePayload = (function() {\n\n    /**\n     * Properties of a SdkDataMessagePayload.\n     * @exports ISdkDataMessagePayload\n     * @interface ISdkDataMessagePayload\n     * @property {string|null} [topic] SdkDataMessagePayload topic\n     * @property {Uint8Array|null} [data] SdkDataMessagePayload data\n     * @property {number|null} [lifetimeMs] SdkDataMessagePayload lifetimeMs\n     * @property {string|null} [senderAttendeeId] SdkDataMessagePayload senderAttendeeId\n     * @property {number|Long|null} [ingestTimeNs] SdkDataMessagePayload ingestTimeNs\n     * @property {string|null} [senderExternalUserId] SdkDataMessagePayload senderExternalUserId\n     */\n\n    /**\n     * Constructs a new SdkDataMessagePayload.\n     * @exports SdkDataMessagePayload\n     * @classdesc Represents a SdkDataMessagePayload.\n     * @implements ISdkDataMessagePayload\n     * @constructor\n     * @param {ISdkDataMessagePayload=} [properties] Properties to set\n     */\n    function SdkDataMessagePayload(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkDataMessagePayload topic.\n     * @member {string} topic\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.topic = \"\";\n\n    /**\n     * SdkDataMessagePayload data.\n     * @member {Uint8Array} data\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.data = $util.newBuffer([]);\n\n    /**\n     * SdkDataMessagePayload lifetimeMs.\n     * @member {number} lifetimeMs\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.lifetimeMs = 0;\n\n    /**\n     * SdkDataMessagePayload senderAttendeeId.\n     * @member {string} senderAttendeeId\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.senderAttendeeId = \"\";\n\n    /**\n     * SdkDataMessagePayload ingestTimeNs.\n     * @member {number|Long} ingestTimeNs\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.ingestTimeNs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkDataMessagePayload senderExternalUserId.\n     * @member {string} senderExternalUserId\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.senderExternalUserId = \"\";\n\n    /**\n     * Creates a new SdkDataMessagePayload instance using the specified properties.\n     * @function create\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload=} [properties] Properties to set\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload instance\n     */\n    SdkDataMessagePayload.create = function create(properties) {\n        return new SdkDataMessagePayload(properties);\n    };\n\n    /**\n     * Encodes the specified SdkDataMessagePayload message. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n     * @function encode\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessagePayload.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.lifetimeMs);\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.senderAttendeeId);\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.ingestTimeNs);\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.senderExternalUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkDataMessagePayload message, length delimited. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessagePayload.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkDataMessagePayload message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessagePayload.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkDataMessagePayload();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.topic = reader.string();\n                break;\n            case 2:\n                message.data = reader.bytes();\n                break;\n            case 3:\n                message.lifetimeMs = reader.uint32();\n                break;\n            case 4:\n                message.senderAttendeeId = reader.string();\n                break;\n            case 5:\n                message.ingestTimeNs = reader.int64();\n                break;\n            case 6:\n                message.senderExternalUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkDataMessagePayload message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessagePayload.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkDataMessagePayload message.\n     * @function verify\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkDataMessagePayload.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            if (!$util.isString(message.topic))\n                return \"topic: string expected\";\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data)))\n                return \"data: buffer expected\";\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            if (!$util.isInteger(message.lifetimeMs))\n                return \"lifetimeMs: integer expected\";\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            if (!$util.isString(message.senderAttendeeId))\n                return \"senderAttendeeId: string expected\";\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            if (!$util.isInteger(message.ingestTimeNs) && !(message.ingestTimeNs && $util.isInteger(message.ingestTimeNs.low) && $util.isInteger(message.ingestTimeNs.high)))\n                return \"ingestTimeNs: integer|Long expected\";\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            if (!$util.isString(message.senderExternalUserId))\n                return \"senderExternalUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkDataMessagePayload message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     */\n    SdkDataMessagePayload.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkDataMessagePayload)\n            return object;\n        var message = new $root.SdkDataMessagePayload();\n        if (object.topic != null)\n            message.topic = String(object.topic);\n        if (object.data != null)\n            if (typeof object.data === \"string\")\n                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);\n            else if (object.data.length)\n                message.data = object.data;\n        if (object.lifetimeMs != null)\n            message.lifetimeMs = object.lifetimeMs >>> 0;\n        if (object.senderAttendeeId != null)\n            message.senderAttendeeId = String(object.senderAttendeeId);\n        if (object.ingestTimeNs != null)\n            if ($util.Long)\n                (message.ingestTimeNs = $util.Long.fromValue(object.ingestTimeNs)).unsigned = false;\n            else if (typeof object.ingestTimeNs === \"string\")\n                message.ingestTimeNs = parseInt(object.ingestTimeNs, 10);\n            else if (typeof object.ingestTimeNs === \"number\")\n                message.ingestTimeNs = object.ingestTimeNs;\n            else if (typeof object.ingestTimeNs === \"object\")\n                message.ingestTimeNs = new $util.LongBits(object.ingestTimeNs.low >>> 0, object.ingestTimeNs.high >>> 0).toNumber();\n        if (object.senderExternalUserId != null)\n            message.senderExternalUserId = String(object.senderExternalUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkDataMessagePayload message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {SdkDataMessagePayload} message SdkDataMessagePayload\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkDataMessagePayload.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.topic = \"\";\n            if (options.bytes === String)\n                object.data = \"\";\n            else {\n                object.data = [];\n                if (options.bytes !== Array)\n                    object.data = $util.newBuffer(object.data);\n            }\n            object.lifetimeMs = 0;\n            object.senderAttendeeId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.ingestTimeNs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.ingestTimeNs = options.longs === String ? \"0\" : 0;\n            object.senderExternalUserId = \"\";\n        }\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            object.topic = message.topic;\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            object.lifetimeMs = message.lifetimeMs;\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            object.senderAttendeeId = message.senderAttendeeId;\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            if (typeof message.ingestTimeNs === \"number\")\n                object.ingestTimeNs = options.longs === String ? String(message.ingestTimeNs) : message.ingestTimeNs;\n            else\n                object.ingestTimeNs = options.longs === String ? $util.Long.prototype.toString.call(message.ingestTimeNs) : options.longs === Number ? new $util.LongBits(message.ingestTimeNs.low >>> 0, message.ingestTimeNs.high >>> 0).toNumber() : message.ingestTimeNs;\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            object.senderExternalUserId = message.senderExternalUserId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkDataMessagePayload to JSON.\n     * @function toJSON\n     * @memberof SdkDataMessagePayload\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkDataMessagePayload.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkDataMessagePayload;\n})();\n\n$root.SdkTurnCredentials = (function() {\n\n    /**\n     * Properties of a SdkTurnCredentials.\n     * @exports ISdkTurnCredentials\n     * @interface ISdkTurnCredentials\n     * @property {string|null} [username] SdkTurnCredentials username\n     * @property {string|null} [password] SdkTurnCredentials password\n     * @property {number|null} [ttl] SdkTurnCredentials ttl\n     * @property {Array.<string>|null} [uris] SdkTurnCredentials uris\n     */\n\n    /**\n     * Constructs a new SdkTurnCredentials.\n     * @exports SdkTurnCredentials\n     * @classdesc Represents a SdkTurnCredentials.\n     * @implements ISdkTurnCredentials\n     * @constructor\n     * @param {ISdkTurnCredentials=} [properties] Properties to set\n     */\n    function SdkTurnCredentials(properties) {\n        this.uris = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTurnCredentials username.\n     * @member {string} username\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.username = \"\";\n\n    /**\n     * SdkTurnCredentials password.\n     * @member {string} password\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.password = \"\";\n\n    /**\n     * SdkTurnCredentials ttl.\n     * @member {number} ttl\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.ttl = 0;\n\n    /**\n     * SdkTurnCredentials uris.\n     * @member {Array.<string>} uris\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.uris = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTurnCredentials instance using the specified properties.\n     * @function create\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials=} [properties] Properties to set\n     * @returns {SdkTurnCredentials} SdkTurnCredentials instance\n     */\n    SdkTurnCredentials.create = function create(properties) {\n        return new SdkTurnCredentials(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTurnCredentials message. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTurnCredentials.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.username);\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.password);\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ttl);\n        if (message.uris != null && message.uris.length)\n            for (var i = 0; i < message.uris.length; ++i)\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.uris[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTurnCredentials message, length delimited. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTurnCredentials.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTurnCredentials message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTurnCredentials.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTurnCredentials();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.username = reader.string();\n                break;\n            case 2:\n                message.password = reader.string();\n                break;\n            case 3:\n                message.ttl = reader.uint32();\n                break;\n            case 4:\n                if (!(message.uris && message.uris.length))\n                    message.uris = [];\n                message.uris.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTurnCredentials message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTurnCredentials.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTurnCredentials message.\n     * @function verify\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTurnCredentials.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            if (!$util.isString(message.username))\n                return \"username: string expected\";\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            if (!$util.isString(message.password))\n                return \"password: string expected\";\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            if (!$util.isInteger(message.ttl))\n                return \"ttl: integer expected\";\n        if (message.uris != null && message.hasOwnProperty(\"uris\")) {\n            if (!Array.isArray(message.uris))\n                return \"uris: array expected\";\n            for (var i = 0; i < message.uris.length; ++i)\n                if (!$util.isString(message.uris[i]))\n                    return \"uris: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTurnCredentials message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     */\n    SdkTurnCredentials.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTurnCredentials)\n            return object;\n        var message = new $root.SdkTurnCredentials();\n        if (object.username != null)\n            message.username = String(object.username);\n        if (object.password != null)\n            message.password = String(object.password);\n        if (object.ttl != null)\n            message.ttl = object.ttl >>> 0;\n        if (object.uris) {\n            if (!Array.isArray(object.uris))\n                throw TypeError(\".SdkTurnCredentials.uris: array expected\");\n            message.uris = [];\n            for (var i = 0; i < object.uris.length; ++i)\n                message.uris[i] = String(object.uris[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTurnCredentials message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {SdkTurnCredentials} message SdkTurnCredentials\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTurnCredentials.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.uris = [];\n        if (options.defaults) {\n            object.username = \"\";\n            object.password = \"\";\n            object.ttl = 0;\n        }\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            object.username = message.username;\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            object.password = message.password;\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            object.ttl = message.ttl;\n        if (message.uris && message.uris.length) {\n            object.uris = [];\n            for (var j = 0; j < message.uris.length; ++j)\n                object.uris[j] = message.uris[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTurnCredentials to JSON.\n     * @function toJSON\n     * @memberof SdkTurnCredentials\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTurnCredentials.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTurnCredentials;\n})();\n\nmodule.exports = $root;\n"]},"metadata":{},"sourceType":"script"}