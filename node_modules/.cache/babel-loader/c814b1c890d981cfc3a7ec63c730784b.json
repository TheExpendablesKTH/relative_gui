{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAudioInput = exports.createAudioContext = exports.VoiceFocus = void 0;\n\nconst decider_js_1 = require(\"./decider.js\");\n\nconst fetch_js_1 = require(\"./fetch.js\");\n\nconst loader_js_1 = require(\"./loader.js\");\n\nconst support_js_1 = require(\"./support.js\");\n\nconst worklet_inline_node_js_1 = require(\"./worklet-inline-node.js\");\n\nconst worklet_worker_sab_node_js_1 = require(\"./worklet-worker-sab-node.js\");\n\nconst worklet_worker_postMessage_node_js_1 = require(\"./worklet-worker-postMessage-node.js\");\n\nconst DEFAULT_AGC_DISABLED_SETTING = {\n  useVoiceFocusAGC: false,\n  useBuiltInAGC: true\n};\nconst DEFAULT_AGC_SETTING = DEFAULT_AGC_DISABLED_SETTING;\nconst DEFAULT_ASSET_GROUP = 'stable-v1';\nconst DEFAULT_CDN = 'https://static.sdkassets.chime.aws/';\nconst DEFAULT_PATHS = {\n  processors: `${DEFAULT_CDN}processors/`,\n  workers: `${DEFAULT_CDN}workers/`,\n  wasm: `${DEFAULT_CDN}wasm/`,\n  models: `${DEFAULT_CDN}wasm/`\n};\nconst DEFAULT_CONTEXT_HINT = {\n  latencyHint: 0\n};\nconst BASE_AUDIO_CONSTRAINTS = {\n  channelCount: 1,\n  echoCancellation: true,\n  googEchoCancellation: true,\n  noiseSuppression: false,\n  googNoiseSuppression: false,\n  googHighpassFilter: false,\n  googTypingNoiseDetection: false\n};\nconst DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC = Object.assign(Object.assign({}, BASE_AUDIO_CONSTRAINTS), {\n  autoGainControl: true,\n  googAutoGainControl: true,\n  googAutoGainControl2: true\n});\nconst DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC = Object.assign(Object.assign({}, BASE_AUDIO_CONSTRAINTS), {\n  autoGainControl: false,\n  googAutoGainControl: false,\n  googAutoGainControl2: false\n});\nconst PROCESSORS = {\n  'voicefocus-worker-sab-processor': {\n    file: 'worklet-worker-sab-processor-v1.js',\n    node: worklet_worker_sab_node_js_1.default\n  },\n  'voicefocus-worker-postMessage-processor': {\n    file: 'worklet-worker-postMessage-processor-v1.js',\n    node: worklet_worker_postMessage_node_js_1.default\n  },\n  'voicefocus-inline-processor': {\n    file: 'worklet-inline-processor-v1.js',\n    node: worklet_inline_node_js_1.default\n  }\n};\n\nconst validateAssetSpec = (assetGroup, revisionID) => {\n  if (assetGroup !== undefined && !fetch_js_1.isValidAssetGroup(assetGroup)) {\n    throw new Error(`Invalid asset group ${assetGroup}`);\n  }\n\n  if (revisionID !== undefined && !fetch_js_1.isValidRevisionID(revisionID)) {\n    throw new Error(`Invalid revision ID ${revisionID}`);\n  }\n};\n\nconst mungeConstraints = (constraints, agc) => {\n  let defaultConstraints;\n\n  if (agc.useBuiltInAGC) {\n    defaultConstraints = DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC;\n  } else {\n    defaultConstraints = DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC;\n  }\n\n  if (!constraints) {\n    return {\n      audio: defaultConstraints\n    };\n  }\n\n  if (!constraints.audio) {\n    return constraints;\n  }\n\n  if (constraints.video) {\n    throw new Error('Not adding Voice Focus to multi-device getUserMedia call.');\n  }\n\n  return Object.assign(Object.assign({}, constraints), {\n    audio: constraints.audio === true ? defaultConstraints : Object.assign(Object.assign({}, constraints.audio), defaultConstraints)\n  });\n};\n\nconst urlForModel = (model, paths) => {\n  return `${paths.models}${decider_js_1.decideModel(model)}.wasm`;\n};\n\nclass VoiceFocus {\n  constructor(worker, processorURL, nodeConstructor, nodeOptions, executionQuanta) {\n    this.processorURL = processorURL;\n    this.nodeConstructor = nodeConstructor;\n    this.nodeOptions = nodeOptions;\n    this.executionQuanta = executionQuanta;\n    this.internal = {\n      worker,\n      nodeOptions\n    };\n  }\n\n  static isSupported(spec, options) {\n    const {\n      fetchBehavior,\n      logger\n    } = options || {};\n\n    if (typeof globalThis === 'undefined') {\n      logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not have globalThis.');\n      return Promise.resolve(false);\n    }\n\n    if (!support_js_1.supportsAudioWorklet(globalThis, logger)) {\n      logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not support Audio Worklet.');\n      return Promise.resolve(false);\n    }\n\n    if (!support_js_1.supportsWASM(globalThis, logger)) {\n      logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not support WASM.');\n      return Promise.resolve(false);\n    }\n\n    if (!support_js_1.supportsWASMStreaming(globalThis, logger)) {\n      logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not support streaming WASM compilation.');\n    }\n\n    const {\n      assetGroup = DEFAULT_ASSET_GROUP,\n      revisionID,\n      paths = DEFAULT_PATHS\n    } = spec || {};\n    validateAssetSpec(assetGroup, revisionID);\n    const assetConfig = revisionID ? {\n      revisionID\n    } : {\n      assetGroup\n    };\n    const updatedFetchBehavior = fetch_js_1.addQueryParams(fetchBehavior, assetConfig);\n    const fetchConfig = Object.assign(Object.assign({}, updatedFetchBehavior), {\n      paths\n    });\n    return support_js_1.supportsVoiceFocusWorker(globalThis, fetchConfig, logger);\n  }\n\n  static mungeExecutionPreference(preference, logger) {\n    const isAuto = preference === undefined || preference === 'auto';\n\n    if (support_js_1.isSafari(globalThis)) {\n      if (isAuto || preference === 'inline') {\n        return 'inline';\n      }\n\n      if (!isAuto) {\n        throw new Error(`Unsupported execution preference ${preference}`);\n      }\n    }\n\n    if (preference === 'worker-sab' && !support_js_1.supportsSharedArrayBuffer(globalThis, globalThis, logger)) {\n      throw new Error(`Unsupported execution preference ${preference}`);\n    }\n\n    return preference || 'auto';\n  }\n\n  static configure(spec, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        fetchBehavior,\n        preResolve,\n        logger\n      } = options || {};\n      const {\n        category = 'voicefocus',\n        name = 'default',\n        variant: variantPreference = 'auto',\n        assetGroup = DEFAULT_ASSET_GROUP,\n        revisionID,\n        simd = 'detect',\n        executionPreference = 'auto',\n        executionQuantaPreference,\n        usagePreference = 'interactivity',\n        estimatorBudget = 100,\n        paths = DEFAULT_PATHS,\n        thresholds\n      } = spec || {};\n      logger === null || logger === void 0 ? void 0 : logger.debug('Configuring Voice Focus with spec', spec);\n\n      if (category !== undefined && category !== 'voicefocus') {\n        throw new Error(`Unrecognized category ${category}`);\n      }\n\n      if (name !== undefined && name !== 'default') {\n        throw new Error(`Unrecognized feature name ${name}`);\n      }\n\n      if (variantPreference !== undefined && !['auto', 'c100', 'c50', 'c20', 'c10'].includes(variantPreference)) {\n        throw new Error(`Unrecognized feature variant ${variantPreference}`);\n      }\n\n      if (executionQuantaPreference !== undefined && ![1, 2, 3].includes(executionQuantaPreference)) {\n        throw new Error(`Unrecognized execution quanta preference ${executionQuantaPreference}`);\n      }\n\n      validateAssetSpec(assetGroup, revisionID);\n\n      if (simd !== undefined && !['detect', 'force', 'disable'].includes(simd)) {\n        throw new Error(`Unrecognized SIMD option ${simd}`);\n      }\n\n      if (executionPreference !== undefined && !['auto', 'inline', 'worker', 'worker-sab', 'worker-postMessage'].includes(executionPreference)) {\n        throw new Error(`Unrecognized execution preference ${executionPreference}`);\n      }\n\n      if (usagePreference !== undefined && !['quality', 'interactivity'].includes(usagePreference)) {\n        throw new Error(`Unrecognized usage preference ${usagePreference}`);\n      }\n\n      const executionSpec = {\n        executionPreference: this.mungeExecutionPreference(executionPreference, logger),\n        usagePreference,\n        executionQuantaPreference,\n        variantPreference,\n        simdPreference: simd,\n        estimatorBudget\n      };\n      const assetConfig = revisionID ? {\n        revisionID\n      } : {\n        assetGroup\n      };\n      const updatedFetchBehavior = fetch_js_1.addQueryParams(fetchBehavior, assetConfig);\n      const fetchConfig = Object.assign({\n        paths\n      }, updatedFetchBehavior);\n      const executionDefinition = yield decider_js_1.measureAndDecideExecutionApproach(executionSpec, fetchConfig, logger, thresholds);\n\n      if (executionDefinition.supported === false) {\n        return {\n          supported: false,\n          reason: executionDefinition.reason\n        };\n      }\n\n      logger === null || logger === void 0 ? void 0 : logger.info('Decided execution approach', executionDefinition);\n      const {\n        useSIMD,\n        processor,\n        variant,\n        executionQuanta\n      } = executionDefinition;\n      const model = {\n        category: category || 'voicefocus',\n        name: name || 'default',\n        variant,\n        simd: useSIMD\n      };\n\n      if (preResolve) {\n        const startingURL = urlForModel(model, paths);\n        model.url = yield fetch_js_1.resolveURL(startingURL, updatedFetchBehavior);\n      }\n\n      return {\n        fetchConfig,\n        model,\n        processor,\n        executionQuanta,\n        supported: true\n      };\n    });\n  }\n\n  static init(configuration, {\n    delegate,\n    preload = true,\n    logger\n  }) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (configuration.supported === false) {\n        throw new Error('Voice Focus not supported. Reason: ' + configuration.reason);\n      }\n\n      const {\n        model,\n        processor,\n        fetchConfig,\n        executionQuanta\n      } = configuration;\n      const {\n        simd\n      } = model;\n      const {\n        paths\n      } = fetchConfig;\n\n      if (processor !== 'voicefocus-inline-processor' && processor !== 'voicefocus-worker-postMessage-processor' && processor !== 'voicefocus-worker-sab-processor') {\n        throw new Error(`Unknown processor ${processor}`);\n      }\n\n      const modelURL = model.url || urlForModel(model, paths);\n      logger === null || logger === void 0 ? void 0 : logger.debug(`Using model URL ${modelURL}.`);\n      const audioBufferURL = `${paths.wasm}audio_buffer-v1${simd ? '_simd' : ''}.wasm`;\n      const resamplerURL = `${paths.wasm}resampler-v1${simd ? '_simd' : ''}.wasm`;\n      const workerURL = `${paths.workers}worker-v1.js`;\n      const {\n        file,\n        node\n      } = PROCESSORS[processor];\n      const processorURL = `${paths.processors}${file}`;\n      const worker = yield loader_js_1.loadWorker(workerURL, 'VoiceFocusWorker', fetchConfig, logger);\n\n      if (preload) {\n        logger === null || logger === void 0 ? void 0 : logger.debug('Preloading', modelURL);\n        let message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n        worker.postMessage({\n          message,\n          preload: true,\n          key: 'model',\n          fetchBehavior: fetchConfig,\n          path: modelURL\n        });\n      }\n\n      const nodeOptions = {\n        processor,\n        worker,\n        audioBufferURL,\n        resamplerURL,\n        fetchBehavior: fetchConfig,\n        modelURL,\n        delegate\n      };\n      const factory = new VoiceFocus(worker, processorURL, node, nodeOptions, executionQuanta);\n      return Promise.resolve(factory);\n    });\n  }\n\n  createNode(context, options) {\n    var _a;\n\n    const {\n      voiceFocusSampleRate = context.sampleRate === 16000 ? 16000 : 48000,\n      enabled = true,\n      agc = DEFAULT_AGC_SETTING\n    } = options || {};\n    const processorOptions = {\n      voiceFocusSampleRate,\n      enabled,\n      sendBufferCount: 10,\n      prefill: 6,\n      agc,\n      executionQuanta: this.executionQuanta\n    };\n    const url = fetch_js_1.withQueryString(this.processorURL, (_a = this.nodeOptions) === null || _a === void 0 ? void 0 : _a.fetchBehavior);\n    return context.audioWorklet.addModule(url).then(() => new this.nodeConstructor(context, Object.assign(Object.assign({}, this.nodeOptions), {\n      processorOptions\n    })));\n  }\n\n  applyToStream(stream, context, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const source = context.createMediaStreamSource(stream);\n      const node = yield this.applyToSourceNode(source, context, options);\n      const destination = context.createMediaStreamDestination();\n      node.connect(destination);\n      return {\n        node,\n        source,\n        destination,\n        stream: destination.stream\n      };\n    });\n  }\n\n  applyToSourceNode(source, context, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const node = yield this.createNode(context, options);\n      source.connect(node);\n      return node;\n    });\n  }\n\n}\n\nexports.VoiceFocus = VoiceFocus;\n\nconst createAudioContext = (contextHint = DEFAULT_CONTEXT_HINT) => {\n  return new (window.AudioContext || window.webkitAudioContext)(contextHint);\n};\n\nexports.createAudioContext = createAudioContext;\n\nconst getAudioInput = (context, inputOptions, voiceFocusOptions) => __awaiter(void 0, void 0, void 0, function* () {\n  var _a, _b;\n\n  const {\n    constraints,\n    spec,\n    delegate,\n    preload = true,\n    options\n  } = inputOptions;\n  const {\n    logger\n  } = voiceFocusOptions;\n  const config = yield VoiceFocus.configure(spec, voiceFocusOptions);\n\n  if (!config.supported) {\n    (_a = voiceFocusOptions.logger) === null || _a === void 0 ? void 0 : _a.warn('Voice Focus not supported; returning standard stream.');\n    return window.navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  const factory = yield VoiceFocus.init(config, {\n    delegate,\n    preload,\n    logger\n  });\n  const agc = ((_b = inputOptions.options) === null || _b === void 0 ? void 0 : _b.agc) || DEFAULT_AGC_SETTING;\n  const input = yield window.navigator.mediaDevices.getUserMedia(mungeConstraints(constraints, agc));\n  return factory.applyToStream(input, context, options).then(result => result.stream);\n});\n\nexports.getAudioInput = getAudioInput;","map":{"version":3,"sources":["/Users/torarvill/Documents/Pip/relative_gui/relative_ui/node_modules/amazon-chime-sdk-js/libs/voicefocus/voicefocus.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","getAudioInput","createAudioContext","VoiceFocus","decider_js_1","require","fetch_js_1","loader_js_1","support_js_1","worklet_inline_node_js_1","worklet_worker_sab_node_js_1","worklet_worker_postMessage_node_js_1","DEFAULT_AGC_DISABLED_SETTING","useVoiceFocusAGC","useBuiltInAGC","DEFAULT_AGC_SETTING","DEFAULT_ASSET_GROUP","DEFAULT_CDN","DEFAULT_PATHS","processors","workers","wasm","models","DEFAULT_CONTEXT_HINT","latencyHint","BASE_AUDIO_CONSTRAINTS","channelCount","echoCancellation","googEchoCancellation","noiseSuppression","googNoiseSuppression","googHighpassFilter","googTypingNoiseDetection","DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC","assign","autoGainControl","googAutoGainControl","googAutoGainControl2","DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC","PROCESSORS","file","node","default","validateAssetSpec","assetGroup","revisionID","undefined","isValidAssetGroup","Error","isValidRevisionID","mungeConstraints","constraints","agc","defaultConstraints","audio","video","urlForModel","model","paths","decideModel","constructor","worker","processorURL","nodeConstructor","nodeOptions","executionQuanta","internal","isSupported","spec","options","fetchBehavior","logger","globalThis","debug","supportsAudioWorklet","supportsWASM","supportsWASMStreaming","assetConfig","updatedFetchBehavior","addQueryParams","fetchConfig","supportsVoiceFocusWorker","mungeExecutionPreference","preference","isAuto","isSafari","supportsSharedArrayBuffer","configure","preResolve","category","name","variant","variantPreference","simd","executionPreference","executionQuantaPreference","usagePreference","estimatorBudget","thresholds","includes","executionSpec","simdPreference","executionDefinition","measureAndDecideExecutionApproach","supported","reason","info","useSIMD","processor","startingURL","url","resolveURL","init","configuration","delegate","preload","modelURL","audioBufferURL","resamplerURL","workerURL","loadWorker","message","supportsWASMPostMessage","postMessage","key","path","factory","createNode","context","_a","voiceFocusSampleRate","sampleRate","enabled","processorOptions","sendBufferCount","prefill","withQueryString","audioWorklet","addModule","applyToStream","stream","source","createMediaStreamSource","applyToSourceNode","destination","createMediaStreamDestination","connect","contextHint","window","AudioContext","webkitAudioContext","inputOptions","voiceFocusOptions","_b","config","warn","navigator","mediaDevices","getUserMedia","input"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAudioInput = exports.createAudioContext = exports.VoiceFocus = void 0;\nconst decider_js_1 = require(\"./decider.js\");\nconst fetch_js_1 = require(\"./fetch.js\");\nconst loader_js_1 = require(\"./loader.js\");\nconst support_js_1 = require(\"./support.js\");\nconst worklet_inline_node_js_1 = require(\"./worklet-inline-node.js\");\nconst worklet_worker_sab_node_js_1 = require(\"./worklet-worker-sab-node.js\");\nconst worklet_worker_postMessage_node_js_1 = require(\"./worklet-worker-postMessage-node.js\");\nconst DEFAULT_AGC_DISABLED_SETTING = {\n    useVoiceFocusAGC: false,\n    useBuiltInAGC: true,\n};\nconst DEFAULT_AGC_SETTING = DEFAULT_AGC_DISABLED_SETTING;\nconst DEFAULT_ASSET_GROUP = 'stable-v1';\nconst DEFAULT_CDN = 'https://static.sdkassets.chime.aws/';\nconst DEFAULT_PATHS = {\n    processors: `${DEFAULT_CDN}processors/`,\n    workers: `${DEFAULT_CDN}workers/`,\n    wasm: `${DEFAULT_CDN}wasm/`,\n    models: `${DEFAULT_CDN}wasm/`,\n};\nconst DEFAULT_CONTEXT_HINT = {\n    latencyHint: 0,\n};\nconst BASE_AUDIO_CONSTRAINTS = {\n    channelCount: 1,\n    echoCancellation: true,\n    googEchoCancellation: true,\n    noiseSuppression: false,\n    googNoiseSuppression: false,\n    googHighpassFilter: false,\n    googTypingNoiseDetection: false,\n};\nconst DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC = Object.assign(Object.assign({}, BASE_AUDIO_CONSTRAINTS), { autoGainControl: true, googAutoGainControl: true, googAutoGainControl2: true });\nconst DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC = Object.assign(Object.assign({}, BASE_AUDIO_CONSTRAINTS), { autoGainControl: false, googAutoGainControl: false, googAutoGainControl2: false });\nconst PROCESSORS = {\n    'voicefocus-worker-sab-processor': {\n        file: 'worklet-worker-sab-processor-v1.js',\n        node: worklet_worker_sab_node_js_1.default,\n    },\n    'voicefocus-worker-postMessage-processor': {\n        file: 'worklet-worker-postMessage-processor-v1.js',\n        node: worklet_worker_postMessage_node_js_1.default,\n    },\n    'voicefocus-inline-processor': {\n        file: 'worklet-inline-processor-v1.js',\n        node: worklet_inline_node_js_1.default,\n    },\n};\nconst validateAssetSpec = (assetGroup, revisionID) => {\n    if (assetGroup !== undefined && !fetch_js_1.isValidAssetGroup(assetGroup)) {\n        throw new Error(`Invalid asset group ${assetGroup}`);\n    }\n    if (revisionID !== undefined && !fetch_js_1.isValidRevisionID(revisionID)) {\n        throw new Error(`Invalid revision ID ${revisionID}`);\n    }\n};\nconst mungeConstraints = (constraints, agc) => {\n    let defaultConstraints;\n    if (agc.useBuiltInAGC) {\n        defaultConstraints = DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC;\n    }\n    else {\n        defaultConstraints = DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC;\n    }\n    if (!constraints) {\n        return { audio: defaultConstraints };\n    }\n    if (!constraints.audio) {\n        return constraints;\n    }\n    if (constraints.video) {\n        throw new Error('Not adding Voice Focus to multi-device getUserMedia call.');\n    }\n    return Object.assign(Object.assign({}, constraints), { audio: constraints.audio === true ? defaultConstraints : Object.assign(Object.assign({}, constraints.audio), defaultConstraints) });\n};\nconst urlForModel = (model, paths) => {\n    return `${paths.models}${decider_js_1.decideModel(model)}.wasm`;\n};\nclass VoiceFocus {\n    constructor(worker, processorURL, nodeConstructor, nodeOptions, executionQuanta) {\n        this.processorURL = processorURL;\n        this.nodeConstructor = nodeConstructor;\n        this.nodeOptions = nodeOptions;\n        this.executionQuanta = executionQuanta;\n        this.internal = {\n            worker,\n            nodeOptions,\n        };\n    }\n    static isSupported(spec, options) {\n        const { fetchBehavior, logger } = options || {};\n        if (typeof globalThis === 'undefined') {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not have globalThis.');\n            return Promise.resolve(false);\n        }\n        if (!support_js_1.supportsAudioWorklet(globalThis, logger)) {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not support Audio Worklet.');\n            return Promise.resolve(false);\n        }\n        if (!support_js_1.supportsWASM(globalThis, logger)) {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not support WASM.');\n            return Promise.resolve(false);\n        }\n        if (!support_js_1.supportsWASMStreaming(globalThis, logger)) {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not support streaming WASM compilation.');\n        }\n        const { assetGroup = DEFAULT_ASSET_GROUP, revisionID, paths = DEFAULT_PATHS, } = spec || {};\n        validateAssetSpec(assetGroup, revisionID);\n        const assetConfig = revisionID ? { revisionID } : { assetGroup };\n        const updatedFetchBehavior = fetch_js_1.addQueryParams(fetchBehavior, assetConfig);\n        const fetchConfig = Object.assign(Object.assign({}, updatedFetchBehavior), { paths });\n        return support_js_1.supportsVoiceFocusWorker(globalThis, fetchConfig, logger);\n    }\n    static mungeExecutionPreference(preference, logger) {\n        const isAuto = (preference === undefined || preference === 'auto');\n        if (support_js_1.isSafari(globalThis)) {\n            if (isAuto || preference === 'inline') {\n                return 'inline';\n            }\n            if (!isAuto) {\n                throw new Error(`Unsupported execution preference ${preference}`);\n            }\n        }\n        if (preference === 'worker-sab' && !support_js_1.supportsSharedArrayBuffer(globalThis, globalThis, logger)) {\n            throw new Error(`Unsupported execution preference ${preference}`);\n        }\n        return preference || 'auto';\n    }\n    static configure(spec, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { fetchBehavior, preResolve, logger, } = options || {};\n            const { category = 'voicefocus', name = 'default', variant: variantPreference = 'auto', assetGroup = DEFAULT_ASSET_GROUP, revisionID, simd = 'detect', executionPreference = 'auto', executionQuantaPreference, usagePreference = 'interactivity', estimatorBudget = 100, paths = DEFAULT_PATHS, thresholds, } = spec || {};\n            logger === null || logger === void 0 ? void 0 : logger.debug('Configuring Voice Focus with spec', spec);\n            if (category !== undefined && category !== 'voicefocus') {\n                throw new Error(`Unrecognized category ${category}`);\n            }\n            if (name !== undefined && name !== 'default') {\n                throw new Error(`Unrecognized feature name ${name}`);\n            }\n            if (variantPreference !== undefined && !['auto', 'c100', 'c50', 'c20', 'c10'].includes(variantPreference)) {\n                throw new Error(`Unrecognized feature variant ${variantPreference}`);\n            }\n            if (executionQuantaPreference !== undefined && ![1, 2, 3].includes(executionQuantaPreference)) {\n                throw new Error(`Unrecognized execution quanta preference ${executionQuantaPreference}`);\n            }\n            validateAssetSpec(assetGroup, revisionID);\n            if (simd !== undefined && !['detect', 'force', 'disable'].includes(simd)) {\n                throw new Error(`Unrecognized SIMD option ${simd}`);\n            }\n            if (executionPreference !== undefined && !['auto', 'inline', 'worker', 'worker-sab', 'worker-postMessage'].includes(executionPreference)) {\n                throw new Error(`Unrecognized execution preference ${executionPreference}`);\n            }\n            if (usagePreference !== undefined && !['quality', 'interactivity'].includes(usagePreference)) {\n                throw new Error(`Unrecognized usage preference ${usagePreference}`);\n            }\n            const executionSpec = {\n                executionPreference: this.mungeExecutionPreference(executionPreference, logger),\n                usagePreference,\n                executionQuantaPreference,\n                variantPreference,\n                simdPreference: simd,\n                estimatorBudget,\n            };\n            const assetConfig = revisionID ? { revisionID } : { assetGroup };\n            const updatedFetchBehavior = fetch_js_1.addQueryParams(fetchBehavior, assetConfig);\n            const fetchConfig = Object.assign({ paths }, updatedFetchBehavior);\n            const executionDefinition = yield decider_js_1.measureAndDecideExecutionApproach(executionSpec, fetchConfig, logger, thresholds);\n            if (executionDefinition.supported === false) {\n                return { supported: false, reason: executionDefinition.reason };\n            }\n            logger === null || logger === void 0 ? void 0 : logger.info('Decided execution approach', executionDefinition);\n            const { useSIMD, processor, variant, executionQuanta } = executionDefinition;\n            const model = {\n                category: category || 'voicefocus',\n                name: name || 'default',\n                variant,\n                simd: useSIMD,\n            };\n            if (preResolve) {\n                const startingURL = urlForModel(model, paths);\n                model.url = yield fetch_js_1.resolveURL(startingURL, updatedFetchBehavior);\n            }\n            return {\n                fetchConfig,\n                model,\n                processor,\n                executionQuanta,\n                supported: true,\n            };\n        });\n    }\n    static init(configuration, { delegate, preload = true, logger, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (configuration.supported === false) {\n                throw new Error('Voice Focus not supported. Reason: ' + configuration.reason);\n            }\n            const { model, processor, fetchConfig, executionQuanta, } = configuration;\n            const { simd } = model;\n            const { paths } = fetchConfig;\n            if (processor !== 'voicefocus-inline-processor' &&\n                processor !== 'voicefocus-worker-postMessage-processor' &&\n                processor !== 'voicefocus-worker-sab-processor') {\n                throw new Error(`Unknown processor ${processor}`);\n            }\n            const modelURL = model.url || urlForModel(model, paths);\n            logger === null || logger === void 0 ? void 0 : logger.debug(`Using model URL ${modelURL}.`);\n            const audioBufferURL = `${paths.wasm}audio_buffer-v1${simd ? '_simd' : ''}.wasm`;\n            const resamplerURL = `${paths.wasm}resampler-v1${simd ? '_simd' : ''}.wasm`;\n            const workerURL = `${paths.workers}worker-v1.js`;\n            const { file, node } = PROCESSORS[processor];\n            const processorURL = `${paths.processors}${file}`;\n            const worker = yield loader_js_1.loadWorker(workerURL, 'VoiceFocusWorker', fetchConfig, logger);\n            if (preload) {\n                logger === null || logger === void 0 ? void 0 : logger.debug('Preloading', modelURL);\n                let message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n                worker.postMessage({\n                    message,\n                    preload: true,\n                    key: 'model',\n                    fetchBehavior: fetchConfig,\n                    path: modelURL,\n                });\n            }\n            const nodeOptions = {\n                processor,\n                worker,\n                audioBufferURL,\n                resamplerURL,\n                fetchBehavior: fetchConfig,\n                modelURL,\n                delegate,\n            };\n            const factory = new VoiceFocus(worker, processorURL, node, nodeOptions, executionQuanta);\n            return Promise.resolve(factory);\n        });\n    }\n    createNode(context, options) {\n        var _a;\n        const { voiceFocusSampleRate = (context.sampleRate === 16000 ? 16000 : 48000), enabled = true, agc = DEFAULT_AGC_SETTING, } = options || {};\n        const processorOptions = {\n            voiceFocusSampleRate,\n            enabled,\n            sendBufferCount: 10,\n            prefill: 6,\n            agc,\n            executionQuanta: this.executionQuanta,\n        };\n        const url = fetch_js_1.withQueryString(this.processorURL, (_a = this.nodeOptions) === null || _a === void 0 ? void 0 : _a.fetchBehavior);\n        return context.audioWorklet\n            .addModule(url)\n            .then(() => new (this.nodeConstructor)(context, Object.assign(Object.assign({}, this.nodeOptions), { processorOptions })));\n    }\n    applyToStream(stream, context, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const source = context.createMediaStreamSource(stream);\n            const node = yield this.applyToSourceNode(source, context, options);\n            const destination = context.createMediaStreamDestination();\n            node.connect(destination);\n            return {\n                node,\n                source,\n                destination,\n                stream: destination.stream,\n            };\n        });\n    }\n    applyToSourceNode(source, context, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const node = yield this.createNode(context, options);\n            source.connect(node);\n            return node;\n        });\n    }\n}\nexports.VoiceFocus = VoiceFocus;\nconst createAudioContext = (contextHint = DEFAULT_CONTEXT_HINT) => {\n    return new (window.AudioContext || window.webkitAudioContext)(contextHint);\n};\nexports.createAudioContext = createAudioContext;\nconst getAudioInput = (context, inputOptions, voiceFocusOptions) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b;\n    const { constraints, spec, delegate, preload = true, options } = inputOptions;\n    const { logger } = voiceFocusOptions;\n    const config = yield VoiceFocus.configure(spec, voiceFocusOptions);\n    if (!config.supported) {\n        (_a = voiceFocusOptions.logger) === null || _a === void 0 ? void 0 : _a.warn('Voice Focus not supported; returning standard stream.');\n        return window.navigator.mediaDevices.getUserMedia(constraints);\n    }\n    const factory = yield VoiceFocus.init(config, { delegate, preload, logger });\n    const agc = ((_b = inputOptions.options) === null || _b === void 0 ? void 0 : _b.agc) || DEFAULT_AGC_SETTING;\n    const input = yield window.navigator.mediaDevices.getUserMedia(mungeConstraints(constraints, agc));\n    return factory.applyToStream(input, context, options).then(result => result.stream);\n});\nexports.getAudioInput = getAudioInput;\n"]},"metadata":{},"sourceType":"script"}