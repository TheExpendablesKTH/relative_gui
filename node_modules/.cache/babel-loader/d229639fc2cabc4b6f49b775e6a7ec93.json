{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst support_js_1 = require(\"./support.js\");\n\nconst types_js_1 = require(\"./types.js\");\n\nclass VoiceFocusInlineNode extends types_js_1.VoiceFocusAudioWorkletNode {\n  constructor(context, options) {\n    super(context, options.processor, options);\n    const {\n      modelURL,\n      worker,\n      fetchBehavior,\n      logger\n    } = options;\n    this.logger = logger;\n    this.port.onmessage = this.onProcessorMessage.bind(this);\n    if (logger) logger.debug('VoiceFocusInlineNode:', modelURL);\n    this.worker = worker;\n    this.worker.onmessage = this.onWorkerMessage.bind(this);\n    const message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n    this.worker.postMessage({\n      message,\n      key: 'model',\n      fetchBehavior,\n      path: modelURL\n    });\n  }\n\n  onModuleBufferLoaded(buffer, key) {\n    this.port.postMessage({\n      message: 'module-buffer',\n      buffer,\n      key\n    });\n  }\n\n  onModuleLoaded(module, key) {\n    this.port.postMessage({\n      message: 'module',\n      module,\n      key\n    });\n  }\n\n  enable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.port.postMessage({\n        message: 'enable'\n      });\n    });\n  }\n\n  disable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.port.postMessage({\n        message: 'disable'\n      });\n    });\n  }\n\n  stop() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.port.postMessage({\n        message: 'stop'\n      });\n      this.disconnect();\n    });\n  }\n\n  onProcessorMessage(event) {\n    var _a;\n\n    const data = event.data;\n\n    switch (data.message) {\n      case 'cpu':\n        break;\n\n      default:\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('Ignoring processor message.');\n    }\n  }\n\n  onWorkerMessage(event) {\n    const data = event.data;\n\n    switch (data.message) {\n      case 'module-buffer':\n        if (!data.buffer || !data.key) {\n          return;\n        }\n\n        this.onModuleBufferLoaded(data.buffer, data.key);\n        break;\n\n      case 'module':\n        if (!data.module || !data.key) {\n          return;\n        }\n\n        this.onModuleLoaded(data.module, data.key);\n        break;\n\n      case 'stopped':\n        if (this.worker) {\n          this.worker.terminate();\n        }\n\n        break;\n\n      default:\n        return;\n    }\n  }\n\n}\n\nexports.default = VoiceFocusInlineNode;","map":{"version":3,"sources":["/Users/torarvill/Documents/Pip/relative_gui/relative_ui/node_modules/amazon-chime-sdk-js/libs/voicefocus/worklet-inline-node.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","support_js_1","require","types_js_1","VoiceFocusInlineNode","VoiceFocusAudioWorkletNode","constructor","context","options","processor","modelURL","worker","fetchBehavior","logger","port","onmessage","onProcessorMessage","bind","debug","onWorkerMessage","message","supportsWASMPostMessage","globalThis","postMessage","key","path","onModuleBufferLoaded","buffer","onModuleLoaded","module","enable","disable","stop","disconnect","event","_a","data","terminate","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst support_js_1 = require(\"./support.js\");\nconst types_js_1 = require(\"./types.js\");\nclass VoiceFocusInlineNode extends types_js_1.VoiceFocusAudioWorkletNode {\n    constructor(context, options) {\n        super(context, options.processor, options);\n        const { modelURL, worker, fetchBehavior, logger, } = options;\n        this.logger = logger;\n        this.port.onmessage = this.onProcessorMessage.bind(this);\n        if (logger)\n            logger.debug('VoiceFocusInlineNode:', modelURL);\n        this.worker = worker;\n        this.worker.onmessage = this.onWorkerMessage.bind(this);\n        const message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n        this.worker.postMessage({\n            message,\n            key: 'model',\n            fetchBehavior,\n            path: modelURL,\n        });\n    }\n    onModuleBufferLoaded(buffer, key) {\n        this.port.postMessage({ message: 'module-buffer', buffer, key });\n    }\n    onModuleLoaded(module, key) {\n        this.port.postMessage({ message: 'module', module, key });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port.postMessage({ message: 'enable' });\n        });\n    }\n    disable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port.postMessage({ message: 'disable' });\n        });\n    }\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port.postMessage({ message: 'stop' });\n            this.disconnect();\n        });\n    }\n    onProcessorMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'cpu':\n                break;\n            default:\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('Ignoring processor message.');\n        }\n    }\n    onWorkerMessage(event) {\n        const data = event.data;\n        switch (data.message) {\n            case 'module-buffer':\n                if (!data.buffer || !data.key) {\n                    return;\n                }\n                this.onModuleBufferLoaded(data.buffer, data.key);\n                break;\n            case 'module':\n                if (!data.module || !data.key) {\n                    return;\n                }\n                this.onModuleLoaded(data.module, data.key);\n                break;\n            case 'stopped':\n                if (this.worker) {\n                    this.worker.terminate();\n                }\n                break;\n            default:\n                return;\n        }\n    }\n}\nexports.default = VoiceFocusInlineNode;\n"]},"metadata":{},"sourceType":"script"}