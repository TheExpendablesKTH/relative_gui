{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst DefaultAudioVideoController_1 = require(\"../audiovideocontroller/DefaultAudioVideoController\");\n\nconst DefaultAudioVideoFacade_1 = require(\"../audiovideofacade/DefaultAudioVideoFacade\");\n\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\n\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nconst ContentShareMediaStreamBroker_1 = require(\"../contentsharecontroller/ContentShareMediaStreamBroker\");\n\nconst DefaultContentShareController_1 = require(\"../contentsharecontroller/DefaultContentShareController\");\n\nconst Destroyable_1 = require(\"../destroyable/Destroyable\");\n\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\n\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\n\nclass DefaultMeetingSession {\n  constructor(configuration, logger, deviceController) {\n    this._configuration = configuration;\n    this._logger = logger;\n    this.checkBrowserSupportAndFeatureConfiguration();\n    this._deviceController = deviceController;\n    this.audioVideoController = new DefaultAudioVideoController_1.default(this._configuration, this._logger, new DefaultWebSocketAdapter_1.default(this._logger), deviceController, new DefaultReconnectController_1.default(DefaultMeetingSession.RECONNECT_TIMEOUT_MS, new FullJitterBackoff_1.default(DefaultMeetingSession.RECONNECT_FIXED_WAIT_MS, DefaultMeetingSession.RECONNECT_SHORT_BACKOFF_MS, DefaultMeetingSession.RECONNECT_LONG_BACKOFF_MS)));\n    deviceController.bindToAudioVideoController(this.audioVideoController);\n    const contentShareMediaStreamBroker = new ContentShareMediaStreamBroker_1.default(this._logger);\n    this.contentShareController = new DefaultContentShareController_1.default(contentShareMediaStreamBroker, new DefaultAudioVideoController_1.default(DefaultContentShareController_1.default.createContentShareMeetingSessionConfigure(this._configuration), this._logger, new DefaultWebSocketAdapter_1.default(this._logger), contentShareMediaStreamBroker, new DefaultReconnectController_1.default(DefaultMeetingSession.RECONNECT_TIMEOUT_MS, new FullJitterBackoff_1.default(DefaultMeetingSession.RECONNECT_FIXED_WAIT_MS, DefaultMeetingSession.RECONNECT_SHORT_BACKOFF_MS, DefaultMeetingSession.RECONNECT_LONG_BACKOFF_MS))), this.audioVideoController);\n    this.audioVideoFacade = new DefaultAudioVideoFacade_1.default(this.audioVideoController, this.audioVideoController.videoTileController, this.audioVideoController.realtimeController, this.audioVideoController.audioMixController, this._deviceController, this.contentShareController);\n  }\n\n  get configuration() {\n    return this._configuration;\n  }\n\n  get logger() {\n    return this._logger;\n  }\n\n  get audioVideo() {\n    return this.audioVideoFacade;\n  }\n\n  get contentShare() {\n    return this.contentShareController;\n  }\n\n  get deviceController() {\n    return this._deviceController;\n  }\n  /**\n   * Clean up this instance and resources that it created.\n   *\n   * After calling `destroy`, internal fields like `audioVideoController` will be unavailable.\n   */\n\n\n  destroy() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (Destroyable_1.isDestroyable(this.contentShareController)) {\n        yield this.contentShareController.destroy();\n      }\n\n      if (Destroyable_1.isDestroyable(this.audioVideoController)) {\n        yield this.audioVideoController.destroy();\n      }\n\n      this._logger = undefined;\n      this._configuration = undefined;\n      this._deviceController = undefined;\n      this.audioVideoFacade = undefined;\n      this.audioVideoController = undefined;\n      this.contentShareController = undefined;\n    });\n  }\n\n  checkBrowserSupportAndFeatureConfiguration() {\n    const browserBehavior = new DefaultBrowserBehavior_1.default();\n    const browser = `${browserBehavior.name()} ${browserBehavior.majorVersion()} (${browserBehavior.version()})`;\n    this.logger.info(`browser is ${browser}`);\n\n    if (!browserBehavior.isSupported()) {\n      this.logger.warn('this browser is not currently supported. ' + 'Stability may suffer. ' + `Supported browsers are: ${browserBehavior.supportString()}.`);\n    }\n\n    if (this._configuration.enableUnifiedPlanForChromiumBasedBrowsers) {\n      if (browserBehavior.hasChromiumWebRTC()) {\n        this.logger.info('WebRTC unified plan for Chromium-based browsers is enabled');\n      } else {\n        this.logger.info(`WebRTC unified plan is required for ${browserBehavior.name()}`);\n      }\n    }\n\n    if (this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers) {\n      if (!this._configuration.enableUnifiedPlanForChromiumBasedBrowsers) {\n        this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n        this.logger.info('Simulcast requires enabling WebRTC Unified Plan for Chromium-based browsers');\n      } else if (browserBehavior.hasChromiumWebRTC()) {\n        this.logger.info(`Simulcast is enabled for ${browserBehavior.name()}`);\n      } else {\n        this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n        this.logger.info('Simulcast requires WebRTC Unified Plan and is only supported on Chromium-based browsers');\n      }\n    }\n  }\n\n}\n\nexports.default = DefaultMeetingSession;\nDefaultMeetingSession.RECONNECT_TIMEOUT_MS = 120 * 1000;\nDefaultMeetingSession.RECONNECT_FIXED_WAIT_MS = 0;\nDefaultMeetingSession.RECONNECT_SHORT_BACKOFF_MS = 1 * 1000;\nDefaultMeetingSession.RECONNECT_LONG_BACKOFF_MS = 5 * 1000;","map":{"version":3,"sources":["../../src/meetingsession/DefaultMeetingSession.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAA,6BAAA,GAAA,OAAA,CAAA,qDAAA,CAAA;;AAEA,MAAA,yBAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;;AACA,MAAA,mBAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;;AACA,MAAA,wBAAA,GAAA,OAAA,CAAA,2CAAA,CAAA;;AAEA,MAAA,+BAAA,GAAA,OAAA,CAAA,yDAAA,CAAA;;AACA,MAAA,+BAAA,GAAA,OAAA,CAAA,yDAAA,CAAA;;AACA,MAAA,aAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAIA,MAAA,4BAAA,GAAA,OAAA,CAAA,mDAAA,CAAA;;AACA,MAAA,yBAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;;AAIA,MAAqB,qBAArB,CAA0C;AAaxC,EAAA,WAAA,CACE,aADF,EAEE,MAFF,EAGE,gBAHF,EAG0D;AAExD,SAAK,cAAL,GAAsB,aAAtB;AACA,SAAK,OAAL,GAAe,MAAf;AAEA,SAAK,0CAAL;AAEA,SAAK,iBAAL,GAAyB,gBAAzB;AACA,SAAK,oBAAL,GAA4B,IAAI,6BAAA,CAAA,OAAJ,CAC1B,KAAK,cADqB,EAE1B,KAAK,OAFqB,EAG1B,IAAI,yBAAA,CAAA,OAAJ,CAA4B,KAAK,OAAjC,CAH0B,EAI1B,gBAJ0B,EAK1B,IAAI,4BAAA,CAAA,OAAJ,CACE,qBAAqB,CAAC,oBADxB,EAEE,IAAI,mBAAA,CAAA,OAAJ,CACE,qBAAqB,CAAC,uBADxB,EAEE,qBAAqB,CAAC,0BAFxB,EAGE,qBAAqB,CAAC,yBAHxB,CAFF,CAL0B,CAA5B;AAcA,IAAA,gBAAgB,CAAC,0BAAjB,CAA4C,KAAK,oBAAjD;AACA,UAAM,6BAA6B,GAAG,IAAI,+BAAA,CAAA,OAAJ,CAAkC,KAAK,OAAvC,CAAtC;AACA,SAAK,sBAAL,GAA8B,IAAI,+BAAA,CAAA,OAAJ,CAC5B,6BAD4B,EAE5B,IAAI,6BAAA,CAAA,OAAJ,CACE,+BAAA,CAAA,OAAA,CAA8B,yCAA9B,CACE,KAAK,cADP,CADF,EAIE,KAAK,OAJP,EAKE,IAAI,yBAAA,CAAA,OAAJ,CAA4B,KAAK,OAAjC,CALF,EAME,6BANF,EAOE,IAAI,4BAAA,CAAA,OAAJ,CACE,qBAAqB,CAAC,oBADxB,EAEE,IAAI,mBAAA,CAAA,OAAJ,CACE,qBAAqB,CAAC,uBADxB,EAEE,qBAAqB,CAAC,0BAFxB,EAGE,qBAAqB,CAAC,yBAHxB,CAFF,CAPF,CAF4B,EAkB5B,KAAK,oBAlBuB,CAA9B;AAoBA,SAAK,gBAAL,GAAwB,IAAI,yBAAA,CAAA,OAAJ,CACtB,KAAK,oBADiB,EAEtB,KAAK,oBAAL,CAA0B,mBAFJ,EAGtB,KAAK,oBAAL,CAA0B,kBAHJ,EAItB,KAAK,oBAAL,CAA0B,kBAJJ,EAKtB,KAAK,iBALiB,EAMtB,KAAK,sBANiB,CAAxB;AAQD;;AAEgB,MAAb,aAAa,GAAA;AACf,WAAO,KAAK,cAAZ;AACD;;AAES,MAAN,MAAM,GAAA;AACR,WAAO,KAAK,OAAZ;AACD;;AAEa,MAAV,UAAU,GAAA;AACZ,WAAO,KAAK,gBAAZ;AACD;;AAEe,MAAZ,YAAY,GAAA;AACd,WAAO,KAAK,sBAAZ;AACD;;AAEmB,MAAhB,gBAAgB,GAAA;AAClB,WAAO,KAAK,iBAAZ;AACD;AAED;;;;AAIG;;;AACG,EAAA,OAAO,GAAA;;AACX,UAAI,aAAA,CAAA,aAAA,CAAc,KAAK,sBAAnB,CAAJ,EAAgD;AAC9C,cAAM,KAAK,sBAAL,CAA4B,OAA5B,EAAN;AACD;;AACD,UAAI,aAAA,CAAA,aAAA,CAAc,KAAK,oBAAnB,CAAJ,EAA8C;AAC5C,cAAM,KAAK,oBAAL,CAA0B,OAA1B,EAAN;AACD;;AAED,WAAK,OAAL,GAAe,SAAf;AACA,WAAK,cAAL,GAAsB,SAAtB;AACA,WAAK,iBAAL,GAAyB,SAAzB;AACA,WAAK,gBAAL,GAAwB,SAAxB;AACA,WAAK,oBAAL,GAA4B,SAA5B;AACA,WAAK,sBAAL,GAA8B,SAA9B;AACD,K;AAAA;;AAEO,EAAA,0CAA0C,GAAA;AAChD,UAAM,eAAe,GAAG,IAAI,wBAAA,CAAA,OAAJ,EAAxB;AACA,UAAM,OAAO,GAAG,GAAG,eAAe,CAAC,IAAhB,EAAsB,IAAI,eAAe,CAAC,YAAhB,EAA8B,KAAK,eAAe,CAAC,OAAhB,EAAyB,GAAzG;AACA,SAAK,MAAL,CAAY,IAAZ,CAAiB,cAAc,OAAO,EAAtC;;AACA,QAAI,CAAC,eAAe,CAAC,WAAhB,EAAL,EAAoC;AAClC,WAAK,MAAL,CAAY,IAAZ,CACE,8CACE,wBADF,GAEE,2BAA2B,eAAe,CAAC,aAAhB,EAA+B,GAH9D;AAKD;;AAED,QAAI,KAAK,cAAL,CAAoB,yCAAxB,EAAmE;AACjE,UAAI,eAAe,CAAC,iBAAhB,EAAJ,EAAyC;AACvC,aAAK,MAAL,CAAY,IAAZ,CAAiB,4DAAjB;AACD,OAFD,MAEO;AACL,aAAK,MAAL,CAAY,IAAZ,CAAiB,uCAAuC,eAAe,CAAC,IAAhB,EAAsB,EAA9E;AACD;AACF;;AAED,QAAI,KAAK,cAAL,CAAoB,kDAAxB,EAA4E;AAC1E,UAAI,CAAC,KAAK,cAAL,CAAoB,yCAAzB,EAAoE;AAClE,aAAK,cAAL,CAAoB,kDAApB,GAAyE,KAAzE;AACA,aAAK,MAAL,CAAY,IAAZ,CACE,6EADF;AAGD,OALD,MAKO,IAAI,eAAe,CAAC,iBAAhB,EAAJ,EAAyC;AAC9C,aAAK,MAAL,CAAY,IAAZ,CAAiB,4BAA4B,eAAe,CAAC,IAAhB,EAAsB,EAAnE;AACD,OAFM,MAEA;AACL,aAAK,cAAL,CAAoB,kDAApB,GAAyE,KAAzE;AACA,aAAK,MAAL,CAAY,IAAZ,CACE,yFADF;AAGD;AACF;AACF;;AAlJuC;;AAA1C,OAAA,CAAA,OAAA,GAAA,qBAAA;AAQiB,qBAAA,CAAA,oBAAA,GAAuB,MAAM,IAA7B;AACA,qBAAA,CAAA,uBAAA,GAA0B,CAA1B;AACA,qBAAA,CAAA,0BAAA,GAA6B,IAAI,IAAjC;AACA,qBAAA,CAAA,yBAAA,GAA4B,IAAI,IAAhC","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultAudioVideoController_1 = require(\"../audiovideocontroller/DefaultAudioVideoController\");\nconst DefaultAudioVideoFacade_1 = require(\"../audiovideofacade/DefaultAudioVideoFacade\");\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst ContentShareMediaStreamBroker_1 = require(\"../contentsharecontroller/ContentShareMediaStreamBroker\");\nconst DefaultContentShareController_1 = require(\"../contentsharecontroller/DefaultContentShareController\");\nconst Destroyable_1 = require(\"../destroyable/Destroyable\");\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\nclass DefaultMeetingSession {\n    constructor(configuration, logger, deviceController) {\n        this._configuration = configuration;\n        this._logger = logger;\n        this.checkBrowserSupportAndFeatureConfiguration();\n        this._deviceController = deviceController;\n        this.audioVideoController = new DefaultAudioVideoController_1.default(this._configuration, this._logger, new DefaultWebSocketAdapter_1.default(this._logger), deviceController, new DefaultReconnectController_1.default(DefaultMeetingSession.RECONNECT_TIMEOUT_MS, new FullJitterBackoff_1.default(DefaultMeetingSession.RECONNECT_FIXED_WAIT_MS, DefaultMeetingSession.RECONNECT_SHORT_BACKOFF_MS, DefaultMeetingSession.RECONNECT_LONG_BACKOFF_MS)));\n        deviceController.bindToAudioVideoController(this.audioVideoController);\n        const contentShareMediaStreamBroker = new ContentShareMediaStreamBroker_1.default(this._logger);\n        this.contentShareController = new DefaultContentShareController_1.default(contentShareMediaStreamBroker, new DefaultAudioVideoController_1.default(DefaultContentShareController_1.default.createContentShareMeetingSessionConfigure(this._configuration), this._logger, new DefaultWebSocketAdapter_1.default(this._logger), contentShareMediaStreamBroker, new DefaultReconnectController_1.default(DefaultMeetingSession.RECONNECT_TIMEOUT_MS, new FullJitterBackoff_1.default(DefaultMeetingSession.RECONNECT_FIXED_WAIT_MS, DefaultMeetingSession.RECONNECT_SHORT_BACKOFF_MS, DefaultMeetingSession.RECONNECT_LONG_BACKOFF_MS))), this.audioVideoController);\n        this.audioVideoFacade = new DefaultAudioVideoFacade_1.default(this.audioVideoController, this.audioVideoController.videoTileController, this.audioVideoController.realtimeController, this.audioVideoController.audioMixController, this._deviceController, this.contentShareController);\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    get logger() {\n        return this._logger;\n    }\n    get audioVideo() {\n        return this.audioVideoFacade;\n    }\n    get contentShare() {\n        return this.contentShareController;\n    }\n    get deviceController() {\n        return this._deviceController;\n    }\n    /**\n     * Clean up this instance and resources that it created.\n     *\n     * After calling `destroy`, internal fields like `audioVideoController` will be unavailable.\n     */\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Destroyable_1.isDestroyable(this.contentShareController)) {\n                yield this.contentShareController.destroy();\n            }\n            if (Destroyable_1.isDestroyable(this.audioVideoController)) {\n                yield this.audioVideoController.destroy();\n            }\n            this._logger = undefined;\n            this._configuration = undefined;\n            this._deviceController = undefined;\n            this.audioVideoFacade = undefined;\n            this.audioVideoController = undefined;\n            this.contentShareController = undefined;\n        });\n    }\n    checkBrowserSupportAndFeatureConfiguration() {\n        const browserBehavior = new DefaultBrowserBehavior_1.default();\n        const browser = `${browserBehavior.name()} ${browserBehavior.majorVersion()} (${browserBehavior.version()})`;\n        this.logger.info(`browser is ${browser}`);\n        if (!browserBehavior.isSupported()) {\n            this.logger.warn('this browser is not currently supported. ' +\n                'Stability may suffer. ' +\n                `Supported browsers are: ${browserBehavior.supportString()}.`);\n        }\n        if (this._configuration.enableUnifiedPlanForChromiumBasedBrowsers) {\n            if (browserBehavior.hasChromiumWebRTC()) {\n                this.logger.info('WebRTC unified plan for Chromium-based browsers is enabled');\n            }\n            else {\n                this.logger.info(`WebRTC unified plan is required for ${browserBehavior.name()}`);\n            }\n        }\n        if (this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers) {\n            if (!this._configuration.enableUnifiedPlanForChromiumBasedBrowsers) {\n                this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n                this.logger.info('Simulcast requires enabling WebRTC Unified Plan for Chromium-based browsers');\n            }\n            else if (browserBehavior.hasChromiumWebRTC()) {\n                this.logger.info(`Simulcast is enabled for ${browserBehavior.name()}`);\n            }\n            else {\n                this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n                this.logger.info('Simulcast requires WebRTC Unified Plan and is only supported on Chromium-based browsers');\n            }\n        }\n    }\n}\nexports.default = DefaultMeetingSession;\nDefaultMeetingSession.RECONNECT_TIMEOUT_MS = 120 * 1000;\nDefaultMeetingSession.RECONNECT_FIXED_WAIT_MS = 0;\nDefaultMeetingSession.RECONNECT_SHORT_BACKOFF_MS = 1 * 1000;\nDefaultMeetingSession.RECONNECT_LONG_BACKOFF_MS = 5 * 1000;\n//# sourceMappingURL=DefaultMeetingSession.js.map"]},"metadata":{},"sourceType":"script"}