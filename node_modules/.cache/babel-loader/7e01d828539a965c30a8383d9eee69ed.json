{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\n/**\n * [[AllHighestVideoBandwidthPolicy]] implements is a rudimentary policy that simply\n * always subscribes to the highest quality video stream available\n * for all non-self participants.\n */\n\n\nclass AllHighestVideoBandwidthPolicy {\n  constructor(selfAttendeeId) {\n    this.selfAttendeeId = selfAttendeeId;\n    this.reset();\n  }\n\n  reset() {\n    this.optimalReceiveSet = new DefaultVideoStreamIdSet_1.default();\n    this.subscribedReceiveSet = new DefaultVideoStreamIdSet_1.default();\n  }\n\n  updateIndex(videoIndex) {\n    this.optimalReceiveSet = this.calculateOptimalReceiveSet(videoIndex);\n  }\n\n  updateMetrics(_clientMetricReport) {}\n\n  wantsResubscribe() {\n    return !this.subscribedReceiveSet.equal(this.optimalReceiveSet);\n  }\n\n  chooseSubscriptions() {\n    this.subscribedReceiveSet = this.optimalReceiveSet.clone();\n    return this.subscribedReceiveSet.clone();\n  }\n\n  calculateOptimalReceiveSet(videoIndex) {\n    return videoIndex.highestQualityStreamFromEachGroupExcludingSelf(this.selfAttendeeId);\n  }\n\n}\n\nexports.default = AllHighestVideoBandwidthPolicy;","map":{"version":3,"sources":["../../src/videodownlinkbandwidthpolicy/AllHighestVideoBandwidthPolicy.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAGA,MAAA,yBAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;AAKA;;;;AAIG;;;AACH,MAAqB,8BAArB,CAAmD;AAIjD,EAAA,WAAA,CAAoB,cAApB,EAA0C;AAAtB,SAAA,cAAA,GAAA,cAAA;AAClB,SAAK,KAAL;AACD;;AAED,EAAA,KAAK,GAAA;AACH,SAAK,iBAAL,GAAyB,IAAI,yBAAA,CAAA,OAAJ,EAAzB;AACA,SAAK,oBAAL,GAA4B,IAAI,yBAAA,CAAA,OAAJ,EAA5B;AACD;;AAED,EAAA,WAAW,CAAC,UAAD,EAA6B;AACtC,SAAK,iBAAL,GAAyB,KAAK,0BAAL,CAAgC,UAAhC,CAAzB;AACD;;AAED,EAAA,aAAa,CAAC,mBAAD,EAAwC,CAAU;;AAE/D,EAAA,gBAAgB,GAAA;AACd,WAAO,CAAC,KAAK,oBAAL,CAA0B,KAA1B,CAAgC,KAAK,iBAArC,CAAR;AACD;;AAED,EAAA,mBAAmB,GAAA;AACjB,SAAK,oBAAL,GAA4B,KAAK,iBAAL,CAAuB,KAAvB,EAA5B;AACA,WAAO,KAAK,oBAAL,CAA0B,KAA1B,EAAP;AACD;;AAEO,EAAA,0BAA0B,CAAC,UAAD,EAA6B;AAC7D,WAAO,UAAU,CAAC,8CAAX,CAA0D,KAAK,cAA/D,CAAP;AACD;;AA9BgD;;AAAnD,OAAA,CAAA,OAAA,GAAA,8BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\n/**\n * [[AllHighestVideoBandwidthPolicy]] implements is a rudimentary policy that simply\n * always subscribes to the highest quality video stream available\n * for all non-self participants.\n */\nclass AllHighestVideoBandwidthPolicy {\n    constructor(selfAttendeeId) {\n        this.selfAttendeeId = selfAttendeeId;\n        this.reset();\n    }\n    reset() {\n        this.optimalReceiveSet = new DefaultVideoStreamIdSet_1.default();\n        this.subscribedReceiveSet = new DefaultVideoStreamIdSet_1.default();\n    }\n    updateIndex(videoIndex) {\n        this.optimalReceiveSet = this.calculateOptimalReceiveSet(videoIndex);\n    }\n    updateMetrics(_clientMetricReport) { }\n    wantsResubscribe() {\n        return !this.subscribedReceiveSet.equal(this.optimalReceiveSet);\n    }\n    chooseSubscriptions() {\n        this.subscribedReceiveSet = this.optimalReceiveSet.clone();\n        return this.subscribedReceiveSet.clone();\n    }\n    calculateOptimalReceiveSet(videoIndex) {\n        return videoIndex.highestQualityStreamFromEachGroupExcludingSelf(this.selfAttendeeId);\n    }\n}\nexports.default = AllHighestVideoBandwidthPolicy;\n//# sourceMappingURL=AllHighestVideoBandwidthPolicy.js.map"]},"metadata":{},"sourceType":"script"}