{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst LogLevel_1 = require(\"./LogLevel\");\n/**\n * [[NoOpLogger]] does not log any message.\n */\n\n\nclass NoOpLogger {\n  constructor(level = LogLevel_1.default.OFF) {\n    this.level = level;\n  }\n\n  info(_msg) {}\n\n  warn(_msg) {}\n\n  error(_msg) {}\n\n  debug(debugFunction) {\n    if (LogLevel_1.default.DEBUG < this.level) {\n      return;\n    }\n\n    if (typeof debugFunction !== 'string') {\n      debugFunction();\n    }\n  }\n\n  setLogLevel(level) {\n    this.level = level;\n  }\n\n  getLogLevel() {\n    return this.level;\n  }\n\n}\n\nexports.default = NoOpLogger;","map":{"version":3,"sources":["../../src/logger/NoOpLogger.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAGA,MAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AAEA;;AAEG;;;AACH,MAAqB,UAArB,CAA+B;AAG7B,EAAA,WAAA,CAAY,KAAK,GAAG,UAAA,CAAA,OAAA,CAAS,GAA7B,EAAgC;AAC9B,SAAK,KAAL,GAAa,KAAb;AACD;;AAED,EAAA,IAAI,CAAC,IAAD,EAAa,CAAU;;AAE3B,EAAA,IAAI,CAAC,IAAD,EAAa,CAAU;;AAE3B,EAAA,KAAK,CAAC,IAAD,EAAa,CAAU;;AAE5B,EAAA,KAAK,CAAC,aAAD,EAAuC;AAC1C,QAAI,UAAA,CAAA,OAAA,CAAS,KAAT,GAAiB,KAAK,KAA1B,EAAiC;AAC/B;AACD;;AACD,QAAI,OAAO,aAAP,KAAyB,QAA7B,EAAuC;AACrC,MAAA,aAAa;AACd;AACF;;AAED,EAAA,WAAW,CAAC,KAAD,EAAgB;AACzB,SAAK,KAAL,GAAa,KAAb;AACD;;AAED,EAAA,WAAW,GAAA;AACT,WAAO,KAAK,KAAZ;AACD;;AA5B4B;;AAA/B,OAAA,CAAA,OAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"./LogLevel\");\n/**\n * [[NoOpLogger]] does not log any message.\n */\nclass NoOpLogger {\n    constructor(level = LogLevel_1.default.OFF) {\n        this.level = level;\n    }\n    info(_msg) { }\n    warn(_msg) { }\n    error(_msg) { }\n    debug(debugFunction) {\n        if (LogLevel_1.default.DEBUG < this.level) {\n            return;\n        }\n        if (typeof debugFunction !== 'string') {\n            debugFunction();\n        }\n    }\n    setLogLevel(level) {\n        this.level = level;\n    }\n    getLogLevel() {\n        return this.level;\n    }\n}\nexports.default = NoOpLogger;\n//# sourceMappingURL=NoOpLogger.js.map"]},"metadata":{},"sourceType":"script"}