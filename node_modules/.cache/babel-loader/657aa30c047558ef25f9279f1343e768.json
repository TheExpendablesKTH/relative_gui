{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * [[MeetingSessionURLs]] contains the URLs that will be used to reach the\n * meeting service.\n */\n\nclass MeetingSessionURLs {\n  constructor() {\n    /**\n     * The audio host URL of the session\n     */\n    this._audioHostURL = null;\n    /**\n     * The screen data URL of the session\n     */\n\n    this._screenDataURL = null;\n    /**\n     * The screen sharing URL of the session\n     */\n\n    this._screenSharingURL = null;\n    /**\n     * The screen viewing URL of the session\n     */\n\n    this._screenViewingURL = null;\n    /**\n     * The signaling URL of the session\n     */\n\n    this._signalingURL = null;\n    /**\n     * The TURN control URL of the session\n     */\n\n    this._turnControlURL = null;\n    /**\n     * Function to transform URLs. Use this to rewrite URLs to traverse proxies.\n     * The default implementation returns the original URL unchanged.\n     */\n\n    this.urlRewriter = url => {\n      return url;\n    };\n  }\n  /**\n   * Gets the audio host URL after applying the urlRewriter function.\n   */\n\n\n  get audioHostURL() {\n    return this.urlRewriter(this._audioHostURL);\n  }\n  /**\n   * Sets the raw audio host URL.\n   */\n\n\n  set audioHostURL(value) {\n    this._audioHostURL = value;\n  }\n  /**\n   * Gets the screen data URL after applying the urlRewriter function.\n   */\n\n\n  get screenDataURL() {\n    return this.urlRewriter(this._screenDataURL);\n  }\n  /**\n   * Sets the raw screen data URL.\n   */\n\n\n  set screenDataURL(value) {\n    this._screenDataURL = value;\n  }\n  /**\n   * Gets the screen sharing URL after applying the urlRewriter function.\n   */\n\n\n  get screenSharingURL() {\n    return this.urlRewriter(this._screenSharingURL);\n  }\n  /**\n   * Sets the raw screen sharing URL.\n   */\n\n\n  set screenSharingURL(value) {\n    this._screenSharingURL = value;\n  }\n  /**\n   * Gets the screen viewing URL after applying the urlRewriter function.\n   */\n\n\n  get screenViewingURL() {\n    return this.urlRewriter(this._screenViewingURL);\n  }\n  /**\n   * Sets the raw screen viewing URL.\n   */\n\n\n  set screenViewingURL(value) {\n    this._screenViewingURL = value;\n  }\n  /**\n   * Gets the signaling URL after applying the urlRewriter function.\n   */\n\n\n  get signalingURL() {\n    return this.urlRewriter(this._signalingURL);\n  }\n  /**\n   * Sets the raw signaling URL.\n   */\n\n\n  set signalingURL(value) {\n    this._signalingURL = value;\n  }\n  /**\n   * Gets the TURN control URL after applying the urlRewriter function.\n   */\n\n\n  get turnControlURL() {\n    return this.urlRewriter(this._turnControlURL);\n  }\n  /**\n   * Sets the raw TURN control URL.\n   */\n\n\n  set turnControlURL(value) {\n    this._turnControlURL = value;\n  }\n\n}\n\nexports.default = MeetingSessionURLs;","map":{"version":3,"sources":["../../src/meetingsession/MeetingSessionURLs.ts"],"names":[],"mappings":"cAAA;AACA;;;;;AAEA;;;AAGG;;AACH,MAAqB,kBAArB,CAAuC;AAAvC,EAAA,WAAA,GAAA;AACE;;AAEG;AACK,SAAA,aAAA,GAA+B,IAA/B;AAER;;AAEG;;AACK,SAAA,cAAA,GAAgC,IAAhC;AAER;;AAEG;;AACK,SAAA,iBAAA,GAAmC,IAAnC;AAER;;AAEG;;AACK,SAAA,iBAAA,GAAmC,IAAnC;AAER;;AAEG;;AACK,SAAA,aAAA,GAA+B,IAA/B;AAER;;AAEG;;AACK,SAAA,eAAA,GAAiC,IAAjC;AAsFR;;;AAGG;;AACH,SAAA,WAAA,GAAsD,GAAD,IAAuB;AAC1E,aAAO,GAAP;AACD,KAFD;AAGD;AA3FC;;AAEG;;;AACa,MAAZ,YAAY,GAAA;AACd,WAAO,KAAK,WAAL,CAAiB,KAAK,aAAtB,CAAP;AACD;AAED;;AAEG;;;AACa,MAAZ,YAAY,CAAC,KAAD,EAAqB;AACnC,SAAK,aAAL,GAAqB,KAArB;AACD;AAED;;AAEG;;;AACc,MAAb,aAAa,GAAA;AACf,WAAO,KAAK,WAAL,CAAiB,KAAK,cAAtB,CAAP;AACD;AAED;;AAEG;;;AACc,MAAb,aAAa,CAAC,KAAD,EAAqB;AACpC,SAAK,cAAL,GAAsB,KAAtB;AACD;AAED;;AAEG;;;AACiB,MAAhB,gBAAgB,GAAA;AAClB,WAAO,KAAK,WAAL,CAAiB,KAAK,iBAAtB,CAAP;AACD;AAED;;AAEG;;;AACiB,MAAhB,gBAAgB,CAAC,KAAD,EAAqB;AACvC,SAAK,iBAAL,GAAyB,KAAzB;AACD;AAED;;AAEG;;;AACiB,MAAhB,gBAAgB,GAAA;AAClB,WAAO,KAAK,WAAL,CAAiB,KAAK,iBAAtB,CAAP;AACD;AAED;;AAEG;;;AACiB,MAAhB,gBAAgB,CAAC,KAAD,EAAqB;AACvC,SAAK,iBAAL,GAAyB,KAAzB;AACD;AAED;;AAEG;;;AACa,MAAZ,YAAY,GAAA;AACd,WAAO,KAAK,WAAL,CAAiB,KAAK,aAAtB,CAAP;AACD;AAED;;AAEG;;;AACa,MAAZ,YAAY,CAAC,KAAD,EAAqB;AACnC,SAAK,aAAL,GAAqB,KAArB;AACD;AAED;;AAEG;;;AACe,MAAd,cAAc,GAAA;AAChB,WAAO,KAAK,WAAL,CAAiB,KAAK,eAAtB,CAAP;AACD;AAED;;AAEG;;;AACe,MAAd,cAAc,CAAC,KAAD,EAAqB;AACrC,SAAK,eAAL,GAAuB,KAAvB;AACD;;AAjHoC;;AAAvC,OAAA,CAAA,OAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionURLs]] contains the URLs that will be used to reach the\n * meeting service.\n */\nclass MeetingSessionURLs {\n    constructor() {\n        /**\n         * The audio host URL of the session\n         */\n        this._audioHostURL = null;\n        /**\n         * The screen data URL of the session\n         */\n        this._screenDataURL = null;\n        /**\n         * The screen sharing URL of the session\n         */\n        this._screenSharingURL = null;\n        /**\n         * The screen viewing URL of the session\n         */\n        this._screenViewingURL = null;\n        /**\n         * The signaling URL of the session\n         */\n        this._signalingURL = null;\n        /**\n         * The TURN control URL of the session\n         */\n        this._turnControlURL = null;\n        /**\n         * Function to transform URLs. Use this to rewrite URLs to traverse proxies.\n         * The default implementation returns the original URL unchanged.\n         */\n        this.urlRewriter = (url) => {\n            return url;\n        };\n    }\n    /**\n     * Gets the audio host URL after applying the urlRewriter function.\n     */\n    get audioHostURL() {\n        return this.urlRewriter(this._audioHostURL);\n    }\n    /**\n     * Sets the raw audio host URL.\n     */\n    set audioHostURL(value) {\n        this._audioHostURL = value;\n    }\n    /**\n     * Gets the screen data URL after applying the urlRewriter function.\n     */\n    get screenDataURL() {\n        return this.urlRewriter(this._screenDataURL);\n    }\n    /**\n     * Sets the raw screen data URL.\n     */\n    set screenDataURL(value) {\n        this._screenDataURL = value;\n    }\n    /**\n     * Gets the screen sharing URL after applying the urlRewriter function.\n     */\n    get screenSharingURL() {\n        return this.urlRewriter(this._screenSharingURL);\n    }\n    /**\n     * Sets the raw screen sharing URL.\n     */\n    set screenSharingURL(value) {\n        this._screenSharingURL = value;\n    }\n    /**\n     * Gets the screen viewing URL after applying the urlRewriter function.\n     */\n    get screenViewingURL() {\n        return this.urlRewriter(this._screenViewingURL);\n    }\n    /**\n     * Sets the raw screen viewing URL.\n     */\n    set screenViewingURL(value) {\n        this._screenViewingURL = value;\n    }\n    /**\n     * Gets the signaling URL after applying the urlRewriter function.\n     */\n    get signalingURL() {\n        return this.urlRewriter(this._signalingURL);\n    }\n    /**\n     * Sets the raw signaling URL.\n     */\n    set signalingURL(value) {\n        this._signalingURL = value;\n    }\n    /**\n     * Gets the TURN control URL after applying the urlRewriter function.\n     */\n    get turnControlURL() {\n        return this.urlRewriter(this._turnControlURL);\n    }\n    /**\n     * Sets the raw TURN control URL.\n     */\n    set turnControlURL(value) {\n        this._turnControlURL = value;\n    }\n}\nexports.default = MeetingSessionURLs;\n//# sourceMappingURL=MeetingSessionURLs.js.map"]},"metadata":{},"sourceType":"script"}