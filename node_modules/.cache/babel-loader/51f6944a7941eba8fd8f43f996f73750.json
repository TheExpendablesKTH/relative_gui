{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DestroyableNoOpDeviceController = void 0;\n\nconst NoOpMediaStreamBroker_1 = require(\"../mediastreambroker/NoOpMediaStreamBroker\");\n\nclass NoOpDeviceController extends NoOpMediaStreamBroker_1.default {\n  constructor(_options) {\n    super();\n  }\n\n  listAudioInputDevices() {\n    return Promise.resolve([]);\n  }\n\n  listVideoInputDevices() {\n    return Promise.resolve([]);\n  }\n\n  listAudioOutputDevices() {\n    return Promise.resolve([]);\n  }\n\n  chooseAudioInputDevice(_device) {\n    return Promise.reject();\n  }\n\n  chooseVideoInputDevice(_device) {\n    return Promise.reject();\n  }\n\n  chooseAudioOutputDevice(_deviceId) {\n    return Promise.reject();\n  }\n\n  addDeviceChangeObserver(_observer) {}\n\n  removeDeviceChangeObserver(_observer) {}\n\n  createAnalyserNodeForAudioInput() {\n    return null;\n  }\n\n  startVideoPreviewForVideoInput(_element) {}\n\n  stopVideoPreviewForVideoInput(_element) {}\n\n  setDeviceLabelTrigger(_trigger) {}\n\n  mixIntoAudioInput(_stream) {\n    return null;\n  }\n\n  chooseVideoInputQuality(_width, _height, _frameRate, _maxBandwidthKbps) {}\n\n  getVideoInputQualitySettings() {\n    return null;\n  }\n\n}\n\nexports.default = NoOpDeviceController;\n\nclass DestroyableNoOpDeviceController extends NoOpDeviceController {\n  constructor() {\n    super(...arguments);\n    this.destroyed = false;\n  }\n\n  destroy() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.destroyed = true;\n    });\n  }\n\n}\n\nexports.DestroyableNoOpDeviceController = DestroyableNoOpDeviceController;","map":{"version":3,"sources":["../../src/devicecontroller/NoOpDeviceController.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,MAAA,uBAAA,GAAA,OAAA,CAAA,4CAAA,CAAA;;AAMA,MAAqB,oBAArB,SACU,uBAAA,CAAA,OADV,CAC+B;AAE7B,EAAA,WAAA,CAAY,QAAZ,EAAmD;AACjD;AACD;;AAED,EAAA,qBAAqB,GAAA;AACnB,WAAO,OAAO,CAAC,OAAR,CAAgB,EAAhB,CAAP;AACD;;AAED,EAAA,qBAAqB,GAAA;AACnB,WAAO,OAAO,CAAC,OAAR,CAAgB,EAAhB,CAAP;AACD;;AAED,EAAA,sBAAsB,GAAA;AACpB,WAAO,OAAO,CAAC,OAAR,CAAgB,EAAhB,CAAP;AACD;;AAED,EAAA,sBAAsB,CAAC,OAAD,EAA0B;AAC9C,WAAO,OAAO,CAAC,MAAR,EAAP;AACD;;AAED,EAAA,sBAAsB,CAAC,OAAD,EAA0B;AAC9C,WAAO,OAAO,CAAC,MAAR,EAAP;AACD;;AAED,EAAA,uBAAuB,CAAC,SAAD,EAAyB;AAC9C,WAAO,OAAO,CAAC,MAAR,EAAP;AACD;;AAED,EAAA,uBAAuB,CAAC,SAAD,EAAgC,CAAU;;AAEjE,EAAA,0BAA0B,CAAC,SAAD,EAAgC,CAAU;;AAEpE,EAAA,+BAA+B,GAAA;AAC7B,WAAO,IAAP;AACD;;AAED,EAAA,8BAA8B,CAAC,QAAD,EAA2B,CAAU;;AAEnE,EAAA,6BAA6B,CAAC,QAAD,EAA2B,CAAU;;AAElE,EAAA,qBAAqB,CAAC,QAAD,EAAqC,CAAU;;AAEpE,EAAA,iBAAiB,CAAC,OAAD,EAAqB;AACpC,WAAO,IAAP;AACD;;AAED,EAAA,uBAAuB,CACrB,MADqB,EAErB,OAFqB,EAGrB,UAHqB,EAIrB,iBAJqB,EAII,CACjB;;AAEV,EAAA,4BAA4B,GAAA;AAC1B,WAAO,IAAP;AACD;;AAzD4B;;AAD/B,OAAA,CAAA,OAAA,GAAA,oBAAA;;AA6DA,MAAa,+BAAb,SAAqD,oBAArD,CAAyE;AAAzE,EAAA,WAAA,GAAA;;AACE,SAAA,SAAA,GAAY,KAAZ;AAID;;AAHO,EAAA,OAAO,GAAA;;AACX,WAAK,SAAL,GAAiB,IAAjB;AACD,K;AAAA;;AAJsE;;AAAzE,OAAA,CAAA,+BAAA,GAAA,+BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DestroyableNoOpDeviceController = void 0;\nconst NoOpMediaStreamBroker_1 = require(\"../mediastreambroker/NoOpMediaStreamBroker\");\nclass NoOpDeviceController extends NoOpMediaStreamBroker_1.default {\n    constructor(_options) {\n        super();\n    }\n    listAudioInputDevices() {\n        return Promise.resolve([]);\n    }\n    listVideoInputDevices() {\n        return Promise.resolve([]);\n    }\n    listAudioOutputDevices() {\n        return Promise.resolve([]);\n    }\n    chooseAudioInputDevice(_device) {\n        return Promise.reject();\n    }\n    chooseVideoInputDevice(_device) {\n        return Promise.reject();\n    }\n    chooseAudioOutputDevice(_deviceId) {\n        return Promise.reject();\n    }\n    addDeviceChangeObserver(_observer) { }\n    removeDeviceChangeObserver(_observer) { }\n    createAnalyserNodeForAudioInput() {\n        return null;\n    }\n    startVideoPreviewForVideoInput(_element) { }\n    stopVideoPreviewForVideoInput(_element) { }\n    setDeviceLabelTrigger(_trigger) { }\n    mixIntoAudioInput(_stream) {\n        return null;\n    }\n    chooseVideoInputQuality(_width, _height, _frameRate, _maxBandwidthKbps) { }\n    getVideoInputQualitySettings() {\n        return null;\n    }\n}\nexports.default = NoOpDeviceController;\nclass DestroyableNoOpDeviceController extends NoOpDeviceController {\n    constructor() {\n        super(...arguments);\n        this.destroyed = false;\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.destroyed = true;\n        });\n    }\n}\nexports.DestroyableNoOpDeviceController = DestroyableNoOpDeviceController;\n//# sourceMappingURL=NoOpDeviceController.js.map"]},"metadata":{},"sourceType":"script"}