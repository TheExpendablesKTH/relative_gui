{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * [[SignalingClientSubscribe]] contains settings for the Subscribe SignalFrame.\n */\n\nclass SignalingClientSubscribe {\n  /** Initializes a SignalingClientSubscribe with the given properties.\n   *\n   * @param{string} attendeeId Attendee ID of the client\n   * @param{string} sdpOffer SDP offer created by WebRTC\n   * @param{string} audioHost host\n   * @param{boolean} audioMuted Whether audio from client is muted\n   * @param{boolean} audioCheckin Whether audio is in checked-in state\n   * @param{Array<number>} receiveStreamIds Which video streams to receive\n   * @param{boolean} localVideoEnabled Whether to send a video stream for the local camera\n   * @param{Array<VideoStreamDescription>} array of local video stream description\n   * @param{boolean} connectionTypeHasVideo Whether connection type has video\n   */\n  constructor(attendeeId, sdpOffer, audioHost, audioMuted, audioCheckin, receiveStreamIds, localVideoEnabled, videoStreamDescriptions, connectionTypeHasVideo) {\n    this.attendeeId = attendeeId;\n    this.sdpOffer = sdpOffer;\n    this.audioHost = audioHost;\n    this.audioMuted = audioMuted;\n    this.audioCheckin = audioCheckin;\n    this.receiveStreamIds = receiveStreamIds;\n    this.localVideoEnabled = localVideoEnabled;\n    this.videoStreamDescriptions = videoStreamDescriptions;\n    this.connectionTypeHasVideo = connectionTypeHasVideo;\n  }\n\n}\n\nexports.default = SignalingClientSubscribe;","map":{"version":3,"sources":["../../src/signalingclient/SignalingClientSubscribe.ts"],"names":[],"mappings":"cAAA;AACA;;;;;AAIA;;AAEG;;AACH,MAAqB,wBAArB,CAA6C;AAC3C;;;;;;;;;;;AAWG;AACH,EAAA,WAAA,CACS,UADT,EAES,QAFT,EAGS,SAHT,EAIS,UAJT,EAKS,YALT,EAMS,gBANT,EAOS,iBAPT,EAQS,uBART,EASS,sBATT,EASwC;AAR/B,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,YAAA,GAAA,YAAA;AACA,SAAA,gBAAA,GAAA,gBAAA;AACA,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,uBAAA,GAAA,uBAAA;AACA,SAAA,sBAAA,GAAA,sBAAA;AACL;;AAvBuC;;AAA7C,OAAA,CAAA,OAAA,GAAA,wBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[SignalingClientSubscribe]] contains settings for the Subscribe SignalFrame.\n */\nclass SignalingClientSubscribe {\n    /** Initializes a SignalingClientSubscribe with the given properties.\n     *\n     * @param{string} attendeeId Attendee ID of the client\n     * @param{string} sdpOffer SDP offer created by WebRTC\n     * @param{string} audioHost host\n     * @param{boolean} audioMuted Whether audio from client is muted\n     * @param{boolean} audioCheckin Whether audio is in checked-in state\n     * @param{Array<number>} receiveStreamIds Which video streams to receive\n     * @param{boolean} localVideoEnabled Whether to send a video stream for the local camera\n     * @param{Array<VideoStreamDescription>} array of local video stream description\n     * @param{boolean} connectionTypeHasVideo Whether connection type has video\n     */\n    constructor(attendeeId, sdpOffer, audioHost, audioMuted, audioCheckin, receiveStreamIds, localVideoEnabled, videoStreamDescriptions, connectionTypeHasVideo) {\n        this.attendeeId = attendeeId;\n        this.sdpOffer = sdpOffer;\n        this.audioHost = audioHost;\n        this.audioMuted = audioMuted;\n        this.audioCheckin = audioCheckin;\n        this.receiveStreamIds = receiveStreamIds;\n        this.localVideoEnabled = localVideoEnabled;\n        this.videoStreamDescriptions = videoStreamDescriptions;\n        this.connectionTypeHasVideo = connectionTypeHasVideo;\n    }\n}\nexports.default = SignalingClientSubscribe;\n//# sourceMappingURL=SignalingClientSubscribe.js.map"]},"metadata":{},"sourceType":"script"}