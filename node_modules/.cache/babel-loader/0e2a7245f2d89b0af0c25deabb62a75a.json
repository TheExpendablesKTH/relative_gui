{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst SignalingClientEventType_1 = require(\"./SignalingClientEventType\");\n/*\n * [[SignalingClientEvent]] stores an event that can be sent to observers of the SignalingClient.\n */\n\n\nclass SignalingClientEvent {\n  /** Initializes a SignalingClientEvent with the given SignalingClientEventType.\n   *\n   * @param {SignalingClient} client Indicates the SignalingClient associated with the event.\n   * @param {SignalingClientEventType} type Indicates the kind of event.\n   * @param {SdkSignalFrame} message SdkSignalFrame if type is ReceivedSignalFrame\n   */\n  constructor(client, type, message, closeCode, closeReason) {\n    this.client = client;\n    this.type = type;\n    this.message = message;\n    this.closeCode = closeCode;\n    this.closeReason = closeReason;\n    this.timestampMs = Date.now();\n  }\n\n  isConnectionTerminated() {\n    switch (this.type) {\n      case SignalingClientEventType_1.default.WebSocketFailed:\n      case SignalingClientEventType_1.default.WebSocketError:\n      case SignalingClientEventType_1.default.WebSocketClosing:\n      case SignalingClientEventType_1.default.WebSocketClosed:\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n}\n\nexports.default = SignalingClientEvent;","map":{"version":3,"sources":["../../src/signalingclient/SignalingClientEvent.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAIA,MAAA,0BAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;AAEA;;AAEG;;;AACH,MAAqB,oBAArB,CAAyC;AAGvC;;;;;AAKG;AACH,EAAA,WAAA,CACS,MADT,EAES,IAFT,EAGS,OAHT,EAIS,SAJT,EAKS,WALT,EAK6B;AAJpB,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,WAAA,GAAA,WAAA;AAEP,SAAK,WAAL,GAAmB,IAAI,CAAC,GAAL,EAAnB;AACD;;AAED,EAAA,sBAAsB,GAAA;AACpB,YAAQ,KAAK,IAAb;AACE,WAAK,0BAAA,CAAA,OAAA,CAAyB,eAA9B;AACA,WAAK,0BAAA,CAAA,OAAA,CAAyB,cAA9B;AACA,WAAK,0BAAA,CAAA,OAAA,CAAyB,gBAA9B;AACA,WAAK,0BAAA,CAAA,OAAA,CAAyB,eAA9B;AACE,eAAO,IAAP;;AACF;AACE,eAAO,KAAP;AAPJ;AASD;;AA7BsC;;AAAzC,OAAA,CAAA,OAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientEventType_1 = require(\"./SignalingClientEventType\");\n/*\n * [[SignalingClientEvent]] stores an event that can be sent to observers of the SignalingClient.\n */\nclass SignalingClientEvent {\n    /** Initializes a SignalingClientEvent with the given SignalingClientEventType.\n     *\n     * @param {SignalingClient} client Indicates the SignalingClient associated with the event.\n     * @param {SignalingClientEventType} type Indicates the kind of event.\n     * @param {SdkSignalFrame} message SdkSignalFrame if type is ReceivedSignalFrame\n     */\n    constructor(client, type, message, closeCode, closeReason) {\n        this.client = client;\n        this.type = type;\n        this.message = message;\n        this.closeCode = closeCode;\n        this.closeReason = closeReason;\n        this.timestampMs = Date.now();\n    }\n    isConnectionTerminated() {\n        switch (this.type) {\n            case SignalingClientEventType_1.default.WebSocketFailed:\n            case SignalingClientEventType_1.default.WebSocketError:\n            case SignalingClientEventType_1.default.WebSocketClosing:\n            case SignalingClientEventType_1.default.WebSocketClosed:\n                return true;\n            default:\n                return false;\n        }\n    }\n}\nexports.default = SignalingClientEvent;\n//# sourceMappingURL=SignalingClientEvent.js.map"]},"metadata":{},"sourceType":"script"}