{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decideModel = exports.measureAndDecideExecutionApproach = void 0;\n\nconst loader_js_1 = require(\"./loader.js\");\n\nconst support_js_1 = require(\"./support.js\");\n\nconst DEFAULT_EXECUTION_QUANTA = 3;\nconst SIMD_SCORE_FIXED_POINT = 2.50;\nconst WASM_SCORE_FIXED_POINT = 2.63;\nconst SINGLE_INLINE_SCORE_MULTIPLIER = 0.6;\nconst QUALITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER = 0.65;\nconst INTERACTIVITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER = 0.5;\nconst WORKER_SCORE_MULTIPLIER = 0.7;\nconst PERFORMANCE_THRESHOLDS = {\n  wasm: {\n    noSupport: 0.07,\n    inline: {\n      c100: 1,\n      c50: 0.36,\n      c20: 0.16,\n      c10: 0.07\n    },\n    worker: {\n      c100: 0.5,\n      c50: 0.18,\n      c20: 0.08,\n      c10: 0.06\n    }\n  },\n  simd: {\n    noSupport: 0.10,\n    inline: {\n      c100: 1,\n      c50: 0.43,\n      c20: 0.3,\n      c10: 0.2\n    },\n    worker: {\n      c100: 0.5,\n      c50: 0.21,\n      c20: 0.15,\n      c10: 0.10\n    }\n  }\n};\n\nclass Estimator {\n  constructor(fetchConfig, logger) {\n    this.fetchConfig = fetchConfig;\n    this.logger = logger;\n    const workerURL = `${fetchConfig.paths.workers}estimator-v1.js`;\n    this.fetchBehavior = {\n      headers: fetchConfig.headers,\n      escapedQueryString: fetchConfig.escapedQueryString\n    };\n    this.worker = loader_js_1.loadWorker(workerURL, 'VoiceFocusEstimator', this.fetchBehavior, logger);\n  }\n\n  roundtrip(toSend, receive, expectedKey) {\n    return new Promise((resolve, reject) => {\n      this.worker.then(worker => {\n        let listener;\n\n        listener = event => {\n          const {\n            message,\n            key\n          } = event.data;\n\n          if (message === receive && key === expectedKey) {\n            worker.removeEventListener('message', listener);\n            resolve(event.data);\n          }\n        };\n\n        worker.addEventListener('message', listener);\n        worker.postMessage(toSend);\n      }).catch(e => {\n        var _a;\n\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error('Failed to load worker.', e);\n        reject(e);\n      });\n    });\n  }\n\n  supportsSIMD(url) {\n    const key = 'simd';\n    const path = url || `${this.fetchConfig.paths.wasm}simd-v1.wasm`;\n    const toSend = {\n      message: 'supports-simd',\n      fetchBehavior: this.fetchBehavior,\n      path,\n      key\n    };\n    return this.roundtrip(toSend, 'simd-support', key).then(data => data.supports);\n  }\n\n  measure(simd, budget) {\n    const benchWASM = `${this.fetchConfig.paths.wasm}bench-v1.wasm`;\n    const benchSIMD = `${this.fetchConfig.paths.wasm}bench-v1_simd.wasm`;\n    const path = simd ? benchSIMD : benchWASM;\n    const key = `bench:${simd}`;\n    const toSend = {\n      message: 'measure',\n      fetchBehavior: this.fetchBehavior,\n      budget,\n      path,\n      key\n    };\n    return this.roundtrip(toSend, 'measurement', key).then(data => {\n      if (data.measurement) {\n        return data.measurement;\n      }\n\n      throw new Error('Failed to measure.');\n    });\n  }\n\n  stop() {\n    this.worker.then(worker => {\n      var _a;\n\n      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('Stopping estimator worker.');\n      worker.terminate();\n    }).catch(e => {});\n  }\n\n}\n\nconst inlineScoreMultiplier = (executionQuanta, usagePreference) => {\n  if (executionQuanta === 1) {\n    return SINGLE_INLINE_SCORE_MULTIPLIER;\n  }\n\n  if (usagePreference === 'quality') {\n    return QUALITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER * executionQuanta;\n  }\n\n  return INTERACTIVITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER * executionQuanta;\n};\n\nconst decideExecutionApproach = ({\n  supportsSIMD,\n  supportsSAB,\n  duration,\n  executionPreference = 'auto',\n  simdPreference,\n  variantPreference = 'auto',\n  usagePreference,\n  executionQuantaPreference = DEFAULT_EXECUTION_QUANTA\n}, allThresholds = PERFORMANCE_THRESHOLDS, logger) => {\n  const forceSIMD = simdPreference === 'force';\n  const useSIMD = forceSIMD || simdPreference !== 'disable' && supportsSIMD;\n  const checkScores = duration !== -1;\n  const baseScore = checkScores ? (useSIMD ? SIMD_SCORE_FIXED_POINT : WASM_SCORE_FIXED_POINT) / duration : 0;\n  const thresholds = useSIMD ? allThresholds.simd : allThresholds.wasm;\n  const inlineScore = checkScores ? inlineScoreMultiplier(executionQuantaPreference, usagePreference) * baseScore : 0;\n  const workerScore = checkScores ? WORKER_SCORE_MULTIPLIER * baseScore : 0;\n\n  const unsupported = reason => {\n    return {\n      supported: false,\n      reason\n    };\n  };\n\n  if (checkScores) {\n    if (baseScore < thresholds.noSupport) {\n      return unsupported(`Performance score ${baseScore} worse than threshold ${thresholds.noSupport}.`);\n    }\n  } else {\n    if (executionPreference === 'auto' || variantPreference === 'auto') {\n      return unsupported(`Missing explicit execution (${executionPreference}) or variant (${variantPreference}) preference, but no scoring performed.`);\n    }\n  }\n\n  logger === null || logger === void 0 ? void 0 : logger.debug(`Bench duration ${duration} yields inline score ${inlineScore} and worker score ${workerScore}.`);\n\n  const succeed = (processor, executionApproach, variant) => {\n    return {\n      supported: true,\n      useSIMD,\n      processor,\n      executionApproach,\n      variant,\n      executionQuanta: executionApproach === 'inline' ? executionQuantaPreference : undefined\n    };\n  };\n\n  const resolveVariant = (score, variant, lookup) => {\n    if (variant !== 'auto') {\n      if (!checkScores || score > lookup[variant]) {\n        return variant;\n      }\n\n      return 'failed';\n    }\n\n    if (score > lookup.c100) {\n      return 'c100';\n    }\n\n    if (score > lookup.c50) {\n      return 'c50';\n    }\n\n    if (score > lookup.c20) {\n      return 'c20';\n    }\n\n    if (score > lookup.c10) {\n      return 'c10';\n    }\n\n    return 'failed';\n  };\n\n  const reducePreference = preference => {\n    switch (preference || 'auto') {\n      case 'auto':\n        {\n          let inlineOption = reducePreference('inline');\n          let workerOption = reducePreference('worker');\n          logger === null || logger === void 0 ? void 0 : logger.debug(`Reducing auto preference: ${JSON.stringify(inlineOption)} vs ${JSON.stringify(workerOption)}`);\n\n          if (inlineOption.supported === false) {\n            return workerOption;\n          }\n\n          if (workerOption.supported === false) {\n            return workerOption;\n          }\n\n          if (inlineOption.variant === workerOption.variant || inlineOption.variant === 'c50') {\n            return inlineOption;\n          }\n\n          return workerOption;\n        }\n\n      case 'worker':\n        {\n          if (support_js_1.supportsSharedArrayBuffer(globalThis, window, logger)) {\n            return reducePreference('worker-sab');\n          }\n\n          return reducePreference('worker-postMessage');\n        }\n\n      case 'inline':\n        {\n          const variant = resolveVariant(inlineScore, variantPreference, thresholds.inline);\n\n          if (variant === 'failed') {\n            return unsupported(`Performance score ${inlineScore} not sufficient for inline use with variant preference ${variantPreference}.`);\n          }\n\n          ;\n          return succeed('voicefocus-inline-processor', 'inline', variant);\n        }\n\n      case 'worker-sab':\n        {\n          if (!supportsSAB) {\n            const reason = 'Requested worker-sab but no SharedArrayBuffer support.';\n            logger === null || logger === void 0 ? void 0 : logger.warn(reason);\n            return {\n              supported: false,\n              reason\n            };\n          }\n\n          const variant = resolveVariant(workerScore, variantPreference, thresholds.worker);\n\n          if (variant === 'failed') {\n            return unsupported(`Performance score ${workerScore} not sufficient for worker use with variant preference ${variantPreference}.`);\n          }\n\n          ;\n          return succeed('voicefocus-worker-sab-processor', 'worker-sab', variant);\n        }\n\n      case 'worker-postMessage':\n        {\n          const variant = resolveVariant(workerScore, variantPreference, thresholds.worker);\n\n          if (variant === 'failed') {\n            return unsupported(`Performance score ${workerScore} not sufficient for worker use.`);\n          }\n\n          ;\n          return succeed('voicefocus-worker-postMessage-processor', 'worker-postMessage', variant);\n        }\n    }\n  };\n\n  return reducePreference(executionPreference);\n};\n\nconst featureCheck = (forceSIMD, fetchConfig, logger, estimator) => __awaiter(void 0, void 0, void 0, function* () {\n  const supports = {\n    supportsSIMD: forceSIMD,\n    supportsSAB: support_js_1.supportsSharedArrayBuffer(globalThis, window, logger),\n    duration: -1\n  };\n\n  if (forceSIMD) {\n    logger === null || logger === void 0 ? void 0 : logger.info('Supports SIMD: true (force)');\n    return supports;\n  }\n\n  const cleanup = !estimator;\n  const e = estimator || new Estimator(fetchConfig, logger);\n\n  try {\n    const useSIMD = !support_js_1.isOldChrome(window, logger) && (yield e.supportsSIMD());\n    logger === null || logger === void 0 ? void 0 : logger.info(`Supports SIMD: ${useSIMD} (force: ${forceSIMD})`);\n    supports.supportsSIMD = useSIMD;\n    return supports;\n  } finally {\n    if (cleanup) {\n      e.stop();\n    }\n  }\n});\n\nconst estimateAndFeatureCheck = (forceSIMD, fetchConfig, estimatorBudget, logger) => __awaiter(void 0, void 0, void 0, function* () {\n  const estimator = new Estimator(fetchConfig, logger);\n\n  try {\n    const supports = yield featureCheck(forceSIMD, fetchConfig, logger, estimator);\n\n    if (supports.supportsSIMD) {\n      try {\n        supports.duration = yield estimator.measure(true, estimatorBudget);\n        logger === null || logger === void 0 ? void 0 : logger.info('SIMD timing:', supports.duration);\n        return supports;\n      } catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.warn('Failed SIMD estimation; falling back to non-SIMD.');\n        supports.supportsSIMD = false;\n      }\n    }\n\n    supports.duration = yield estimator.measure(false, estimatorBudget);\n    logger === null || logger === void 0 ? void 0 : logger.info('No-SIMD timing:', supports.duration);\n    return supports;\n  } catch (e) {\n    logger === null || logger === void 0 ? void 0 : logger.error('Could not feature check.', e);\n    throw e;\n  } finally {\n    estimator.stop();\n  }\n});\n\nconst measureAndDecideExecutionApproach = (spec, fetchConfig, logger, thresholds = PERFORMANCE_THRESHOLDS) => __awaiter(void 0, void 0, void 0, function* () {\n  let executionPreference = spec.executionPreference;\n  const {\n    usagePreference,\n    variantPreference,\n    simdPreference,\n    estimatorBudget,\n    executionQuantaPreference\n  } = spec;\n\n  if (usagePreference === 'interactivity' && executionPreference !== 'inline') {\n    logger === null || logger === void 0 ? void 0 : logger.debug(`Overriding execution preference ${executionPreference} to reflect interactivity preference.`);\n    executionPreference = 'inline';\n  }\n\n  const forceSIMD = simdPreference === 'force';\n  const knownModel = variantPreference !== 'auto';\n  const knownExecution = executionPreference !== 'auto';\n  let supports;\n\n  try {\n    if (knownModel && knownExecution) {\n      supports = yield featureCheck(forceSIMD, fetchConfig, logger);\n    } else {\n      supports = yield estimateAndFeatureCheck(forceSIMD, fetchConfig, estimatorBudget, logger);\n    }\n  } catch (e) {\n    logger === null || logger === void 0 ? void 0 : logger.error('Could not load estimator.', e);\n    throw new Error('Could not load Voice Focus estimator.');\n  }\n\n  return decideExecutionApproach(Object.assign(Object.assign({}, supports), {\n    simdPreference,\n    executionPreference,\n    variantPreference,\n    usagePreference,\n    executionQuantaPreference\n  }), thresholds, logger);\n});\n\nexports.measureAndDecideExecutionApproach = measureAndDecideExecutionApproach;\n\nconst decideModel = ({\n  category,\n  name,\n  variant,\n  simd,\n  url\n}) => {\n  return `${category}-${name}-${variant}-v1${simd ? '_simd' : ''}`;\n};\n\nexports.decideModel = decideModel;","map":{"version":3,"sources":["/Users/torarvill/Documents/Pip/relative_gui/relative_ui/node_modules/amazon-chime-sdk-js/libs/voicefocus/decider.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","decideModel","measureAndDecideExecutionApproach","loader_js_1","require","support_js_1","DEFAULT_EXECUTION_QUANTA","SIMD_SCORE_FIXED_POINT","WASM_SCORE_FIXED_POINT","SINGLE_INLINE_SCORE_MULTIPLIER","QUALITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER","INTERACTIVITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER","WORKER_SCORE_MULTIPLIER","PERFORMANCE_THRESHOLDS","wasm","noSupport","inline","c100","c50","c20","c10","worker","simd","Estimator","constructor","fetchConfig","logger","workerURL","paths","workers","fetchBehavior","headers","escapedQueryString","loadWorker","roundtrip","toSend","receive","expectedKey","listener","event","message","key","data","removeEventListener","addEventListener","postMessage","catch","_a","error","supportsSIMD","url","path","supports","measure","budget","benchWASM","benchSIMD","measurement","Error","stop","debug","terminate","inlineScoreMultiplier","executionQuanta","usagePreference","decideExecutionApproach","supportsSAB","duration","executionPreference","simdPreference","variantPreference","executionQuantaPreference","allThresholds","forceSIMD","useSIMD","checkScores","baseScore","thresholds","inlineScore","workerScore","unsupported","reason","supported","succeed","processor","executionApproach","variant","undefined","resolveVariant","score","lookup","reducePreference","preference","inlineOption","workerOption","JSON","stringify","supportsSharedArrayBuffer","globalThis","window","warn","featureCheck","estimator","info","cleanup","isOldChrome","estimateAndFeatureCheck","estimatorBudget","spec","knownModel","knownExecution","assign","category","name"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decideModel = exports.measureAndDecideExecutionApproach = void 0;\nconst loader_js_1 = require(\"./loader.js\");\nconst support_js_1 = require(\"./support.js\");\nconst DEFAULT_EXECUTION_QUANTA = 3;\nconst SIMD_SCORE_FIXED_POINT = 2.50;\nconst WASM_SCORE_FIXED_POINT = 2.63;\nconst SINGLE_INLINE_SCORE_MULTIPLIER = 0.6;\nconst QUALITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER = 0.65;\nconst INTERACTIVITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER = 0.5;\nconst WORKER_SCORE_MULTIPLIER = 0.7;\nconst PERFORMANCE_THRESHOLDS = {\n    wasm: {\n        noSupport: 0.07,\n        inline: {\n            c100: 1,\n            c50: 0.36,\n            c20: 0.16,\n            c10: 0.07,\n        },\n        worker: {\n            c100: 0.5,\n            c50: 0.18,\n            c20: 0.08,\n            c10: 0.06,\n        },\n    },\n    simd: {\n        noSupport: 0.10,\n        inline: {\n            c100: 1,\n            c50: 0.43,\n            c20: 0.3,\n            c10: 0.2,\n        },\n        worker: {\n            c100: 0.5,\n            c50: 0.21,\n            c20: 0.15,\n            c10: 0.10,\n        },\n    },\n};\nclass Estimator {\n    constructor(fetchConfig, logger) {\n        this.fetchConfig = fetchConfig;\n        this.logger = logger;\n        const workerURL = `${fetchConfig.paths.workers}estimator-v1.js`;\n        this.fetchBehavior = { headers: fetchConfig.headers, escapedQueryString: fetchConfig.escapedQueryString };\n        this.worker = loader_js_1.loadWorker(workerURL, 'VoiceFocusEstimator', this.fetchBehavior, logger);\n    }\n    roundtrip(toSend, receive, expectedKey) {\n        return new Promise((resolve, reject) => {\n            this.worker.then(worker => {\n                let listener;\n                listener = (event) => {\n                    const { message, key } = event.data;\n                    if (message === receive && key === expectedKey) {\n                        worker.removeEventListener('message', listener);\n                        resolve(event.data);\n                    }\n                };\n                worker.addEventListener('message', listener);\n                worker.postMessage(toSend);\n            }).catch(e => {\n                var _a;\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error('Failed to load worker.', e);\n                reject(e);\n            });\n        });\n    }\n    supportsSIMD(url) {\n        const key = 'simd';\n        const path = url || `${this.fetchConfig.paths.wasm}simd-v1.wasm`;\n        const toSend = {\n            message: 'supports-simd',\n            fetchBehavior: this.fetchBehavior,\n            path,\n            key,\n        };\n        return this.roundtrip(toSend, 'simd-support', key)\n            .then(data => data.supports);\n    }\n    measure(simd, budget) {\n        const benchWASM = `${this.fetchConfig.paths.wasm}bench-v1.wasm`;\n        const benchSIMD = `${this.fetchConfig.paths.wasm}bench-v1_simd.wasm`;\n        const path = simd ? benchSIMD : benchWASM;\n        const key = `bench:${simd}`;\n        const toSend = {\n            message: 'measure',\n            fetchBehavior: this.fetchBehavior,\n            budget,\n            path,\n            key,\n        };\n        return this.roundtrip(toSend, 'measurement', key)\n            .then(data => {\n            if (data.measurement) {\n                return data.measurement;\n            }\n            throw new Error('Failed to measure.');\n        });\n    }\n    stop() {\n        this.worker.then(worker => {\n            var _a;\n            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('Stopping estimator worker.');\n            worker.terminate();\n        }).catch(e => {\n        });\n    }\n}\nconst inlineScoreMultiplier = (executionQuanta, usagePreference) => {\n    if (executionQuanta === 1) {\n        return SINGLE_INLINE_SCORE_MULTIPLIER;\n    }\n    if (usagePreference === 'quality') {\n        return QUALITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER * executionQuanta;\n    }\n    return INTERACTIVITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER * executionQuanta;\n};\nconst decideExecutionApproach = ({ supportsSIMD, supportsSAB, duration, executionPreference = 'auto', simdPreference, variantPreference = 'auto', usagePreference, executionQuantaPreference = DEFAULT_EXECUTION_QUANTA, }, allThresholds = PERFORMANCE_THRESHOLDS, logger) => {\n    const forceSIMD = (simdPreference === 'force');\n    const useSIMD = forceSIMD || (simdPreference !== 'disable' && supportsSIMD);\n    const checkScores = duration !== -1;\n    const baseScore = checkScores ? (useSIMD ? SIMD_SCORE_FIXED_POINT : WASM_SCORE_FIXED_POINT) / duration : 0;\n    const thresholds = useSIMD ? allThresholds.simd : allThresholds.wasm;\n    const inlineScore = checkScores ? inlineScoreMultiplier(executionQuantaPreference, usagePreference) * baseScore : 0;\n    const workerScore = checkScores ? WORKER_SCORE_MULTIPLIER * baseScore : 0;\n    const unsupported = (reason) => {\n        return {\n            supported: false,\n            reason,\n        };\n    };\n    if (checkScores) {\n        if (baseScore < thresholds.noSupport) {\n            return unsupported(`Performance score ${baseScore} worse than threshold ${thresholds.noSupport}.`);\n        }\n    }\n    else {\n        if ((executionPreference === 'auto') ||\n            (variantPreference === 'auto')) {\n            return unsupported(`Missing explicit execution (${executionPreference}) or variant (${variantPreference}) preference, but no scoring performed.`);\n        }\n    }\n    logger === null || logger === void 0 ? void 0 : logger.debug(`Bench duration ${duration} yields inline score ${inlineScore} and worker score ${workerScore}.`);\n    const succeed = (processor, executionApproach, variant) => {\n        return {\n            supported: true,\n            useSIMD,\n            processor,\n            executionApproach,\n            variant,\n            executionQuanta: (executionApproach === 'inline' ? executionQuantaPreference : undefined),\n        };\n    };\n    const resolveVariant = (score, variant, lookup) => {\n        if (variant !== 'auto') {\n            if (!checkScores || score > lookup[variant]) {\n                return variant;\n            }\n            return 'failed';\n        }\n        if (score > lookup.c100) {\n            return 'c100';\n        }\n        if (score > lookup.c50) {\n            return 'c50';\n        }\n        if (score > lookup.c20) {\n            return 'c20';\n        }\n        if (score > lookup.c10) {\n            return 'c10';\n        }\n        return 'failed';\n    };\n    const reducePreference = (preference) => {\n        switch (preference || 'auto') {\n            case 'auto': {\n                let inlineOption = reducePreference('inline');\n                let workerOption = reducePreference('worker');\n                logger === null || logger === void 0 ? void 0 : logger.debug(`Reducing auto preference: ${JSON.stringify(inlineOption)} vs ${JSON.stringify(workerOption)}`);\n                if (inlineOption.supported === false) {\n                    return workerOption;\n                }\n                if (workerOption.supported === false) {\n                    return workerOption;\n                }\n                if (inlineOption.variant === workerOption.variant || inlineOption.variant === 'c50') {\n                    return inlineOption;\n                }\n                return workerOption;\n            }\n            case 'worker': {\n                if (support_js_1.supportsSharedArrayBuffer(globalThis, window, logger)) {\n                    return reducePreference('worker-sab');\n                }\n                return reducePreference('worker-postMessage');\n            }\n            case 'inline': {\n                const variant = resolveVariant(inlineScore, variantPreference, thresholds.inline);\n                if (variant === 'failed') {\n                    return unsupported(`Performance score ${inlineScore} not sufficient for inline use with variant preference ${variantPreference}.`);\n                }\n                ;\n                return succeed('voicefocus-inline-processor', 'inline', variant);\n            }\n            case 'worker-sab': {\n                if (!supportsSAB) {\n                    const reason = 'Requested worker-sab but no SharedArrayBuffer support.';\n                    logger === null || logger === void 0 ? void 0 : logger.warn(reason);\n                    return { supported: false, reason };\n                }\n                const variant = resolveVariant(workerScore, variantPreference, thresholds.worker);\n                if (variant === 'failed') {\n                    return unsupported(`Performance score ${workerScore} not sufficient for worker use with variant preference ${variantPreference}.`);\n                }\n                ;\n                return succeed('voicefocus-worker-sab-processor', 'worker-sab', variant);\n            }\n            case 'worker-postMessage': {\n                const variant = resolveVariant(workerScore, variantPreference, thresholds.worker);\n                if (variant === 'failed') {\n                    return unsupported(`Performance score ${workerScore} not sufficient for worker use.`);\n                }\n                ;\n                return succeed('voicefocus-worker-postMessage-processor', 'worker-postMessage', variant);\n            }\n        }\n    };\n    return reducePreference(executionPreference);\n};\nconst featureCheck = (forceSIMD, fetchConfig, logger, estimator) => __awaiter(void 0, void 0, void 0, function* () {\n    const supports = {\n        supportsSIMD: forceSIMD,\n        supportsSAB: support_js_1.supportsSharedArrayBuffer(globalThis, window, logger),\n        duration: -1,\n    };\n    if (forceSIMD) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Supports SIMD: true (force)');\n        return supports;\n    }\n    const cleanup = !estimator;\n    const e = estimator || new Estimator(fetchConfig, logger);\n    try {\n        const useSIMD = !support_js_1.isOldChrome(window, logger) && (yield e.supportsSIMD());\n        logger === null || logger === void 0 ? void 0 : logger.info(`Supports SIMD: ${useSIMD} (force: ${forceSIMD})`);\n        supports.supportsSIMD = useSIMD;\n        return supports;\n    }\n    finally {\n        if (cleanup) {\n            e.stop();\n        }\n    }\n});\nconst estimateAndFeatureCheck = (forceSIMD, fetchConfig, estimatorBudget, logger) => __awaiter(void 0, void 0, void 0, function* () {\n    const estimator = new Estimator(fetchConfig, logger);\n    try {\n        const supports = yield featureCheck(forceSIMD, fetchConfig, logger, estimator);\n        if (supports.supportsSIMD) {\n            try {\n                supports.duration = yield estimator.measure(true, estimatorBudget);\n                logger === null || logger === void 0 ? void 0 : logger.info('SIMD timing:', supports.duration);\n                return supports;\n            }\n            catch (e) {\n                logger === null || logger === void 0 ? void 0 : logger.warn('Failed SIMD estimation; falling back to non-SIMD.');\n                supports.supportsSIMD = false;\n            }\n        }\n        supports.duration = yield estimator.measure(false, estimatorBudget);\n        logger === null || logger === void 0 ? void 0 : logger.info('No-SIMD timing:', supports.duration);\n        return supports;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.error('Could not feature check.', e);\n        throw e;\n    }\n    finally {\n        estimator.stop();\n    }\n});\nconst measureAndDecideExecutionApproach = (spec, fetchConfig, logger, thresholds = PERFORMANCE_THRESHOLDS) => __awaiter(void 0, void 0, void 0, function* () {\n    let executionPreference = spec.executionPreference;\n    const { usagePreference, variantPreference, simdPreference, estimatorBudget, executionQuantaPreference, } = spec;\n    if (usagePreference === 'interactivity' && executionPreference !== 'inline') {\n        logger === null || logger === void 0 ? void 0 : logger.debug(`Overriding execution preference ${executionPreference} to reflect interactivity preference.`);\n        executionPreference = 'inline';\n    }\n    const forceSIMD = simdPreference === 'force';\n    const knownModel = variantPreference !== 'auto';\n    const knownExecution = executionPreference !== 'auto';\n    let supports;\n    try {\n        if (knownModel && knownExecution) {\n            supports = yield featureCheck(forceSIMD, fetchConfig, logger);\n        }\n        else {\n            supports = yield estimateAndFeatureCheck(forceSIMD, fetchConfig, estimatorBudget, logger);\n        }\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.error('Could not load estimator.', e);\n        throw new Error('Could not load Voice Focus estimator.');\n    }\n    return decideExecutionApproach(Object.assign(Object.assign({}, supports), { simdPreference,\n        executionPreference,\n        variantPreference,\n        usagePreference,\n        executionQuantaPreference }), thresholds, logger);\n});\nexports.measureAndDecideExecutionApproach = measureAndDecideExecutionApproach;\nconst decideModel = ({ category, name, variant, simd, url }) => {\n    return `${category}-${name}-${variant}-v1${simd ? '_simd' : ''}`;\n};\nexports.decideModel = decideModel;\n"]},"metadata":{},"sourceType":"script"}