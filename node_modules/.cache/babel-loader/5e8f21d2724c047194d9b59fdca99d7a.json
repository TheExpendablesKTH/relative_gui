{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst detect_browser_1 = require(\"detect-browser\");\n\nclass DefaultBrowserBehavior {\n  constructor({\n    enableUnifiedPlanForChromiumBasedBrowsers = false\n  } = {}) {\n    this.browser = detect_browser_1.detect();\n    this.browserSupport = {\n      chrome: 78,\n      'edge-chromium': 79,\n      electron: 7,\n      firefox: 60,\n      ios: 12,\n      safari: 12,\n      opera: 66,\n      samsung: 12,\n      crios: 86,\n      fxios: 23\n    };\n    this.browserName = {\n      chrome: 'Google Chrome',\n      'edge-chromium': 'Microsoft Edge',\n      electron: 'Electron',\n      firefox: 'Mozilla Firefox',\n      ios: 'Safari iOS',\n      safari: 'Safari',\n      opera: 'Opera',\n      samsung: 'Samsung Internet',\n      crios: 'Chrome iOS',\n      fxios: 'Firefox iOS'\n    };\n    this.chromeLike = ['chrome', 'edge-chromium', 'chromium-webview', 'opera', 'samsung'];\n    this.webkitBrowsers = ['crios', 'fxios', 'safari', 'ios'];\n    this.enableUnifiedPlanForChromiumBasedBrowsers = enableUnifiedPlanForChromiumBasedBrowsers;\n  }\n\n  version() {\n    return this.browser.version;\n  }\n\n  majorVersion() {\n    return parseInt(this.version().split('.')[0]);\n  }\n\n  name() {\n    return this.browser.name;\n  }\n\n  hasChromiumWebRTC() {\n    for (const browser of this.chromeLike) {\n      if (browser === this.browser.name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  hasWebKitWebRTC() {\n    for (const browser of this.webkitBrowsers) {\n      if (browser === this.browser.name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  hasFirefoxWebRTC() {\n    return this.isFirefox();\n  }\n\n  supportsCanvasCapturedStreamPlayback() {\n    return !this.isIOSSafari() && !this.isIOSChrome() && !this.isIOSFirefox();\n  }\n\n  requiresUnifiedPlan() {\n    let shouldEnable = this.isFirefox() || this.hasWebKitWebRTC() && this.isUnifiedPlanSupported();\n\n    if (this.enableUnifiedPlanForChromiumBasedBrowsers) {\n      shouldEnable = shouldEnable || this.hasChromiumWebRTC();\n    }\n\n    return shouldEnable;\n  }\n\n  requiresResolutionAlignment(width, height) {\n    if (this.isAndroid() && this.isPixel3()) {\n      return [Math.ceil(width / 64) * 64, Math.ceil(height / 64) * 64];\n    }\n\n    return [width, height];\n  }\n\n  requiresCheckForSdpConnectionAttributes() {\n    return !this.isIOSSafari() && !this.isIOSChrome() && !this.isIOSFirefox();\n  }\n\n  requiresIceCandidateGatheringTimeoutWorkaround() {\n    return this.hasChromiumWebRTC();\n  }\n\n  requiresUnifiedPlanMunging() {\n    let shouldRequire = this.hasWebKitWebRTC() && this.isUnifiedPlanSupported();\n\n    if (this.enableUnifiedPlanForChromiumBasedBrowsers) {\n      shouldRequire = shouldRequire || this.hasChromiumWebRTC();\n    }\n\n    return shouldRequire;\n  }\n\n  requiresSortCodecPreferencesForSdpAnswer() {\n    return this.isFirefox() && this.majorVersion() <= 68;\n  }\n\n  requiresSimulcastMunging() {\n    return this.isSafari();\n  }\n\n  requiresBundlePolicy() {\n    return 'max-bundle';\n  }\n\n  requiresPromiseBasedWebRTCGetStats() {\n    return !this.hasChromiumWebRTC();\n  }\n\n  requiresVideoElementWorkaround() {\n    return this.isSafari();\n  }\n\n  requiresNoExactMediaStreamConstraints() {\n    return this.isSamsungInternet() || this.isIOSSafari() && (this.version() === '12.0.0' || this.version() === '12.1.0');\n  }\n\n  requiresGroupIdMediaStreamConstraints() {\n    return this.isSamsungInternet();\n  }\n\n  requiresContextRecreationForAudioWorklet() {\n    // Definitely not Chrome; no worries.\n    if (!('chrome' in global)) {\n      return false;\n    } // Everything seems to work fine on platforms other than macOS.\n\n\n    if (this.browser.os !== 'Mac OS') {\n      return false;\n    } // Electron or Chromium.\n\n\n    if (this.isChrome() || this.isEdge()) {\n      return true;\n    } // All other browsers are fine.\n\n\n    return false;\n  }\n\n  getDisplayMediaAudioCaptureSupport() {\n    return this.isChrome() || this.isEdge();\n  }\n\n  supportsSenderSideBandwidthEstimation() {\n    return this.hasChromiumWebRTC() || this.isSafari();\n  } // TODO: Deprecated, needs to be removed\n\n\n  screenShareUnsupported() {\n    console.warn('This function is no longer supported.');\n\n    if (this.isSafari()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isSupported() {\n    if (!this.browserSupport[this.browser.name] || this.majorVersion() < this.browserSupport[this.browser.name]) {\n      return false;\n    }\n\n    if (this.browser.name === 'firefox' && this.isAndroid()) {\n      return false;\n    }\n\n    return true;\n  }\n\n  supportString() {\n    if (this.isAndroid()) {\n      return `${this.browserName['chrome']} ${this.browserSupport['chrome']}+, ${this.browserName['samsung']} ${this.browserSupport['samsung']}+`;\n    }\n\n    const s = [];\n\n    for (const k in this.browserSupport) {\n      s.push(`${this.browserName[k]} ${this.browserSupport[k]}+`);\n    }\n\n    return s.join(', ');\n  }\n\n  supportedVideoCodecs() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const pc = new RTCPeerConnection();\n      pc.addTransceiver('video', {\n        direction: 'inactive',\n        streams: []\n      });\n      return (yield pc.createOffer({\n        offerToReceiveVideo: true\n      })).sdp.split('\\r\\n').filter(x => {\n        return x.includes('a=rtpmap:');\n      }).map(x => {\n        return x.replace(/.* /, '').replace(/\\/.*/, '');\n      }).filter((v, i, a) => {\n        return a.indexOf(v) === i;\n      }).filter(x => {\n        return x !== 'rtx' && x !== 'red' && x !== 'ulpfec';\n      });\n    });\n  }\n\n  supportsSetSinkId() {\n    return 'setSinkId' in HTMLAudioElement.prototype;\n  } // These helpers should be kept private to encourage\n  // feature detection instead of browser detection.\n\n\n  isIOSSafari() {\n    return this.browser.name === 'ios';\n  }\n\n  isSafari() {\n    return this.browser.name === 'safari' || this.browser.name === 'ios';\n  }\n\n  isFirefox() {\n    return this.browser.name === 'firefox';\n  }\n\n  isIOSFirefox() {\n    return this.browser.name === 'fxios';\n  }\n\n  isIOSChrome() {\n    return this.browser.name === 'crios';\n  }\n\n  isChrome() {\n    return this.browser.name === 'chrome';\n  }\n\n  isEdge() {\n    return this.browser.name === 'edge-chromium';\n  }\n\n  isSamsungInternet() {\n    return this.browser.name === 'samsung';\n  }\n\n  isAndroid() {\n    return /(android)/i.test(navigator.userAgent);\n  }\n\n  isPixel3() {\n    return /( pixel 3)/i.test(navigator.userAgent);\n  }\n\n  isUnifiedPlanSupported() {\n    return RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection');\n  }\n\n}\n\nexports.default = DefaultBrowserBehavior;","map":{"version":3,"sources":["../../src/browserbehavior/DefaultBrowserBehavior.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst detect_browser_1 = require(\"detect-browser\");\nclass DefaultBrowserBehavior {\n    constructor({ enableUnifiedPlanForChromiumBasedBrowsers = false, } = {}) {\n        this.browser = detect_browser_1.detect();\n        this.browserSupport = {\n            chrome: 78,\n            'edge-chromium': 79,\n            electron: 7,\n            firefox: 60,\n            ios: 12,\n            safari: 12,\n            opera: 66,\n            samsung: 12,\n            crios: 86,\n            fxios: 23,\n        };\n        this.browserName = {\n            chrome: 'Google Chrome',\n            'edge-chromium': 'Microsoft Edge',\n            electron: 'Electron',\n            firefox: 'Mozilla Firefox',\n            ios: 'Safari iOS',\n            safari: 'Safari',\n            opera: 'Opera',\n            samsung: 'Samsung Internet',\n            crios: 'Chrome iOS',\n            fxios: 'Firefox iOS',\n        };\n        this.chromeLike = [\n            'chrome',\n            'edge-chromium',\n            'chromium-webview',\n            'opera',\n            'samsung',\n        ];\n        this.webkitBrowsers = ['crios', 'fxios', 'safari', 'ios'];\n        this.enableUnifiedPlanForChromiumBasedBrowsers = enableUnifiedPlanForChromiumBasedBrowsers;\n    }\n    version() {\n        return this.browser.version;\n    }\n    majorVersion() {\n        return parseInt(this.version().split('.')[0]);\n    }\n    name() {\n        return this.browser.name;\n    }\n    hasChromiumWebRTC() {\n        for (const browser of this.chromeLike) {\n            if (browser === this.browser.name) {\n                return true;\n            }\n        }\n        return false;\n    }\n    hasWebKitWebRTC() {\n        for (const browser of this.webkitBrowsers) {\n            if (browser === this.browser.name) {\n                return true;\n            }\n        }\n        return false;\n    }\n    hasFirefoxWebRTC() {\n        return this.isFirefox();\n    }\n    supportsCanvasCapturedStreamPlayback() {\n        return !this.isIOSSafari() && !this.isIOSChrome() && !this.isIOSFirefox();\n    }\n    requiresUnifiedPlan() {\n        let shouldEnable = this.isFirefox() || (this.hasWebKitWebRTC() && this.isUnifiedPlanSupported());\n        if (this.enableUnifiedPlanForChromiumBasedBrowsers) {\n            shouldEnable = shouldEnable || this.hasChromiumWebRTC();\n        }\n        return shouldEnable;\n    }\n    requiresResolutionAlignment(width, height) {\n        if (this.isAndroid() && this.isPixel3()) {\n            return [Math.ceil(width / 64) * 64, Math.ceil(height / 64) * 64];\n        }\n        return [width, height];\n    }\n    requiresCheckForSdpConnectionAttributes() {\n        return !this.isIOSSafari() && !this.isIOSChrome() && !this.isIOSFirefox();\n    }\n    requiresIceCandidateGatheringTimeoutWorkaround() {\n        return this.hasChromiumWebRTC();\n    }\n    requiresUnifiedPlanMunging() {\n        let shouldRequire = this.hasWebKitWebRTC() && this.isUnifiedPlanSupported();\n        if (this.enableUnifiedPlanForChromiumBasedBrowsers) {\n            shouldRequire = shouldRequire || this.hasChromiumWebRTC();\n        }\n        return shouldRequire;\n    }\n    requiresSortCodecPreferencesForSdpAnswer() {\n        return this.isFirefox() && this.majorVersion() <= 68;\n    }\n    requiresSimulcastMunging() {\n        return this.isSafari();\n    }\n    requiresBundlePolicy() {\n        return 'max-bundle';\n    }\n    requiresPromiseBasedWebRTCGetStats() {\n        return !this.hasChromiumWebRTC();\n    }\n    requiresVideoElementWorkaround() {\n        return this.isSafari();\n    }\n    requiresNoExactMediaStreamConstraints() {\n        return (this.isSamsungInternet() ||\n            (this.isIOSSafari() && (this.version() === '12.0.0' || this.version() === '12.1.0')));\n    }\n    requiresGroupIdMediaStreamConstraints() {\n        return this.isSamsungInternet();\n    }\n    requiresContextRecreationForAudioWorklet() {\n        // Definitely not Chrome; no worries.\n        if (!('chrome' in global)) {\n            return false;\n        }\n        // Everything seems to work fine on platforms other than macOS.\n        if (this.browser.os !== 'Mac OS') {\n            return false;\n        }\n        // Electron or Chromium.\n        if (this.isChrome() || this.isEdge()) {\n            return true;\n        }\n        // All other browsers are fine.\n        return false;\n    }\n    getDisplayMediaAudioCaptureSupport() {\n        return this.isChrome() || this.isEdge();\n    }\n    supportsSenderSideBandwidthEstimation() {\n        return this.hasChromiumWebRTC() || this.isSafari();\n    }\n    // TODO: Deprecated, needs to be removed\n    screenShareUnsupported() {\n        console.warn('This function is no longer supported.');\n        if (this.isSafari()) {\n            return true;\n        }\n        return false;\n    }\n    isSupported() {\n        if (!this.browserSupport[this.browser.name] ||\n            this.majorVersion() < this.browserSupport[this.browser.name]) {\n            return false;\n        }\n        if (this.browser.name === 'firefox' && this.isAndroid()) {\n            return false;\n        }\n        return true;\n    }\n    supportString() {\n        if (this.isAndroid()) {\n            return `${this.browserName['chrome']} ${this.browserSupport['chrome']}+, ${this.browserName['samsung']} ${this.browserSupport['samsung']}+`;\n        }\n        const s = [];\n        for (const k in this.browserSupport) {\n            s.push(`${this.browserName[k]} ${this.browserSupport[k]}+`);\n        }\n        return s.join(', ');\n    }\n    supportedVideoCodecs() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pc = new RTCPeerConnection();\n            pc.addTransceiver('video', { direction: 'inactive', streams: [] });\n            return (yield pc.createOffer({ offerToReceiveVideo: true })).sdp\n                .split('\\r\\n')\n                .filter(x => {\n                return x.includes('a=rtpmap:');\n            })\n                .map(x => {\n                return x.replace(/.* /, '').replace(/\\/.*/, '');\n            })\n                .filter((v, i, a) => {\n                return a.indexOf(v) === i;\n            })\n                .filter(x => {\n                return x !== 'rtx' && x !== 'red' && x !== 'ulpfec';\n            });\n        });\n    }\n    supportsSetSinkId() {\n        return 'setSinkId' in HTMLAudioElement.prototype;\n    }\n    // These helpers should be kept private to encourage\n    // feature detection instead of browser detection.\n    isIOSSafari() {\n        return this.browser.name === 'ios';\n    }\n    isSafari() {\n        return this.browser.name === 'safari' || this.browser.name === 'ios';\n    }\n    isFirefox() {\n        return this.browser.name === 'firefox';\n    }\n    isIOSFirefox() {\n        return this.browser.name === 'fxios';\n    }\n    isIOSChrome() {\n        return this.browser.name === 'crios';\n    }\n    isChrome() {\n        return this.browser.name === 'chrome';\n    }\n    isEdge() {\n        return this.browser.name === 'edge-chromium';\n    }\n    isSamsungInternet() {\n        return this.browser.name === 'samsung';\n    }\n    isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n    isPixel3() {\n        return /( pixel 3)/i.test(navigator.userAgent);\n    }\n    isUnifiedPlanSupported() {\n        return RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection');\n    }\n}\nexports.default = DefaultBrowserBehavior;\n//# sourceMappingURL=DefaultBrowserBehavior.js.map"]},"metadata":{},"sourceType":"script"}