{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass ConnectionHealthData {\n  constructor() {\n    this.connectionStartTimestampMs = 0;\n    this.consecutiveStatsWithNoPackets = 0;\n    this.lastPacketLossInboundTimestampMs = 0;\n    this.lastGoodSignalTimestampMs = 0;\n    this.lastWeakSignalTimestampMs = 0;\n    this.lastNoSignalTimestampMs = 0;\n    this.consecutiveMissedPongs = 0;\n    this.packetsReceivedInLastMinute = [];\n    this.fractionPacketsLostInboundInLastMinute = [];\n    this.audioSpeakerDelayMs = 0;\n    this.connectionStartTimestampMs = Date.now();\n    this.lastGoodSignalTimestampMs = Date.now();\n  }\n\n  static isTimestampRecent(timestampMs, recentDurationMs) {\n    return Date.now() < timestampMs + recentDurationMs;\n  }\n\n  setConnectionStartTime() {\n    this.connectionStartTimestampMs = Date.now();\n    this.lastGoodSignalTimestampMs = Date.now();\n  }\n\n  reset() {\n    this.connectionStartTimestampMs = 0;\n    this.consecutiveStatsWithNoPackets = 0;\n    this.lastPacketLossInboundTimestampMs = 0;\n    this.lastGoodSignalTimestampMs = 0;\n    this.lastWeakSignalTimestampMs = 0;\n    this.lastNoSignalTimestampMs = 0;\n    this.consecutiveMissedPongs = 0;\n    this.packetsReceivedInLastMinute = [];\n    this.fractionPacketsLostInboundInLastMinute = [];\n    this.audioSpeakerDelayMs = 0;\n    this.connectionStartTimestampMs = Date.now();\n    this.lastGoodSignalTimestampMs = Date.now();\n  }\n\n  isConnectionStartRecent(recentDurationMs) {\n    return ConnectionHealthData.isTimestampRecent(this.connectionStartTimestampMs, recentDurationMs);\n  }\n\n  isLastPacketLossRecent(recentDurationMs) {\n    return ConnectionHealthData.isTimestampRecent(this.lastPacketLossInboundTimestampMs, recentDurationMs);\n  }\n\n  isGoodSignalRecent(recentDurationMs) {\n    return ConnectionHealthData.isTimestampRecent(this.lastGoodSignalTimestampMs, recentDurationMs);\n  }\n\n  isWeakSignalRecent(recentDurationMs) {\n    return ConnectionHealthData.isTimestampRecent(this.lastWeakSignalTimestampMs, recentDurationMs);\n  }\n\n  isNoSignalRecent(recentDurationMs) {\n    return ConnectionHealthData.isTimestampRecent(this.lastNoSignalTimestampMs, recentDurationMs);\n  }\n\n  clone() {\n    const cloned = new ConnectionHealthData();\n    cloned.connectionStartTimestampMs = this.connectionStartTimestampMs;\n    cloned.consecutiveStatsWithNoPackets = this.consecutiveStatsWithNoPackets;\n    cloned.lastPacketLossInboundTimestampMs = this.lastPacketLossInboundTimestampMs;\n    cloned.lastGoodSignalTimestampMs = this.lastGoodSignalTimestampMs;\n    cloned.lastWeakSignalTimestampMs = this.lastWeakSignalTimestampMs;\n    cloned.lastNoSignalTimestampMs = this.lastNoSignalTimestampMs;\n    cloned.consecutiveMissedPongs = this.consecutiveMissedPongs;\n    cloned.packetsReceivedInLastMinute = this.packetsReceivedInLastMinute.slice(0);\n    cloned.fractionPacketsLostInboundInLastMinute = this.fractionPacketsLostInboundInLastMinute.slice(0);\n    cloned.audioSpeakerDelayMs = this.audioSpeakerDelayMs;\n    return cloned;\n  }\n\n  setConsecutiveMissedPongs(pongs) {\n    this.consecutiveMissedPongs = pongs;\n  }\n\n  setConsecutiveStatsWithNoPackets(stats) {\n    this.consecutiveStatsWithNoPackets = stats;\n  }\n\n  setLastPacketLossInboundTimestampMs(timeStamp) {\n    this.lastPacketLossInboundTimestampMs = timeStamp;\n  }\n\n  setLastNoSignalTimestampMs(timeStamp) {\n    this.lastNoSignalTimestampMs = timeStamp;\n  }\n\n  setLastWeakSignalTimestampMs(timeStamp) {\n    this.lastWeakSignalTimestampMs = timeStamp;\n  }\n\n  setLastGoodSignalTimestampMs(timeStamp) {\n    this.lastGoodSignalTimestampMs = timeStamp;\n  }\n\n  setAudioSpeakerDelayMs(delayMs) {\n    this.audioSpeakerDelayMs = delayMs;\n  }\n\n}\n\nexports.default = ConnectionHealthData;","map":{"version":3,"sources":["../../src/connectionhealthpolicy/ConnectionHealthData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ConnectionHealthData {\n    constructor() {\n        this.connectionStartTimestampMs = 0;\n        this.consecutiveStatsWithNoPackets = 0;\n        this.lastPacketLossInboundTimestampMs = 0;\n        this.lastGoodSignalTimestampMs = 0;\n        this.lastWeakSignalTimestampMs = 0;\n        this.lastNoSignalTimestampMs = 0;\n        this.consecutiveMissedPongs = 0;\n        this.packetsReceivedInLastMinute = [];\n        this.fractionPacketsLostInboundInLastMinute = [];\n        this.audioSpeakerDelayMs = 0;\n        this.connectionStartTimestampMs = Date.now();\n        this.lastGoodSignalTimestampMs = Date.now();\n    }\n    static isTimestampRecent(timestampMs, recentDurationMs) {\n        return Date.now() < timestampMs + recentDurationMs;\n    }\n    setConnectionStartTime() {\n        this.connectionStartTimestampMs = Date.now();\n        this.lastGoodSignalTimestampMs = Date.now();\n    }\n    reset() {\n        this.connectionStartTimestampMs = 0;\n        this.consecutiveStatsWithNoPackets = 0;\n        this.lastPacketLossInboundTimestampMs = 0;\n        this.lastGoodSignalTimestampMs = 0;\n        this.lastWeakSignalTimestampMs = 0;\n        this.lastNoSignalTimestampMs = 0;\n        this.consecutiveMissedPongs = 0;\n        this.packetsReceivedInLastMinute = [];\n        this.fractionPacketsLostInboundInLastMinute = [];\n        this.audioSpeakerDelayMs = 0;\n        this.connectionStartTimestampMs = Date.now();\n        this.lastGoodSignalTimestampMs = Date.now();\n    }\n    isConnectionStartRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.connectionStartTimestampMs, recentDurationMs);\n    }\n    isLastPacketLossRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastPacketLossInboundTimestampMs, recentDurationMs);\n    }\n    isGoodSignalRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastGoodSignalTimestampMs, recentDurationMs);\n    }\n    isWeakSignalRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastWeakSignalTimestampMs, recentDurationMs);\n    }\n    isNoSignalRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastNoSignalTimestampMs, recentDurationMs);\n    }\n    clone() {\n        const cloned = new ConnectionHealthData();\n        cloned.connectionStartTimestampMs = this.connectionStartTimestampMs;\n        cloned.consecutiveStatsWithNoPackets = this.consecutiveStatsWithNoPackets;\n        cloned.lastPacketLossInboundTimestampMs = this.lastPacketLossInboundTimestampMs;\n        cloned.lastGoodSignalTimestampMs = this.lastGoodSignalTimestampMs;\n        cloned.lastWeakSignalTimestampMs = this.lastWeakSignalTimestampMs;\n        cloned.lastNoSignalTimestampMs = this.lastNoSignalTimestampMs;\n        cloned.consecutiveMissedPongs = this.consecutiveMissedPongs;\n        cloned.packetsReceivedInLastMinute = this.packetsReceivedInLastMinute.slice(0);\n        cloned.fractionPacketsLostInboundInLastMinute = this.fractionPacketsLostInboundInLastMinute.slice(0);\n        cloned.audioSpeakerDelayMs = this.audioSpeakerDelayMs;\n        return cloned;\n    }\n    setConsecutiveMissedPongs(pongs) {\n        this.consecutiveMissedPongs = pongs;\n    }\n    setConsecutiveStatsWithNoPackets(stats) {\n        this.consecutiveStatsWithNoPackets = stats;\n    }\n    setLastPacketLossInboundTimestampMs(timeStamp) {\n        this.lastPacketLossInboundTimestampMs = timeStamp;\n    }\n    setLastNoSignalTimestampMs(timeStamp) {\n        this.lastNoSignalTimestampMs = timeStamp;\n    }\n    setLastWeakSignalTimestampMs(timeStamp) {\n        this.lastWeakSignalTimestampMs = timeStamp;\n    }\n    setLastGoodSignalTimestampMs(timeStamp) {\n        this.lastGoodSignalTimestampMs = timeStamp;\n    }\n    setAudioSpeakerDelayMs(delayMs) {\n        this.audioSpeakerDelayMs = delayMs;\n    }\n}\nexports.default = ConnectionHealthData;\n//# sourceMappingURL=ConnectionHealthData.js.map"]},"metadata":{},"sourceType":"script"}