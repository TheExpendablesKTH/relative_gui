{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\n\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\n\nclass MediaDeviceProxyHandler {\n  constructor() {\n    this.scheduler = null;\n    this.devices = null;\n    this.deviceChangeListeners = new Set(); // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\n\n    this.get = (target, property, receiver) => {\n      if (!Reflect.has(target, property)) {\n        return undefined;\n      }\n\n      if (!('ondevicechange' in navigator.mediaDevices)) {\n        if (property === 'addEventListener') {\n          return this.patchAddEventListener(target, property, receiver);\n        } else if (property === 'removeEventListener') {\n          return this.patchRemoveEventListener(target, property, receiver);\n        }\n      }\n\n      const value = Reflect.get(target, property, receiver);\n      return typeof value === 'function' ? value.bind(target) : value;\n    };\n\n    this.patchAddEventListener = (target, property, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    receiver) => {\n      const value = Reflect.get(target, property, receiver);\n      return (type, listener, options) => {\n        if (type === 'devicechange') {\n          this.deviceChangeListeners.add(listener);\n\n          if (!this.scheduler) {\n            this.scheduler = new IntervalScheduler_1.default(MediaDeviceProxyHandler.INTERVAL_MS);\n            this.scheduler.start(this.pollDeviceLists);\n          }\n        } else {\n          return Reflect.apply(value, target, [type, listener, options]);\n        }\n      };\n    };\n\n    this.patchRemoveEventListener = (target, property, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    receiver) => {\n      const value = Reflect.get(target, property, receiver);\n      return (type, listener, options) => {\n        if (type === 'devicechange') {\n          this.deviceChangeListeners.delete(listener);\n\n          if (this.deviceChangeListeners.size === 0 && this.scheduler) {\n            this.scheduler.stop();\n            this.scheduler = null;\n          }\n        } else {\n          return Reflect.apply(value, target, [type, listener, options]);\n        }\n      };\n    };\n\n    this.pollDeviceLists = () => __awaiter(this, void 0, void 0, function* () {\n      const newDevices = yield this.sortedDeviceList();\n\n      if (this.devices) {\n        const changed = newDevices.length !== this.devices.length || newDevices.some((device, index) => {\n          return device.deviceId !== this.devices[index].deviceId;\n        });\n\n        if (changed) {\n          this.handleDeviceChangeEvent();\n        }\n      }\n\n      this.devices = newDevices;\n    });\n  }\n\n  sortedDeviceList() {\n    return __awaiter(this, void 0, void 0, function* () {\n      // @ts-ignore\n      const newDevices = yield navigator.mediaDevices.enumerateDevices();\n      return newDevices.sort((device1, device2) => {\n        if (device1.deviceId < device2.deviceId) {\n          return 1;\n        }\n\n        if (device1.deviceId > device2.deviceId) {\n          return -1;\n        }\n\n        return 0;\n      });\n    });\n  }\n\n  handleDeviceChangeEvent() {\n    for (const listener of this.deviceChangeListeners) {\n      AsyncScheduler_1.default.nextTick(() => {\n        /* istanbul ignore else */\n        if (this.deviceChangeListeners.has(listener)) {\n          const event = new Event('devicechange');\n\n          if (typeof listener === 'function') {\n            listener(event);\n          } else {\n            listener.handleEvent(event);\n          }\n        }\n      });\n    }\n  }\n\n}\n\nexports.default = MediaDeviceProxyHandler;\nMediaDeviceProxyHandler.INTERVAL_MS = 1000;","map":{"version":3,"sources":["../../src/mediadevicefactory/MediaDeviceProxyHandler.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAA,gBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AACA,MAAA,mBAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AASA,MAAqB,uBAArB,CAA4C;AAA5C,EAAA,WAAA,GAAA;AAGU,SAAA,SAAA,GAAsC,IAAtC;AACA,SAAA,OAAA,GAAoC,IAApC;AACA,SAAA,qBAAA,GAAiE,IAAI,GAAJ,EAAjE,CALV,CAOE;;AACA,SAAA,GAAA,GAAM,CAAC,MAAD,EAAuB,QAAvB,EAA8C,QAA9C,KAAoE;AACxE,UAAI,CAAC,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,QAApB,CAAL,EAAoC;AAClC,eAAO,SAAP;AACD;;AACD,UAAI,EAAE,oBAAoB,SAAS,CAAC,YAAhC,CAAJ,EAAmD;AACjD,YAAI,QAAQ,KAAK,kBAAjB,EAAqC;AACnC,iBAAO,KAAK,qBAAL,CAA2B,MAA3B,EAAmC,QAAnC,EAA6C,QAA7C,CAAP;AACD,SAFD,MAEO,IAAI,QAAQ,KAAK,qBAAjB,EAAwC;AAC7C,iBAAO,KAAK,wBAAL,CAA8B,MAA9B,EAAsC,QAAtC,EAAgD,QAAhD,CAAP;AACD;AACF;;AACD,YAAM,KAAK,GAAG,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,QAApB,EAA8B,QAA9B,CAAd;AACA,aAAO,OAAO,KAAP,KAAiB,UAAjB,GAA8B,KAAK,CAAC,IAAN,CAAW,MAAX,CAA9B,GAAmD,KAA1D;AACD,KAbD;;AAeQ,SAAA,qBAAA,GAAwB,CAC9B,MAD8B,EAE9B,QAF8B,EAG9B;AACA,IAAA,QAJ8B,KAKV;AACpB,YAAM,KAAK,GAAG,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,QAApB,EAA8B,QAA9B,CAAd;AACA,aAAO,CACL,IADK,EAEL,QAFK,EAGL,OAHK,KAIH;AACF,YAAI,IAAI,KAAK,cAAb,EAA6B;AAC3B,eAAK,qBAAL,CAA2B,GAA3B,CAA+B,QAA/B;;AACA,cAAI,CAAC,KAAK,SAAV,EAAqB;AACnB,iBAAK,SAAL,GAAiB,IAAI,mBAAA,CAAA,OAAJ,CAAsB,uBAAuB,CAAC,WAA9C,CAAjB;AACA,iBAAK,SAAL,CAAe,KAAf,CAAqB,KAAK,eAA1B;AACD;AACF,SAND,MAMO;AACL,iBAAO,OAAO,CAAC,KAAR,CAAc,KAAd,EAAqB,MAArB,EAA6B,CAAC,IAAD,EAAO,QAAP,EAAiB,OAAjB,CAA7B,CAAP;AACD;AACF,OAdD;AAeD,KAtBO;;AAwBA,SAAA,wBAAA,GAA2B,CACjC,MADiC,EAEjC,QAFiC,EAGjC;AACA,IAAA,QAJiC,KAKb;AACpB,YAAM,KAAK,GAAG,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,QAApB,EAA8B,QAA9B,CAAd;AACA,aAAO,CACL,IADK,EAEL,QAFK,EAGL,OAHK,KAIH;AACF,YAAI,IAAI,KAAK,cAAb,EAA6B;AAC3B,eAAK,qBAAL,CAA2B,MAA3B,CAAkC,QAAlC;;AACA,cAAI,KAAK,qBAAL,CAA2B,IAA3B,KAAoC,CAApC,IAAyC,KAAK,SAAlD,EAA6D;AAC3D,iBAAK,SAAL,CAAe,IAAf;AACA,iBAAK,SAAL,GAAiB,IAAjB;AACD;AACF,SAND,MAMO;AACL,iBAAO,OAAO,CAAC,KAAR,CAAc,KAAd,EAAqB,MAArB,EAA6B,CAAC,IAAD,EAAO,QAAP,EAAiB,OAAjB,CAA7B,CAAP;AACD;AACF,OAdD;AAeD,KAtBO;;AAwBA,SAAA,eAAA,GAAkB,MAA0B,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAClD,YAAM,UAAU,GAAG,MAAM,KAAK,gBAAL,EAAzB;;AACA,UAAI,KAAK,OAAT,EAAkB;AAChB,cAAM,OAAO,GACX,UAAU,CAAC,MAAX,KAAsB,KAAK,OAAL,CAAa,MAAnC,IACA,UAAU,CAAC,IAAX,CAAgB,CAAC,MAAD,EAA0B,KAA1B,KAA2C;AACzD,iBAAO,MAAM,CAAC,QAAP,KAAoB,KAAK,OAAL,CAAa,KAAb,EAAoB,QAA/C;AACD,SAFD,CAFF;;AAKA,YAAI,OAAJ,EAAa;AACX,eAAK,uBAAL;AACD;AACF;;AACD,WAAK,OAAL,GAAe,UAAf;AACD,KAbmD,CAA5C;AA4CT;;AA7Be,EAAA,gBAAgB,GAAA;;AAC5B;AACA,YAAM,UAAU,GAAG,MAAM,SAAS,CAAC,YAAV,CAAuB,gBAAvB,EAAzB;AACA,aAAO,UAAU,CAAC,IAAX,CAAgB,CAAC,OAAD,EAA2B,OAA3B,KAAuD;AAC5E,YAAI,OAAO,CAAC,QAAR,GAAmB,OAAO,CAAC,QAA/B,EAAyC;AACvC,iBAAO,CAAP;AACD;;AACD,YAAI,OAAO,CAAC,QAAR,GAAmB,OAAO,CAAC,QAA/B,EAAyC;AACvC,iBAAO,CAAC,CAAR;AACD;;AACD,eAAO,CAAP;AACD,OARM,CAAP;AASD,K;AAAA;;AAEO,EAAA,uBAAuB,GAAA;AAC7B,SAAK,MAAM,QAAX,IAAuB,KAAK,qBAA5B,EAAmD;AACjD,MAAA,gBAAA,CAAA,OAAA,CAAe,QAAf,CAAwB,MAAK;AAC3B;AACA,YAAI,KAAK,qBAAL,CAA2B,GAA3B,CAA+B,QAA/B,CAAJ,EAA8C;AAC5C,gBAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,cAAV,CAAd;;AACA,cAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAA,QAAQ,CAAC,KAAD,CAAR;AACD,WAFD,MAEO;AACL,YAAA,QAAQ,CAAC,WAAT,CAAqB,KAArB;AACD;AACF;AACF,OAVD;AAWD;AACF;;AAlHyC;;AAA5C,OAAA,CAAA,OAAA,GAAA,uBAAA;AACiB,uBAAA,CAAA,WAAA,GAAsB,IAAtB","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nclass MediaDeviceProxyHandler {\n    constructor() {\n        this.scheduler = null;\n        this.devices = null;\n        this.deviceChangeListeners = new Set();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\n        this.get = (target, property, receiver) => {\n            if (!Reflect.has(target, property)) {\n                return undefined;\n            }\n            if (!('ondevicechange' in navigator.mediaDevices)) {\n                if (property === 'addEventListener') {\n                    return this.patchAddEventListener(target, property, receiver);\n                }\n                else if (property === 'removeEventListener') {\n                    return this.patchRemoveEventListener(target, property, receiver);\n                }\n            }\n            const value = Reflect.get(target, property, receiver);\n            return typeof value === 'function' ? value.bind(target) : value;\n        };\n        this.patchAddEventListener = (target, property, \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        receiver) => {\n            const value = Reflect.get(target, property, receiver);\n            return (type, listener, options) => {\n                if (type === 'devicechange') {\n                    this.deviceChangeListeners.add(listener);\n                    if (!this.scheduler) {\n                        this.scheduler = new IntervalScheduler_1.default(MediaDeviceProxyHandler.INTERVAL_MS);\n                        this.scheduler.start(this.pollDeviceLists);\n                    }\n                }\n                else {\n                    return Reflect.apply(value, target, [type, listener, options]);\n                }\n            };\n        };\n        this.patchRemoveEventListener = (target, property, \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        receiver) => {\n            const value = Reflect.get(target, property, receiver);\n            return (type, listener, options) => {\n                if (type === 'devicechange') {\n                    this.deviceChangeListeners.delete(listener);\n                    if (this.deviceChangeListeners.size === 0 && this.scheduler) {\n                        this.scheduler.stop();\n                        this.scheduler = null;\n                    }\n                }\n                else {\n                    return Reflect.apply(value, target, [type, listener, options]);\n                }\n            };\n        };\n        this.pollDeviceLists = () => __awaiter(this, void 0, void 0, function* () {\n            const newDevices = yield this.sortedDeviceList();\n            if (this.devices) {\n                const changed = newDevices.length !== this.devices.length ||\n                    newDevices.some((device, index) => {\n                        return device.deviceId !== this.devices[index].deviceId;\n                    });\n                if (changed) {\n                    this.handleDeviceChangeEvent();\n                }\n            }\n            this.devices = newDevices;\n        });\n    }\n    sortedDeviceList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // @ts-ignore\n            const newDevices = yield navigator.mediaDevices.enumerateDevices();\n            return newDevices.sort((device1, device2) => {\n                if (device1.deviceId < device2.deviceId) {\n                    return 1;\n                }\n                if (device1.deviceId > device2.deviceId) {\n                    return -1;\n                }\n                return 0;\n            });\n        });\n    }\n    handleDeviceChangeEvent() {\n        for (const listener of this.deviceChangeListeners) {\n            AsyncScheduler_1.default.nextTick(() => {\n                /* istanbul ignore else */\n                if (this.deviceChangeListeners.has(listener)) {\n                    const event = new Event('devicechange');\n                    if (typeof listener === 'function') {\n                        listener(event);\n                    }\n                    else {\n                        listener.handleEvent(event);\n                    }\n                }\n            });\n        }\n    }\n}\nexports.default = MediaDeviceProxyHandler;\nMediaDeviceProxyHandler.INTERVAL_MS = 1000;\n//# sourceMappingURL=MediaDeviceProxyHandler.js.map"]},"metadata":{},"sourceType":"script"}