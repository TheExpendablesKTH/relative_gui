{"ast":null,"code":"\"use strict\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\n\nconst NoOpDebugLogger_1 = require(\"../logger/NoOpDebugLogger\");\n\nconst NoOpMediaStreamBroker_1 = require(\"../mediastreambroker/NoOpMediaStreamBroker\");\n\nconst MeetingSessionConfiguration_1 = require(\"../meetingsession/MeetingSessionConfiguration\");\n\nconst MeetingSessionCredentials_1 = require(\"../meetingsession/MeetingSessionCredentials\");\n\nconst MeetingSessionURLs_1 = require(\"../meetingsession/MeetingSessionURLs\");\n\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\n\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\n\nconst DefaultAudioVideoController_1 = require(\"./DefaultAudioVideoController\");\n\nclass NoOpAudioVideoController extends DefaultAudioVideoController_1.default {\n  constructor(configuration) {\n    const emptyConfiguration = new MeetingSessionConfiguration_1.default();\n    emptyConfiguration.meetingId = '';\n    emptyConfiguration.externalMeetingId = '';\n    emptyConfiguration.credentials = new MeetingSessionCredentials_1.default();\n    emptyConfiguration.credentials.attendeeId = '';\n    emptyConfiguration.credentials.joinToken = '';\n    emptyConfiguration.urls = new MeetingSessionURLs_1.default();\n    emptyConfiguration.urls.turnControlURL = '';\n    emptyConfiguration.urls.audioHostURL = '';\n    emptyConfiguration.urls.screenViewingURL = '';\n    emptyConfiguration.urls.screenDataURL = '';\n    emptyConfiguration.urls.screenSharingURL = 'wss://localhost/';\n    emptyConfiguration.urls.signalingURL = 'wss://localhost/';\n    super(configuration ? configuration : emptyConfiguration, new NoOpDebugLogger_1.default(), new DefaultWebSocketAdapter_1.default(new NoOpDebugLogger_1.default()), new NoOpMediaStreamBroker_1.default(), new DefaultReconnectController_1.default(0, new FullJitterBackoff_1.default(0, 0, 0)));\n  }\n\n  setAudioProfile(_audioProfile) {}\n\n  start() {}\n\n  stop() {}\n\n}\n\nexports.default = NoOpAudioVideoController;","map":{"version":3,"sources":["../../src/audiovideocontroller/NoOpAudioVideoController.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAGA,MAAA,mBAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,MAAA,uBAAA,GAAA,OAAA,CAAA,4CAAA,CAAA;;AACA,MAAA,6BAAA,GAAA,OAAA,CAAA,+CAAA,CAAA;;AACA,MAAA,2BAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;;AACA,MAAA,oBAAA,GAAA,OAAA,CAAA,sCAAA,CAAA;;AACA,MAAA,4BAAA,GAAA,OAAA,CAAA,mDAAA,CAAA;;AACA,MAAA,yBAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;;AACA,MAAA,6BAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAEA,MAAqB,wBAArB,SAAsD,6BAAA,CAAA,OAAtD,CAAiF;AAC/E,EAAA,WAAA,CAAY,aAAZ,EAAuD;AACrD,UAAM,kBAAkB,GAAG,IAAI,6BAAA,CAAA,OAAJ,EAA3B;AACA,IAAA,kBAAkB,CAAC,SAAnB,GAA+B,EAA/B;AACA,IAAA,kBAAkB,CAAC,iBAAnB,GAAuC,EAAvC;AACA,IAAA,kBAAkB,CAAC,WAAnB,GAAiC,IAAI,2BAAA,CAAA,OAAJ,EAAjC;AACA,IAAA,kBAAkB,CAAC,WAAnB,CAA+B,UAA/B,GAA4C,EAA5C;AACA,IAAA,kBAAkB,CAAC,WAAnB,CAA+B,SAA/B,GAA2C,EAA3C;AACA,IAAA,kBAAkB,CAAC,IAAnB,GAA0B,IAAI,oBAAA,CAAA,OAAJ,EAA1B;AACA,IAAA,kBAAkB,CAAC,IAAnB,CAAwB,cAAxB,GAAyC,EAAzC;AACA,IAAA,kBAAkB,CAAC,IAAnB,CAAwB,YAAxB,GAAuC,EAAvC;AACA,IAAA,kBAAkB,CAAC,IAAnB,CAAwB,gBAAxB,GAA2C,EAA3C;AACA,IAAA,kBAAkB,CAAC,IAAnB,CAAwB,aAAxB,GAAwC,EAAxC;AACA,IAAA,kBAAkB,CAAC,IAAnB,CAAwB,gBAAxB,GAA2C,kBAA3C;AACA,IAAA,kBAAkB,CAAC,IAAnB,CAAwB,YAAxB,GAAuC,kBAAvC;AACA,UACE,aAAa,GAAG,aAAH,GAAmB,kBADlC,EAEE,IAAI,iBAAA,CAAA,OAAJ,EAFF,EAGE,IAAI,yBAAA,CAAA,OAAJ,CAA4B,IAAI,iBAAA,CAAA,OAAJ,EAA5B,CAHF,EAIE,IAAI,uBAAA,CAAA,OAAJ,EAJF,EAKE,IAAI,4BAAA,CAAA,OAAJ,CAA+B,CAA/B,EAAkC,IAAI,mBAAA,CAAA,OAAJ,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAlC,CALF;AAOD;;AAED,EAAA,eAAe,CAAC,aAAD,EAA4B,CAAU;;AAErD,EAAA,KAAK,GAAA,CAAW;;AAEhB,EAAA,IAAI,GAAA,CAAW;;AA5BgE;;AAAjF,OAAA,CAAA,OAAA,GAAA,wBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\nconst NoOpDebugLogger_1 = require(\"../logger/NoOpDebugLogger\");\nconst NoOpMediaStreamBroker_1 = require(\"../mediastreambroker/NoOpMediaStreamBroker\");\nconst MeetingSessionConfiguration_1 = require(\"../meetingsession/MeetingSessionConfiguration\");\nconst MeetingSessionCredentials_1 = require(\"../meetingsession/MeetingSessionCredentials\");\nconst MeetingSessionURLs_1 = require(\"../meetingsession/MeetingSessionURLs\");\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\nconst DefaultAudioVideoController_1 = require(\"./DefaultAudioVideoController\");\nclass NoOpAudioVideoController extends DefaultAudioVideoController_1.default {\n    constructor(configuration) {\n        const emptyConfiguration = new MeetingSessionConfiguration_1.default();\n        emptyConfiguration.meetingId = '';\n        emptyConfiguration.externalMeetingId = '';\n        emptyConfiguration.credentials = new MeetingSessionCredentials_1.default();\n        emptyConfiguration.credentials.attendeeId = '';\n        emptyConfiguration.credentials.joinToken = '';\n        emptyConfiguration.urls = new MeetingSessionURLs_1.default();\n        emptyConfiguration.urls.turnControlURL = '';\n        emptyConfiguration.urls.audioHostURL = '';\n        emptyConfiguration.urls.screenViewingURL = '';\n        emptyConfiguration.urls.screenDataURL = '';\n        emptyConfiguration.urls.screenSharingURL = 'wss://localhost/';\n        emptyConfiguration.urls.signalingURL = 'wss://localhost/';\n        super(configuration ? configuration : emptyConfiguration, new NoOpDebugLogger_1.default(), new DefaultWebSocketAdapter_1.default(new NoOpDebugLogger_1.default()), new NoOpMediaStreamBroker_1.default(), new DefaultReconnectController_1.default(0, new FullJitterBackoff_1.default(0, 0, 0)));\n    }\n    setAudioProfile(_audioProfile) { }\n    start() { }\n    stop() { }\n}\nexports.default = NoOpAudioVideoController;\n//# sourceMappingURL=NoOpAudioVideoController.js.map"]},"metadata":{},"sourceType":"script"}